<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro2_2 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_PERMISSIONS # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>java.util.Set # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_USER_ID # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_ACCESS_TOKEN # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_USER_ID <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnSystemUiVisibilityChangeListener @0 <type>android.view.View EXP # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.simple_list_item <type>android.view.ViewGroup false # begin Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLines @0 <type>android.graphics.Canvas <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.User <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_pull_request_icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_comment_icon # end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_pull_request_icon # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View EXP # begin end For
<END>
<S2>
<S1>
android.widget.FrameLayout$setId @0 <type>android.widget.FrameLayout R.id.simple_fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add EXP <type>android.support.v4.app.FragmentTransaction R.id.simple_fragment <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.receive_result <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.results # MethodDeclaration
android.widget.TextView$getText EXP <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP android.widget.TextView.BufferType.EDITABLE # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View R.id.get # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText <type>android.text.Editable <type>android.widget.TextView # begin end Block
android.text.Editable$append @0 <type>android.text.Editable "\n" # begin end Block
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable "(cancelled)" # begin end Block
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable "(okay " # begin Block
android.text.Editable$append @0 <type>android.text.Editable EXP # Block
android.text.Editable$append @0 <type>android.text.Editable ") " # end Block
<END>
<S2>
<S1>
android.content.Intent$getAction EXP <type>android.content.Intent # begin Block
android.text.Editable$append @0 <type>android.text.Editable EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.fr_image_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById listView <type>android.view.View android.R.id.list # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.item_list_image <type>android.view.ViewGroup false # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.nostra13.universalimageloader.sample.R.id.text # Block
android.view.View$findViewById FIELD <type>android.view.View com.nostra13.universalimageloader.sample.R.id.image # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_listContainer # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_progressContainer # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onActivityResult handled by IABUtil." # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout EXP # begin end MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout it.gmariotti.cardslib.demo.extras.R.drawable.drawer_shadow android.view.Gravity.START # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$findViewById <type>android.view.View <type>android.support.v4.widget.DrawerLayout it.gmariotti.cardslib.demo.extras.R.id.navdrawer # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar it.gmariotti.cardslib.demo.extras.R.drawable.ic_navigation_drawer # begin end Block
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$isDrawerOpen EXP <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeAllViews @0 <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.icon # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.title # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.icon # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.title # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "_uri" <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin Block
android.os.Bundle$putAll @0 <type>android.os.Bundle EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle "_uri" # begin end MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # begin MethodDeclaration
android.content.Intent$removeExtra @0 <type>android.content.Intent "_uri" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofInt EXP this EXP EXP EXP EXP # begin end MethodDeclaration
android.animation.ObjectAnimator$setEvaluator @0 <type>android.animation.ObjectAnimator <type>android.animation.TypeEvaluator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$cancel @0 <type>android.animation.ObjectAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>android.support.v4.widget.DrawerLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioRecord$getMinBufferSize <type>int this samplingRate <type>int android.media.AudioFormat.ENCODING_PCM_16BIT # begin end ConstructorDeclaration
android.media.AudioRecord$startRecording @0 <type>android.media.AudioRecord # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.media.AudioRecord$stop @0 <type>android.media.AudioRecord # begin MethodDeclaration
android.media.AudioRecord$release @0 <type>android.media.AudioRecord # end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioRecord$read <type>int <type>android.media.AudioRecord <type>short EXP EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.AspectRatioView_aspectRatio 0 # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert EXP this android.provider.ContactsContract.RawContacts.CONTENT_URI # begin MethodDeclaration
android.content.ContentProviderOperation$newInsert EXP this android.provider.ContactsContract.Data.CONTENT_URI # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SimpleCursorAdapter$swapCursor @0 <type>android.widget.SimpleCursorAdapter <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SimpleCursorAdapter$swapCursor @0 <type>android.widget.SimpleCursorAdapter null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$requestLayout @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.refresh <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_details_header null # begin Block
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_commit_summary # Block
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.list_divider null # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.list_divider null # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_compare_file_details_header null # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_commit_file_summary # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.footer_separator null # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.github.pockethub.ui.HeaderFooterListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_diff_list <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>Object <type>android.widget.AdapterView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>Object <type>android.widget.AdapterView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this EXP EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this this # MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # MethodDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent 0 # begin MethodDeclaration
android.widget.OverScroller$forceFinished @0 <type>android.widget.OverScroller true # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$clear @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent 0 EXP # MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>int # begin MethodDeclaration
android.view.VelocityTracker$getYVelocity <type>int <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.widget.OverScroller$forceFinished @0 <type>android.widget.OverScroller true # MethodDeclaration
android.widget.OverScroller$fling @0 <type>android.widget.OverScroller 0 <type>int 0 <type>int 0 0 <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$getCurrY <type>float <type>android.widget.OverScroller # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.txt_title # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.txt_title # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>MyAdapter # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_pager_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentList" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean this.rounded <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_roundedCorners false # begin TryBlock
android.content.res.TypedArray$getBoolean this.outline <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_showOutline false # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_buttonMode EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_bootstrapBrand EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_bootstrapSize EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>com.beardedhen.androidbootstrap.api.defaults.ButtonMode # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.OutlineableView.KEY <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.OutlineableView.KEY # begin Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY # Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle <type>String # end Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray <type>int # begin end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray <type>int <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray <type>int android.R.anim.linear_interpolator # end ConstructorDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray <type>int <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray <type>int # end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray <type>int <type>boolean # begin ConstructorDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray <type>int <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$getNumberOfLayers <type>int <type>android.graphics.drawable.LayerDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$getId <type>int <type>android.graphics.drawable.LayerDrawable <type>int # begin Block
android.graphics.drawable.LayerDrawable$getDrawable EXP <type>android.graphics.drawable.LayerDrawable <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$getId EXP <type>android.graphics.drawable.LayerDrawable <type>int # begin Block
android.graphics.drawable.LayerDrawable$setId @0 <type>android.graphics.drawable.LayerDrawable <type>int EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBitmap <type>android.graphics.Bitmap <type>android.graphics.drawable.Drawable # begin end Block
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.AnimationDrawable$getNumberOfFrames <type>int <type>android.graphics.drawable.AnimationDrawable # begin Block
android.graphics.drawable.AnimationDrawable$isOneShot EXP <type>android.graphics.drawable.AnimationDrawable # Block
android.graphics.drawable.AnimationDrawable$setOneShot @0 <type>android.graphics.drawable.AnimationDrawable EXP # end Block
android.graphics.drawable.AnimationDrawable$setLevel @0 <type>android.graphics.drawable.AnimationDrawable 10000 # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.AnimationDrawable$getFrame EXP <type>android.graphics.drawable.AnimationDrawable <type>int # begin Block
android.graphics.drawable.Drawable$setLevel @0 <type>android.graphics.drawable.Drawable 10000 # Block
android.graphics.drawable.AnimationDrawable$getDuration EXP <type>android.graphics.drawable.AnimationDrawable <type>int # Block
android.graphics.drawable.AnimationDrawable$addFrame @0 <type>android.graphics.drawable.AnimationDrawable <type>android.graphics.drawable.Drawable EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin Block
android.graphics.drawable.Drawable$getMinimumHeight <type>int <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$findDrawableByLayerId <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$setRepeatMode @0 <type>android.view.animation.AlphaAnimation <type>int # begin Block
android.view.animation.AlphaAnimation$setRepeatCount @0 <type>android.view.animation.AlphaAnimation android.view.animation.Animation.INFINITE # Block
android.view.animation.AlphaAnimation$setDuration @0 <type>android.view.animation.AlphaAnimation <type>int # Block
android.view.animation.AlphaAnimation$setInterpolator @0 <type>android.view.animation.AlphaAnimation <type>android.view.animation.Interpolator # Block
android.view.animation.AlphaAnimation$setStartTime @0 <type>android.view.animation.AlphaAnimation android.view.animation.Animation.START_ON_FIRST_FRAME # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$stop @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator EXP this <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds <type>android.graphics.Rect <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # end Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$getTransformation @0 <type>android.view.animation.AlphaAnimation <type>long <type>android.view.animation.Transformation # begin Block
android.view.animation.Transformation$getAlpha <type>float <type>android.view.animation.Transformation # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setLevel @0 <type>android.graphics.drawable.Drawable EXP # begin end TryBlock
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$start @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.view.View$resolveSizeAndState EXP this <type>int <type>int 0 # begin Block
android.view.View$resolveSizeAndState EXP this <type>int <type>int 0 # end Block
<END>
<S2>
<S1>
android.view.View$resolveSize EXP this <type>int <type>int # begin Block
android.view.View$resolveSize EXP this <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$setItemCount @0 <type>android.view.accessibility.AccessibilityEvent <type>int # begin MethodDeclaration
android.view.accessibility.AccessibilityEvent$setCurrentItemIndex @0 <type>android.view.accessibility.AccessibilityEvent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.InkPageIndicator_dotDiameter EXP # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.InkPageIndicator_dotGap EXP # ConstructorDeclaration
android.content.res.TypedArray$getInteger <type>long <type>android.content.res.TypedArray R.styleable.InkPageIndicator_animationDuration <type>int # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.InkPageIndicator_pageIndicatorColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.InkPageIndicator_currentPageIndicatorColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$addOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin MethodDeclaration
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # MethodDeclaration
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin end MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # begin Block
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$addCircle @0 <type>android.graphics.Path EXP <type>float <type>float android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # Block
android.graphics.Path$rewind @0 <type>android.graphics.Path # Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 EXP true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # begin Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 270 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # begin Block
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float android.graphics.Path.Direction.CW # end Block
<END>
<S2>
<S1>
android.graphics.Path$addCircle @0 <type>android.graphics.Path <type>float <type>float EXP android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float <type>float <type>float # MethodDeclaration
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float android.graphics.Path.Direction.CW # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator <type>android.view.animation.Interpolator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "PageIndicator" EXP # begin end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet$cancel @0 <type>android.animation.AnimatorSet # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageState <type>String this # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end Block
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end Block
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin MethodDeclaration
android.content.Context$getPackageName EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$checkCallingOrSelfPermission <type>int <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this <type>android.content.Context # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this <type>android.content.Context # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getBundleExtra <type>android.os.Bundle <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_thumbnail <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$registerActivityLifecycleCallbacks @0 <type>android.app.Application <type>android.app.Application.ActivityLifecycleCallbacks # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$unregisterActivityLifecycleCallbacks @0 <type>android.app.Application <type>android.app.Application.ActivityLifecycleCallbacks # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 140 234 255 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.welcome_tos_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getOverlay EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$getPaddingLeft FIELD <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingTop FIELD <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight FIELD <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom FIELD <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getClipBounds <type>android.graphics.Rect <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Rect$inset @0 <type>android.graphics.Rect EXP EXP # MethodDeclaration
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect android.graphics.Region.Op.REPLACE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas mMargins.right EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnPreDrawListener @0 <type>android.view.ViewTreeObserver <type>SizeDeterminerLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnPreDrawListener @0 <type>android.view.ViewTreeObserver <type>SizeDeterminerLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.WindowManager$getDefaultDisplay <type>android.view.Display <type>android.view.WindowManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Display$getSize @0 <type>android.view.Display <type>android.graphics.Point # begin end Block
<END>
<S2>
<S1>
android.view.Display$getWidth EXP <type>android.view.Display # begin Block
android.view.Display$getHeight EXP <type>android.view.Display # end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>ImageAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_expand_text1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_expand_text2 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_expand_text3 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_expand_text4 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Lorem ipsum dolor sit amet, consectetur adipisici elit..." # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Quis aute iure reprehenderit in voluptate velit esse cillum .." # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.app.Application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$getSharedPreferences EXP <type>android.app.Application <type>String android.content.Context.MODE_PRIVATE # begin end IfTrue
<END>
<S2>
<S1>
android.app.Application$getSharedPreferences EXP <type>android.app.Application <type>String android.content.Context.MODE_PRIVATE # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$getAttributeInt <type>int <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION android.media.ExifInterface.ORIENTATION_UNDEFINED # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix <type>int # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap 0 0 EXP EXP <type>android.graphics.Matrix true # Block
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG EXP # begin end TryBlock
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>Object <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.icon_tag # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.icon_fork # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this CrossfadeDrawerLayoutActvitiy.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end MethodDeclaration
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin MethodDeclaration
android.app.Activity$getApplication EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$append @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$append @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this <type>String # begin MethodDeclaration
android.widget.TextView$append @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Process$myPid EXP this # begin MethodDeclaration
android.os.Process$killProcess @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.LinearLayoutManager$setOrientation @0 <type>android.support.v7.widget.LinearLayoutManager android.support.v7.widget.LinearLayoutManager.VERTICAL # begin MethodDeclaration
android.view.LayoutInflater$from EXP this this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>Long <type>android.database.sqlite.SQLiteDatabase EXP null <type>android.content.ContentValues # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$update @0 <type>android.database.sqlite.SQLiteDatabase EXP <type>android.content.ContentValues EXP null # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnNames EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createScaledBitmap EXP this <type>android.graphics.Bitmap EXP EXP false # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream EXP this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$from EXP this <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$toString EXP <type>android.support.v7.graphics.Palette # begin MethodDeclaration
android.util.Log$d @0 this "onGenerated" EXP # MethodDeclaration
android.support.v7.graphics.Palette$getMutedSwatch <type>android.support.v7.graphics.Palette.Swatch <type>android.support.v7.graphics.Palette # MethodDeclaration
android.support.v7.graphics.Palette.Swatch$getRgb EXP <type>android.support.v7.graphics.Palette.Swatch # MethodDeclaration
android.content.Context$getApplicationContext EXP <type>android.content.Context # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this EXP org.bookdash.android.R.color.colorPrimary # MethodDeclaration
android.content.Context$getApplicationContext EXP <type>android.content.Context # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this EXP org.bookdash.android.R.color.colorAccent # MethodDeclaration
android.support.v7.graphics.Palette$getVibrantColor <type>int <type>android.support.v7.graphics.Palette EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette.Swatch$getHsl <type>float <type>android.support.v7.graphics.Palette.Swatch # begin Block
android.support.v4.graphics.ColorUtils$HSLToColor EXP this <type>float # end Block
<END>
<S2>
<S1>
android.app.ActionBar$setNavigationMode @0 <type>android.app.ActionBar android.app.ActionBar.NAVIGATION_MODE_TABS # begin MethodDeclaration
android.os.Bundle$putIntegerArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # MethodDeclaration
android.app.ActionBar$newTab EXP <type>android.app.ActionBar # MethodDeclaration
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP # MethodDeclaration
android.os.Bundle$putIntegerArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # MethodDeclaration
android.app.ActionBar$newTab EXP <type>android.app.ActionBar # MethodDeclaration
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onTabSelected called" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction R.id.fragment_container <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onTabUnselected called" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgePadding 4 # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeTextSize 12 # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeCornerRadius 2 # ConstructorDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeText # ConstructorDeclaration
android.support.v4.content.ContextCompat$getColor EXP this context com.github.chaossss.widget.R.color.default_badge_color # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeColor EXP # ConstructorDeclaration
android.support.v4.content.ContextCompat$getColor EXP this context com.github.chaossss.widget.R.color.default_badge_text_color # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeTextColor EXP # ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeWidthRatio 1 # ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.BadgedImageView_badgeHeightRatio 1 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View FIELD FIELD EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Color$alpha <type>int this <type>int # begin MethodDeclaration
android.graphics.Color$red <type>int this <type>int # MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this EXP <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin end MethodDeclaration
android.view.View$post @0 <type>android.view.View EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
android.widget.TextView$post @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getHeight EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this EXP <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_retain_instance <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View R.id.restart # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag <type>RetainedFragment <type>android.support.v4.app.FragmentManager "work" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.row_number <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.undo_row_undobutton # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.header EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.ForegroundView_android_foregroundGravity <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.ForegroundView_android_foreground # end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.ForegroundView_android_foregroundInsidePadding true # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # Block
android.view.Gravity$apply @0 this <type>int EXP EXP <type>android.graphics.Rect <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setHotspot @0 <type>android.graphics.drawable.Drawable <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "org" <type>com.alorma.github.sdk.bean.dto.response.User # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_news # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_repositories # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_following_self # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.os.Parcelable # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.graphics.Bitmap # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getParcelable EXP <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>LayoutParams # begin MethodDeclaration
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_INSIDE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_profile_picture_view_com_facebook_preset_size <type>int # begin MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_profile_picture_view_com_facebook_is_cropped <type>boolean # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createScaledBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap <type>int <type>int false # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View android.R.id.list # begin MethodDeclaration
android.widget.ListView$getParent <type>android.view.ViewGroup <type>android.widget.ListView # MethodDeclaration
android.view.ViewGroup$indexOfChild <type>int <type>android.view.ViewGroup <type>android.widget.ListView # MethodDeclaration
android.view.ViewGroup$removeViewAt @0 <type>android.view.ViewGroup <type>int # MethodDeclaration
android.widget.ListView$getLayoutParams EXP <type>android.widget.ListView # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>T <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getDouble EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$close @0 <type>android.os.ConditionVariable # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.os.ConditionVariable$open @0 <type>android.os.ConditionVariable # begin end Block
<END>
<S2>
<S1>
android.view.SubMenu$setHeaderTitle @0 <type>android.view.SubMenu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setHeaderTitle @0 <type>android.view.SubMenu <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setHeaderIcon @0 <type>android.view.SubMenu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setHeaderIcon @0 <type>android.view.SubMenu <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setHeaderView @0 <type>android.view.SubMenu <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$clearHeader @0 <type>android.view.SubMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setIcon @0 <type>android.view.SubMenu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$setIcon @0 <type>android.view.SubMenu <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$getItem EXP <type>android.view.SubMenu # begin end Block
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 100 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 100 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setId @0 <type>android.widget.LinearLayout 100 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setId @0 <type>android.widget.LinearLayout 101 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setTag @0 <type>android.widget.LinearLayout "100" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setTag @0 <type>android.widget.LinearLayout "101" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 10 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getQueue EXP <type>android.media.session.MediaController # begin Block
android.support.v17.leanback.widget.ArrayObjectAdapter$size EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter # Block
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 EXP # end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$size EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$clear @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin end MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$addAll @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$clear @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin end MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getDescription EXP <type>android.media.browse.MediaBrowser.MediaItem # begin Block
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP # end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP # begin end Block
android.media.session.MediaController$getQueue EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$clear @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin end MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent TvBrowseActivity.SAVED_MEDIA_ID EXP # Block
android.media.browse.MediaBrowser.MediaItem$getDescription EXP <type>android.media.browse.MediaBrowser.MediaItem # Block
android.content.Intent$putExtra @0 <type>android.content.Intent TvBrowseActivity.BROWSE_TITLE EXP # end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getQueueId EXP <type>android.media.session.MediaSession.QueueItem # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getRoot <type>String <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$subscribe @0 <type>android.media.browse.MediaBrowser <type>String <type>android.media.browse.MediaBrowser.SubscriptionCallback # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$unsubscribe @0 <type>android.media.browse.MediaBrowser <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # end ClassDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction EXP <type>android.app.FragmentManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentById <type>com.example.scrumptious.picker.FriendPickerFragment <type>android.app.FragmentManager R.id.picker_fragment # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentById <type>com.example.scrumptious.picker.PlacePickerFragment <type>android.app.FragmentManager R.id.picker_fragment # begin end Block
<END>
<S2>
<S1>
android.location.LocationManager$getBestProvider <type>String <type>android.location.LocationManager <type>android.location.Criteria false # begin end TryBlock
<END>
<S2>
<S1>
android.location.LocationManager$getLastKnownLocation <type>android.location.Location <type>android.location.LocationManager <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin Block
android.location.LocationManager$requestLocationUpdates @0 <type>android.location.LocationManager <type>String 1 <type>int <type>android.location.LocationListener EXP # end Block
<END>
<S2>
<S1>
android.location.Location$distanceTo EXP <type>android.location.Location <type>android.location.Location # begin end Block
<END>
<S2>
<S1>
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager <type>android.location.LocationListener # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText <type>android.widget.Toast this this <type>String android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle EXP <type>android.app.AlertDialog.Builder R.string.error_dialog_title # begin end MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 0 # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this <type>java.io.File # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.TouchUtils$touchAndCancelView @0 this this <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$invalidate @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getScrollX EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollY EXP <type>android.view.View # begin Block
android.view.View$scrollTo @0 <type>android.view.View <type>int EXP # end Block
<END>
<S2>
<S1>
android.view.View$getScrollY EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollY EXP <type>android.view.View # begin Block
android.view.View$scrollTo @0 <type>android.view.View EXP <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
android.view.View$setAnimation @0 <type>android.view.View this # begin MethodDeclaration
android.graphics.RectF$union @0 <type>android.graphics.RectF <type>android.graphics.RectF # MethodDeclaration
android.util.FloatMath$floor EXP this FIELD # MethodDeclaration
android.util.FloatMath$floor EXP this FIELD # MethodDeclaration
android.util.FloatMath$ceil EXP this FIELD # MethodDeclaration
android.util.FloatMath$ceil EXP this FIELD # MethodDeclaration
android.view.View$invalidate @0 <type>android.view.View EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>float <type>android.view.View # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 <type>float <type>float # MethodDeclaration
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.graphics.RectF$offset @0 <type>android.graphics.RectF EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>float <type>android.view.View # end MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # begin Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end Block
<END>
<S2>
<S1>
android.view.animation.Transformation$setAlpha @0 <type>android.view.animation.Transformation <type>float # begin Block
android.view.animation.Transformation$getMatrix EXP <type>android.view.animation.Transformation # end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this <type>android.content.Context 0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin MethodDeclaration
android.content.Context$getSystemService <type>android.app.NotificationManager <type>android.content.Context android.content.Context.NOTIFICATION_SERVICE # MethodDeclaration
android.app.Notification.Builder$build EXP <type>android.app.Notification.Builder # MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # MethodDeclaration
android.util.Log$i @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerCount <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getActionMasked <type>int <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getActionIndex <type>int <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$findPointerIndex <type>int <type>android.view.MotionEvent EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId EXP <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent <type>int # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # end MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences <type>String 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String "" # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String null # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>LayoutParams # begin MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX EXP # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setPadding @0 <type>android.widget.TextView EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaDescription$getTitle EXP <type>android.media.MediaDescription # begin MethodDeclaration
android.media.MediaDescription$getSubtitle EXP <type>android.media.MediaDescription # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.app.Activity # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.example.android.uamp.R.id.play_eq # Block
android.view.View$findViewById FIELD <type>android.view.View com.example.android.uamp.R.id.title # Block
android.view.View$findViewById FIELD <type>android.view.View com.example.android.uamp.R.id.description # Block
android.view.View$setTag @0 <type>android.view.View <type>MediaItemViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>MediaItemViewHolder <type>android.view.View # begin Block
android.view.View$getTag <type>Integer <type>android.view.View com.example.android.uamp.R.id.tag_mediaitem_state_cache # end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View com.example.android.uamp.R.id.tag_mediaitem_state_cache <type>int # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getDrawable EXP <type>android.app.Activity com.example.android.uamp.R.drawable.ic_play_arrow_black_36dp # begin end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$getDrawable <type>android.graphics.drawable.AnimationDrawable <type>android.app.Activity com.example.android.uamp.R.drawable.ic_equalizer_white_36dp # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.drawable.AnimationDrawable$start @0 <type>android.graphics.drawable.AnimationDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getDrawable EXP <type>android.app.Activity com.example.android.uamp.R.drawable.ic_equalizer1_white_36dp # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.res.ColorStateList$valueOf <type>android.content.res.ColorStateList this EXP # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.res.ColorStateList$valueOf <type>android.content.res.ColorStateList this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu R.id.menu_zoom_toggle # begin end MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Environment$getExternalStoragePublicDirectory EXP this android.os.Environment.DIRECTORY_DOWNLOADS # begin TryBlock
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 90 <type>java.io.FileOutputStream # TryBlock
android.content.Intent$setType @0 <type>android.content.Intent "image/png" # TryBlock
android.net.Uri$fromFile EXP this <type>java.io.File # TryBlock
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_STREAM EXP # TryBlock
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # end TryBlock
<END>
<S2>
<S1>
android.view.View$getId EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText <type>android.widget.Toast this SimpleSampleActivity.this <type>CharSequence android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$toString EXP <type>android.graphics.RectF # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$areAllItemsEnabled EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItem EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$hasStableIds EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView EXP <type>android.widget.ListAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$unregisterDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getFilter EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "rotationAngle" <type>float <type>float # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # end MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator EXP # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setAnimation @0 <type>android.widget.TextView <type>android.view.animation.Animation # begin MethodDeclaration
android.view.animation.Animation$start @0 <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getWritableDatabase EXP <type>android.database.sqlite.SQLiteOpenHelper # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getReadableDatabase EXP <type>android.database.sqlite.SQLiteOpenHelper # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$close @0 <type>android.database.sqlite.SQLiteOpenHelper # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$close @0 <type>android.database.sqlite.SQLiteOpenHelper # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this com.haarman.listviewanimations.R.string.explainexpand android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$isRecycled EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String com.morristaedt.mirror.requests.ForecastRequest.UNITS_US # begin MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String "" # MethodDeclaration
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String "" # MethodDeclaration
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String "" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$deleteDatabase @0 <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.BaselineGridTextView_lineHeightMultiplierHint 1f # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.BaselineGridTextView_lineHeightHint 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.BaselineGridTextView_topPaddingHint 0 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 4 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent <type>android.content.Context SmsReceiverService # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "result" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.FloatingActionButton$setOnClickListener @0 <type>android.support.design.widget.FloatingActionButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.Snackbar$make EXP this <type>android.view.View EXP android.support.design.widget.Snackbar.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.widget.Spinner$getOnItemSelectedListener EXP <type>android.widget.Spinner # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # MethodDeclaration
android.widget.ListView$performItemClick @0 <type>android.widget.ListView <type>android.view.View <type>int <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Spinner$getOnItemSelectedListener EXP <type>android.widget.Spinner # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # MethodDeclaration
android.widget.ListView$performItemClick @0 <type>android.widget.ListView <type>android.view.View <type>int <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # MethodDeclaration
android.widget.ListView$performItemClick @0 <type>android.widget.ListView <type>android.view.View <type>int <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getOnItemSelectedListener EXP <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getOnItemSelectedListener EXP <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # MethodDeclaration
android.widget.ListView$performItemClick @0 <type>android.widget.ListView <type>android.view.View <type>int <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo EXP <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin TryBlock
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end TryBlock
<END>
<S2>
<S1>
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_GENRE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_MEDIA_ID # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.AbsListView.LayoutParams # begin MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this FlexibleSpaceWithImageGridViewActivity.this "FAB is clicked" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.carddemo_extras_sticky_header null # MethodDeclaration
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_card_sticky_header_id # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this 255 187 115 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle "expires_in" EXPIRES_IN_DELTA # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" ACCESS_TOKEN # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "signed_request" <type>String # MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "error" ERROR_MESSAGE # begin MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "error" "access_denied" # begin MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "error" "service_disabled" # begin MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE_NUMBER EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_IS_COLLABORATOR <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_IS_OWNER <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_NAME FIELD # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_OWNER FIELD # Block
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER <type>com.alorma.github.sdk.bean.dto.response.User # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_NAME FIELD # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_OWNER FIELD # end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$remove @0 <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Object # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$get <type>IssueFragment <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin ClassDeclaration
android.net.Uri$withAppendedPath <type>android.net.Uri this <type>android.net.Uri <type>String # end ClassDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.ptr_classic_header_rotate_view # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.ptr_classic_header_rotate_view_header_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.ptr_classic_header_rotate_view_header_last_update # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.ptr_classic_header_rotate_view_progressbar # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.PtrClassicHeader_ptr_rotate_ani_time <type>int # begin end Block
<END>
<S2>
<S1>
android.view.animation.RotateAnimation$setInterpolator @0 <type>android.view.animation.RotateAnimation EXP # begin MethodDeclaration
android.view.animation.RotateAnimation$setDuration @0 <type>android.view.animation.RotateAnimation <type>int # MethodDeclaration
android.view.animation.RotateAnimation$setFillAfter @0 <type>android.view.animation.RotateAnimation true # MethodDeclaration
android.view.animation.RotateAnimation$setInterpolator @0 <type>android.view.animation.RotateAnimation EXP # MethodDeclaration
android.view.animation.RotateAnimation$setDuration @0 <type>android.view.animation.RotateAnimation <type>int # MethodDeclaration
android.view.animation.RotateAnimation$setFillAfter @0 <type>android.view.animation.RotateAnimation true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View INVISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View INVISIBLE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.cube_ptr_refreshing # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View INVISIBLE # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin Block
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.RotateAnimation # end Block
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin Block
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.RotateAnimation # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.cube_ptr_release_to_refresh # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>MyAdapter # begin MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$fromParts EXP this "mailto" "philjay.librarysup@gmail.com" null # begin SwitchCase
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_SUBJECT "MPAndroidChart Issue" # SwitchCase
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT "Your error report here..." # SwitchCase
android.content.Intent$createChooser EXP this <type>android.content.Intent "Report Problem" # end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.tvName # Block
android.view.View$findViewById FIELD <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.tvDesc # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtimeNanos EXP this # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction @0 <type>android.widget.TextView.OnEditorActionListener <type>android.widget.EditText 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction @0 <type>android.widget.TextView.OnEditorActionListener <type>android.widget.EditText 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction @0 <type>android.widget.TextView.OnEditorActionListener <type>android.widget.EditText <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction @0 <type>android.widget.TextView.OnEditorActionListener <type>android.widget.EditText 0 <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction EXP <type>android.widget.TextView.OnEditorActionListener <type>android.widget.EditText 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView.OnEditorActionListener$onEditorAction EXP <type>android.widget.TextView.OnEditorActionListener <type>android.widget.TextView 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAuthTokenByFeatures <type>android.accounts.AccountManagerFuture <type>android.accounts.AccountManager com.donnfelker.android.bootstrap.core.Constants.Auth.BOOTSTRAP_ACCOUNT_TYPE com.donnfelker.android.bootstrap.core.Constants.Auth.AUTHTOKEN_TYPE EXP <type>android.app.Activity null null null null # begin MethodDeclaration
android.accounts.AccountManagerFuture$getResult EXP <type>android.accounts.AccountManagerFuture # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin Block
android.widget.ImageView$setPadding @0 <type>android.widget.ImageView <type>int <type>int <type>int <type>int # Block
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 3 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>java.io.Serializable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Parcelable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putParcelableArrayListExtra @0 <type>android.content.Intent <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 4 10 # begin MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 8 10 # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 16 10 # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 32 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED by Receiver2" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar <type>String # begin end IfFalse
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_wrap # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_render_markdown # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # begin Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.show_raw_markdown # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.render_markdown # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.render_markdown # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.show_raw_markdown # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem true # begin end IfTrue
<END>
<S2>
<S1>
android.util.Base64$decode EXP this FIELD android.util.Base64.DEFAULT # begin MethodDeclaration
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.alorma.github.sdk.bean.dto.response.Repo # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem true # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Loading commit file contents failed" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable.ConstantState$newDrawable EXP <type>android.graphics.drawable.Drawable.ConstantState # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$isLooping EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$isPlaying EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$pause @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setLooping @0 <type>android.media.MediaPlayer <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$setVolume @0 <type>android.media.MediaPlayer <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$setVolume @0 <type>android.media.MediaPlayer <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer 0 # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer EXP # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$getCurrentPosition EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$getDuration EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_webview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.view.View R.id.scroll # MethodDeclaration
android.support.v4.app.Fragment$getView <type>android.view.ViewGroup <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup R.id.container # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMenuItemView_android_minWidth 0 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton this # begin MethodDeclaration
android.widget.ImageButton$setOnLongClickListener @0 <type>android.widget.ImageButton this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin MethodDeclaration
android.widget.ImageButton$getDrawable EXP <type>android.widget.ImageButton # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton GONE # begin end Block
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$getText EXP <type>android.view.accessibility.AccessibilityEvent # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$setGravity @0 <type>android.widget.Toast EXP EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$setGravity @0 <type>android.widget.Toast EXP 0 <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String AccessTokenSource.FACEBOOK_APPLICATION_WEB # begin MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getBooleanArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getBooleanArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getByte EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getByte EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getByteArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getByteArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getShort EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getShort EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getShortArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getShortArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getIntArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getIntArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getLongArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getLongArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getFloat EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getFloat EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getFloatArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getFloatArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getDouble EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getDouble EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getDoubleArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getDoubleArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getChar EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getChar EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getCharArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getCharArray EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getStringArrayList EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getStringArrayList EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getSerializable EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getSerializable EXP <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String 10 # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "ABC" # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String 100 # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "xyz" # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putIntArray @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShort @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShortArray @0 <type>android.os.Bundle <type>String <type>short # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByte @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle <type>String <type>byte # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBooleanArray @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLongArray @0 <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putFloat @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putFloatArray @0 <type>android.os.Bundle <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putDouble @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putDoubleArray @0 <type>android.os.Bundle <type>String <type>double # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putChar @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putCharArray @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # begin ConstructorDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>long # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$quit @0 <type>android.os.HandlerThread # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>int 0 # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.share.internal.ShareConstants.EXTRA_OBJECT_ID <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this EXP EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this EXP EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource EXP this this R.array.sections R.layout.sherlock_spinner_dropdown_item # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.root <type>RoundedColourFragment # begin MethodDeclaration
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.root <type>RoundedColourFragment # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "curChoice" 0 # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "curChoice" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$replace @0 <type>android.support.v4.app.FragmentTransaction R.id.details <type>DetailsFragment # begin Block
android.support.v4.app.FragmentTransaction$setTransition @0 <type>android.support.v4.app.FragmentTransaction android.support.v4.app.FragmentTransaction.TRANSIT_FRAGMENT_FADE # Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent EXP DetailsActivity # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent "index" <type>int # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "index" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP 4 EXP # begin MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # MethodDeclaration
android.widget.ScrollView$addView @0 <type>android.widget.ScrollView <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin TryBlock
android.net.Uri$toString EXP <type>android.net.Uri # end TryBlock
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.daimajia.swipedemo.adapter.ListViewAdapter # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setOnTouchListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setOnItemLongClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setOnScrollListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setOnItemSelectedListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setTitle @0 <type>android.app.ActionBar "ListView" # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getFirstVisiblePosition EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "ListView" "OnTouch" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "OnItemLongClickListener" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "ListView" "onScrollStateChanged" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "ListView" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "ListView" FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$isLoggable EXP this <type>String <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mHighlightPaint # end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mHighlightPaint # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#E2E2E2" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$withAppendedPath EXP this android.provider.ContactsContract.AUTHORITY_URI "display_photo" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$openInputStream EXP <type>android.content.ContentResolver <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$openInputStream <type>java.io.InputStream <type>android.content.ContentResolver <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getAuthority EXP <type>android.net.Uri # begin MethodDeclaration
android.net.Uri$getPath EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri <type>String null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin TryBlock
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.MediaStore.Images.ImageColumns.DATA # TryBlock
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.provider.MediaStore.Images.Media._ID # begin Block
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.MediaStore.Images.Thumbnails.DATA # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$getAttributeInt EXP <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION android.media.ExifInterface.ORIENTATION_NORMAL # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # end MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor EXP this EXP null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor @0 this EXP null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 <type>android.graphics.Paint # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View <type>Integer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float 0 <type>float <type>int <type>android.graphics.Paint # begin SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>float <type>android.graphics.Paint # begin SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 <type>float <type>float <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>int <type>float <type>float <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float 0 <type>float <type>float <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>int <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float 0 <type>float <type>float <type>android.graphics.Paint # begin SwitchCase
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray 0 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight FIELD <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth FIELD <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildCount <type>int <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # begin Block
android.support.v7.widget.RecyclerView$getPaddingLeft <type>int <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getWidth EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getPaddingRight EXP <type>android.support.v7.widget.RecyclerView # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.support.v7.widget.RecyclerView$getPaddingTop <type>int <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getHeight EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getPaddingBottom EXP <type>android.support.v7.widget.RecyclerView # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView <type>int # begin Block
android.view.View$getLayoutParams <type>android.support.v7.widget.RecyclerView.LayoutParams <type>android.view.View # end Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # begin Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView EXP # begin Block
android.view.View$getLayoutParams <type>android.support.v7.widget.RecyclerView.LayoutParams <type>android.view.View # end Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # begin Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutManager <type>android.support.v7.widget.LinearLayoutManager <type>android.support.v7.widget.RecyclerView # begin Block
android.support.v7.widget.LinearLayoutManager$getOrientation EXP <type>android.support.v7.widget.LinearLayoutManager # end Block
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent "com.google.android.gms" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$unbindService @0 <type>android.content.Context <type>GoogleAdServiceConnection # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end TryBlock
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # begin TryBlock
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # TryBlock
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # TryBlock
android.database.Cursor$getString FIELD <type>android.database.Cursor <type>int # end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor <type>int # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin Block
android.content.pm.PackageManager$getInstallerPackageName EXP <type>android.content.pm.PackageManager EXP # end Block
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$obtain <type>android.os.Parcel this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInterfaceToken @0 <type>android.os.Parcel "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService" # begin TryBlock
android.os.IBinder$transact @0 <type>android.os.IBinder <type>int <type>android.os.Parcel <type>android.os.Parcel 0 # TryBlock
android.os.Parcel$readException @0 <type>android.os.Parcel # TryBlock
android.os.Parcel$readString <type>String <type>android.os.Parcel # end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$recycle @0 <type>android.os.Parcel # begin Finally
android.os.Parcel$recycle @0 <type>android.os.Parcel # end Finally
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$obtain <type>android.os.Parcel this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInterfaceToken @0 <type>android.os.Parcel "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService" # begin TryBlock
android.os.Parcel$writeInt @0 <type>android.os.Parcel 1 # TryBlock
android.os.IBinder$transact @0 <type>android.os.IBinder <type>int <type>android.os.Parcel <type>android.os.Parcel 0 # TryBlock
android.os.Parcel$readException @0 <type>android.os.Parcel # TryBlock
android.os.Parcel$readInt EXP <type>android.os.Parcel # end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$recycle @0 <type>android.os.Parcel # begin Finally
android.os.Parcel$recycle @0 <type>android.os.Parcel # end Finally
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard_cab <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getPosition FIELD <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.TITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.SUBTITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.HEADER_COLUMN # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.ID_COLUMN # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.THUMBNAIL_COLUMN # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$getMenuInflater <type>android.view.MenuInflater <type>android.view.ActionMode # begin MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.carddemo_multichoice <type>android.view.Menu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Not implemented in this demo" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseBooleanArray$keyAt EXP <type>android.util.SparseBooleanArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_card_expand <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ScrollView <type>android.view.View it.gmariotti.cardslib.demo.R.id.card_scrollview # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_main_inner_simple_title # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView mTitle # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_inside_image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView it.gmariotti.cardslib.demo.R.drawable.rose # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this LinearLayoutActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_flexiblespacewithimagelistview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.AbsListView.LayoutParams # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.fragment_root # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SCROLL_Y 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.list_background # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray 0 android.view.Gravity.NO_GRAVITY # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoPanelHeight EXP # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoShadowHeight EXP # Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoParallaxOffset EXP # Block
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoFlingVelocity <type>int # Block
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoFadeColor <type>int # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoDragView EXP # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoScrollableView EXP # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoOverlay <type>boolean # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoClipPanel <type>boolean # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoAnchorPoint <type>float # Block
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoInitialState EXP # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoScrollInterpolator EXP # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this context <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View null # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin Block
android.view.View$setFocusable @0 <type>android.view.View false # Block
android.view.View$setFocusableInTouchMode @0 <type>android.view.View false # end Block
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getRight <type>int <type>android.view.View # Block
android.view.View$getTop <type>int <type>android.view.View # Block
android.view.View$getBottom <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getBackground <type>android.graphics.drawable.Drawable <type>android.view.View # begin MethodDeclaration
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin end Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_CANCEL # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollY EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ScrollView$getChildAt <type>android.view.View <type>android.widget.ScrollView 0 # begin Block
android.view.View$getBottom EXP <type>android.view.View # Block
android.widget.ScrollView$getHeight EXP <type>android.widget.ScrollView # Block
android.widget.ScrollView$getScrollY EXP <type>android.widget.ScrollView # end Block
<END>
<S2>
<S1>
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView 0 # begin Block
android.widget.ListView$getFirstVisiblePosition EXP <type>android.widget.ListView # Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.ListView$getChildCount EXP <type>android.widget.ListView # begin Block
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView EXP # Block
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # Block
android.widget.ListView$getLastVisiblePosition EXP <type>android.widget.ListView # Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.View$getBottom EXP <type>android.view.View # Block
android.widget.ListView$getBottom EXP <type>android.widget.ListView # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutManager <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.support.v7.widget.RecyclerView # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView 0 # begin Block
android.support.v7.widget.RecyclerView$getChildLayoutPosition EXP <type>android.support.v7.widget.RecyclerView <type>android.view.View # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedMeasuredHeight EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedTop EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildCount EXP <type>android.support.v7.widget.RecyclerView # begin Block
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView EXP # Block
android.support.v7.widget.RecyclerView$getAdapter EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedMeasuredHeight EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedBottom EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.support.v7.widget.RecyclerView$getBottom EXP <type>android.support.v7.widget.RecyclerView # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
android.view.View$requestLayout @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$requestLayout @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas android.graphics.Canvas.CLIP_SAVE_FLAG # begin end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getClipBounds @0 <type>android.graphics.Canvas <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin Block
android.view.View$getTop <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin Block
android.view.View$getBottom EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle ContentResolver.SYNC_EXTRAS_UPLOAD false # begin MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle ContentResolver.SYNC_EXTRAS_INITIALIZE false # MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas 0 <type>int <type>int <type>int <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas 0 <type>int <type>int <type>int <type>android.graphics.Paint # begin Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>int 0 <type>int <type>int <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_listview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.drawable.DrawerArrowDrawable$setColor @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable <type>int # begin MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$getLayoutParams EXP <type>android.widget.RelativeLayout # begin Block
android.widget.RelativeLayout$getMeasuredHeight EXP <type>android.widget.RelativeLayout # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchBarWidth android.view.ViewGroup.LayoutParams.MATCH_PARENT # begin TryBlock
android.view.View$getLayoutParams EXP <type>android.view.View # TryBlock
android.view.View$getLayoutParams EXP <type>android.view.View # TryBlock
android.view.View$getLayoutParams EXP <type>android.view.View # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchBarMarginLeft <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchBarMarginTop <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchBarMarginRight <type>int # TryBlock
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # TryBlock
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # TryBlock
android.widget.RelativeLayout$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.widget.RelativeLayout # TryBlock
android.view.View$getLayoutParams EXP <type>android.view.View # TryBlock
android.widget.LinearLayout.LayoutParams$setMargins @0 <type>android.widget.LinearLayout.LayoutParams <type>int 0 <type>int 0 # TryBlock
android.view.View$setLayoutParams @0 <type>android.view.View <type>LayoutParams # TryBlock
android.view.View$setLayoutParams @0 <type>android.view.View <type>LayoutParams # TryBlock
android.widget.RelativeLayout$setLayoutParams @0 <type>android.widget.RelativeLayout <type>android.widget.LinearLayout.LayoutParams # TryBlock
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchHint # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_showSearchHintWhenNotFocused <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_showMenuAction <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_showVoiceInput <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_showSearchKey <type>boolean # TryBlock
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_voiceRecHint # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_dismissOnOutsideTouch <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_showOverFlowMenu <type>boolean # TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_searchSuggestionTextSize EXP # end TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_hideOverflowMenuWhenFocused <type>boolean # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray R.styleable.FloatingSearchView_floatingSearch_menu 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
android.support.v7.view.menu.MenuBuilder$setCallback @0 <type>android.support.v7.view.menu.MenuBuilder EXP # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView GONE # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.EditText$setOnFocusChangeListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.EditText$setOnKeyListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText "" # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.support.v7.graphics.drawable.DrawerArrowDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end IfFalse
<END>
<S2>
<S1>
android.support.v7.graphics.drawable.DrawerArrowDrawable$setColor @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setEnabled @0 <type>android.widget.EditText <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.TextView # begin end MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.EditText # begin end MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setVisibility @0 <type>android.widget.EditText VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.TextView # begin end MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.EditText # begin end MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setVisibility @0 <type>android.widget.EditText INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth <type>int <type>android.widget.ImageView # begin end MethodDeclaration
android.widget.EditText$setPadding @0 <type>android.widget.EditText 0 0 <type>int 0 # begin MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView 0 0 <type>int 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth <type>int <type>android.widget.ImageView # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setClickable @0 <type>android.widget.ImageView true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # begin Block
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # Block
android.support.v7.view.ViewPropertyAnimatorCompatSet$playSequentially EXP <type>android.support.v7.view.ViewPropertyAnimatorCompatSet EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView 1.0f # begin Block
android.widget.ImageView$setTranslationX @0 <type>android.widget.ImageView 0 # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setClickable @0 <type>android.widget.ImageView false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # begin Block
android.support.v4.view.ViewCompat$animate EXP this <type>android.widget.ImageView # Block
android.support.v7.view.ViewPropertyAnimatorCompatSet$playSequentially EXP <type>android.support.v7.view.ViewPropertyAnimatorCompatSet EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView 0.0f # begin Block
android.widget.ImageView$setTranslationX @0 <type>android.widget.ImageView <type>int # end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$clearAll @0 <type>android.support.v7.view.menu.MenuBuilder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.drawable.DrawerArrowDrawable$setProgress @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setHint @0 <type>android.widget.EditText <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$setHint @0 <type>android.widget.EditText "" # begin end IfFalse
<END>
<S2>
<S1>
android.widget.EditText$setHint @0 <type>android.widget.EditText <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_PROMPT <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_LANGUAGE_MODEL android.speech.RecognizerIntent.LANGUAGE_MODEL_FREE_FORM # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_MAX_RESULTS 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringArrayListExtra <type>java.util.ArrayList <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_RESULTS # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$requestFocus @0 <type>android.widget.EditText # begin Block
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # Block
android.widget.EditText$getText EXP <type>android.widget.EditText # Block
android.widget.EditText$setSelection @0 <type>android.widget.EditText EXP # end Block
<END>
<S2>
<S1>
android.widget.EditText$setImeOptions @0 <type>android.widget.EditText android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$setImeOptions @0 <type>android.widget.EditText android.view.inputmethod.EditorInfo.IME_ACTION_NONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.LinearLayoutManager # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setItemAnimator @0 <type>android.support.v7.widget.RecyclerView null # end MethodDeclaration
android.support.v7.widget.RecyclerView$addOnItemTouchListener @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>com.arlib.floatingsearchview.suggestions.SearchSuggestionsAdapter # begin MethodDeclaration
android.widget.RelativeLayout$setTranslationY @0 <type>android.widget.RelativeLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.GestureDetector$onTouchEvent @0 <type>android.view.GestureDetector <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$setSelection @0 <type>android.widget.EditText EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$setTranslationY @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin MethodDeclaration
android.support.v7.widget.RecyclerView$scrollBy @0 <type>android.support.v7.widget.RecyclerView 0 EXP # MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView android.graphics.Typeface.DEFAULT # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP android.widget.TextView.BufferType.SPANNABLE # MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>int # MethodDeclaration
android.support.v7.widget.RecyclerView$getWidth EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.widget.TextView$measure @0 <type>android.widget.TextView <type>int <type>int # MethodDeclaration
android.widget.TextView$getMeasuredHeight EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.support.v4.view.ViewCompat$animate EXP this <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setVisibility @0 <type>android.widget.RelativeLayout VISIBLE # begin Block
android.widget.EditText$requestFocus @0 <type>android.widget.EditText # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setVisibility @0 <type>android.widget.RelativeLayout android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText "" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView 1.0f # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0.0f 1.0f # begin end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.support.v7.graphics.drawable.DrawerArrowDrawable$setProgress @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.drawable.DrawerArrowDrawable$setProgress @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable 1.0f # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1.0f 0.0f # begin end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.support.v7.graphics.drawable.DrawerArrowDrawable$setProgress @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.drawable.DrawerArrowDrawable$setProgress @0 <type>android.support.v7.graphics.drawable.DrawerArrowDrawable 0.0f # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin MethodDeclaration
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin MethodDeclaration
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnTouchListener @0 <type>android.widget.RelativeLayout EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getLayoutDirection EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin Block
android.widget.RelativeLayout$setVisibility @0 <type>android.widget.RelativeLayout VISIBLE # Block
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # end Block
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeTypedList @0 <type>android.os.Parcel <type>java.util.List # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingTop <type>float <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading milestones" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>MyAdapter # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.issue272_fragment_pager_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentList" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x00 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x01 # begin Block
android.os.Parcel$writeList @0 <type>android.os.Parcel <type>java.util.List # end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentList" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getClass EXP <type>android.view.View # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction <type>int <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String 0 # begin Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String 0 # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String true # Block
android.os.Bundle$getParcelable EXP <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String 0 # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.widget.FrameLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$requestLayout @0 <type>android.widget.FrameLayout # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$requestLayout @0 <type>android.widget.FrameLayout # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>T android.view.ViewGroup.LayoutParams.MATCH_PARENT android.view.ViewGroup.LayoutParams.MATCH_PARENT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this <type>android.content.Context # begin MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # MethodDeclaration
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet R.styleable.PullToRefresh # end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrMode 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrAnimationStyle 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrRefreshableViewBackground # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrAdapterViewBackground # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrOverScroll true # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrScrollingWhileRefreshingEnabled false # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation EXP <type>android.view.animation.Interpolator EXP # begin end Block
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity <type>android.util.AttributeSet com.example.scrumptious.R.styleable.picker_friend_picker_fragment # begin MethodDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_friend_picker_fragment_multi_select <type>boolean # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean EXP <type>android.os.Bundle <type>String <type>boolean # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_DIALOG_OUTCOME <type>String # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "num_friends_picked" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>Set # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_about" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.demo_dialog_about null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.app_name_and_version # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.about_body # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "service created" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine created" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidLiveWallpaperService - onCreateEngine()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidLiveWallpaperService - onCreateApplication()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidLiveWallpaperService - initialize()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidLiveWallpaperService - getSurfaceHolder()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidLiveWallpaperService - onDeepPauseApplication()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "service destroyed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "service finalized" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine surface created" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.SurfaceHolder.Callback$surfaceCreated @0 <type>android.view.SurfaceHolder.Callback <type>android.view.SurfaceHolder # begin end Block
<END>
<S2>
<S1>
android.view.SurfaceHolder.Callback$surfaceDestroyed @0 <type>android.view.SurfaceHolder.Callback <type>android.view.SurfaceHolder # begin Block
android.view.SurfaceHolder.Callback$surfaceCreated @0 <type>android.view.SurfaceHolder.Callback <type>android.view.SurfaceHolder # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine surface changed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > surface is current, skipping surfaceChanged event" # begin end IfTrue
<END>
<S2>
<S1>
android.view.SurfaceHolder.Callback$surfaceChanged @0 <type>android.view.SurfaceHolder.Callback EXP <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > engine is not active, skipping surfaceChanged event" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > fake visibilityChanged event! Android WallpaperService likes do that!" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > visible state is current, skipping visibilityChanged event!" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine resumed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.SurfaceHolder.Callback$surfaceDestroyed @0 <type>android.view.SurfaceHolder.Callback EXP # begin Block
android.view.SurfaceHolder.Callback$surfaceCreated @0 <type>android.view.SurfaceHolder.Callback EXP # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine paused" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this AndroidLiveWallpaperService.TAG "wallpaper lifecycle error, counted too many visible engines! repairing.." # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String " > AndroidWallpaperEngine - onPause() done!" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "engine surface destroyed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.SurfaceHolder.Callback$surfaceDestroyed @0 <type>android.view.SurfaceHolder.Callback <type>android.view.SurfaceHolder # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.nfc.NfcAdapter$getDefaultAdapter <type>android.nfc.NfcAdapter this <type>android.app.Activity # begin end MethodDeclaration
android.nfc.NfcAdapter$setNdefPushMessage @0 <type>android.nfc.NfcAdapter EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent <type>android.content.Intent <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableArrayExtra <type>android.os.Parcelable <type>android.content.Intent android.nfc.NfcAdapter.EXTRA_NDEF_MESSAGES # begin Block
android.nfc.NdefMessage$getRecords EXP <type>android.nfc.NdefMessage # end Block
<END>
<S2>
<S1>
android.nfc.NdefRecord$getPayload EXP <type>android.nfc.NdefRecord # begin Block
android.net.Uri$parse EXP this EXP # Block
android.app.Activity$setIntent @0 <type>android.app.Activity <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent LoggingService.EXTRA_LOG "Log this message" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin ConstructorDeclaration
android.os.Looper$getMainLooper EXP this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Could not dump heap, external storage not mounted." # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Could not dump heap, previous analysis still is in progress." # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Did not dump heap, too much time waiting for Toast." # begin end Block
<END>
<S2>
<S1>
android.os.Debug$dumpHprofData @0 this EXP # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Could not attempt cleanup, external storage not mounted." # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$setGravity @0 <type>android.widget.Toast android.view.Gravity.CENTER_VERTICAL 0 0 # begin MethodDeclaration
android.widget.Toast$setDuration @0 <type>android.widget.Toast android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.leak_canary_heap_dump_toast null # MethodDeclaration
android.widget.Toast$setView @0 <type>android.widget.Toast EXP # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # MethodDeclaration
android.os.Looper$myQueue EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.content.Context$getTheme EXP <type>android.content.Context # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$red <type>int this <type>int # begin MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this EXP <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$reconfigure @0 <type>android.graphics.Bitmap <type>int <type>int <type>android.graphics.Bitmap.Config # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "nothing selected" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.test_list_item_layout <type>android.view.ViewGroup false # begin Block
android.view.View$findViewById FIELD <type>android.view.View R.id.text # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.header <type>android.view.ViewGroup false # begin Block
android.view.View$findViewById FIELD <type>android.view.View R.id.text1 # Block
android.view.View$setTag @0 <type>android.view.View <type>HeaderViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>HeaderViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$getWindow <type>android.view.Window <type>android.app.Dialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$getWindow EXP <type>android.app.Dialog # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$buildUpon <type>android.net.Uri.Builder <type>android.net.Uri # begin MethodDeclaration
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder <type>String EXP # MethodDeclaration
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder <type>String EXP # MethodDeclaration
android.net.Uri.Builder$build EXP <type>android.net.Uri.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.code_view <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_wrap # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end IfFalse
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.gist_file_view <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences com.github.pockethub.util.PreferenceUtils.WRAP false # begin end Block
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this <type>java.io.File # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this <type>java.io.File # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#00FF66" # begin ClassDeclaration
android.graphics.Color$parseColor <type>int this "#FF3300" # ClassDeclaration
android.graphics.Color$parseColor <type>int this "#FFFF00" # ClassDeclaration
android.graphics.Color$parseColor <type>int this "#99CCFF" # end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # MethodDeclaration
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # MethodDeclaration
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.VISIBLE # begin Block
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # end Block
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button false # begin end Block
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end Block
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE R.string.menu_use_https # begin MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE R.string.menu_clear_view # MethodDeclaration
android.view.Menu$add EXP <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE "Enable Logging" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE "Set Logging Verbosity" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "AsyncHttpClient returned error" <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin Block
android.util.Log$d @0 this <type>String <type>String # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setBackgroundColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView 10 10 10 10 # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$removeAllViews @0 <type>android.widget.LinearLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToNext @0 <type>android.media.session.MediaController.TransportControls # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToPrevious @0 <type>android.media.session.MediaController.TransportControls # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$pause @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$play @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin end SwitchCase
<END>
<S2>
<S1>
android.text.format.DateUtils$formatElapsedTime EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin MethodDeclaration
android.media.session.MediaController$getPlaybackState <type>android.media.session.PlaybackState <type>android.media.session.MediaController # MethodDeclaration
android.media.session.MediaController$getMetadata <type>android.media.MediaMetadata <type>android.media.session.MediaController # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>android.media.MediaDescription <type>android.content.Intent MusicPlayerActivity.EXTRA_CURRENT_MEDIA_DESCRIPTION # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$connect @0 <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$disconnect @0 <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.MediaDescription$getIconUri EXP <type>android.media.MediaDescription # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaDescription$getIconBitmap <type>android.graphics.Bitmap <type>android.media.MediaDescription # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.media.MediaDescription$getTitle EXP <type>android.media.MediaDescription # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.media.MediaDescription$getSubtitle EXP <type>android.media.MediaDescription # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getLong <type>int <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_DURATION # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar <type>int # MethodDeclaration
android.text.format.DateUtils$formatElapsedTime EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getActions EXP <type>android.media.session.PlaybackState # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.media.session.PlaybackState$getActions EXP <type>android.media.session.PlaybackState # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.INVISIBLE # begin SwitchCase
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # SwitchCase
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # SwitchCase
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end SwitchCase
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin SwitchCase
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.INVISIBLE # SwitchCase
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # SwitchCase
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # end SwitchCase
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.INVISIBLE # begin SwitchCase
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # SwitchCase
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin SwitchCase
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # SwitchCase
android.widget.TextView$setText @0 <type>android.widget.TextView com.example.android.uamp.R.string.loading # end SwitchCase
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.PlaybackState$getPosition <type>long <type>android.media.session.PlaybackState # begin end MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin Block
android.media.session.PlaybackState$getLastPositionUpdateTime EXP <type>android.media.session.PlaybackState # Block
android.media.session.PlaybackState$getPlaybackSpeed EXP <type>android.media.session.PlaybackState # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.action_items_content # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getY EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getY EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getY EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getY EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getX EXP <type>android.widget.AbsListView # begin MethodDeclaration
android.widget.AbsListView$getWidth EXP <type>android.widget.AbsListView # MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_DOWN <type>int <type>float 0 # end MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # begin MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_UP <type>int <type>float 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin Block
android.os.SystemClock$uptimeMillis EXP this # Block
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_MOVE <type>int <type>float 0 # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this ", " <type>String # begin end Block
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_search # begin MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionView <type>android.support.v7.widget.SearchView this <type>android.view.MenuItem # MethodDeclaration
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # MethodDeclaration
android.support.v7.widget.SearchView$setSearchableInfo @0 <type>android.support.v7.widget.SearchView EXP # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY <type>com.alorma.github.sdk.bean.dto.response.Repo # MethodDeclaration
android.support.v7.widget.SearchView$setAppSearchData @0 <type>android.support.v7.widget.SearchView <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # begin Block
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent android.app.SearchManager.QUERY # begin end IfTrue
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDecoratedBaseAdapter <type>android.widget.BaseAdapter <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$connect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$disconnect @0 <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # begin MethodDeclaration
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Path$close @0 <type>android.graphics.Path # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mRenderPaint # Block
android.graphics.Path$reset @0 <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_actionbarcontrollistview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.list # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getSupportActionBar <type>android.support.v7.app.ActionBar <type>android.support.v7.app.AppCompatActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.DatabaseUtils$appendValueToSql @0 this <type>StringBuilder <type>K # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this <type>android.content.Context 0 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin MethodDeclaration
android.content.Intent$setFlags @0 <type>android.content.Intent EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.map.MapActivity.EXTRA_ROOM "keynote" # MethodDeclaration
android.support.v4.app.TaskStackBuilder$create EXP this <type>android.content.Context # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.title_map # MethodDeclaration
android.support.v4.app.NotificationCompat.Builder$addAction @0 <type>android.support.v4.app.NotificationCompat.Builder com.google.samples.apps.iosched.R.drawable.ic_map_holo_dark EXP <type>android.app.PendingIntent # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getSystemService <type>android.app.NotificationManager <type>android.content.Context android.content.Context.NOTIFICATION_SERVICE # MethodDeclaration
android.support.v4.app.NotificationCompat.InboxStyle$build EXP <type>android.support.v4.app.NotificationCompat.InboxStyle # MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager 32534 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Signature verification failed." # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.contentDescription # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.contentTitle # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.previewPhoto 0 # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.video 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 20 20 android.graphics.Bitmap.Config.ALPHA_8 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_GIST_ID EXP # begin MethodDeclaration
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$remove @0 <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Object # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$get <type>GistFragment <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getDrawable EXP <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this EXP # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>Receiver <type>android.content.IntentFilter # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$sendBroadcast @0 <type>android.support.v4.content.LocalBroadcastManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>Receiver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 200 android.graphics.Bitmap.Config.RGB_565 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 200 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP com.example.android.uamp.R.string.error_loading_media android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.example.android.uamp.R.layout.fragment_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.example.android.uamp.R.id.playback_error # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.android.uamp.R.id.error_message # MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View com.example.android.uamp.R.id.list_view # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>BrowseAdapter # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$isConnected EXP <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$unsubscribe @0 <type>android.media.browse.MediaBrowser <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle MediaBrowserFragment.ARG_MEDIA_ID <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.example.android.uamp.R.string.error_no_connection # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.example.android.uamp.R.string.error_loading_media # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$isConnected EXP <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$unsubscribe @0 <type>android.media.browse.MediaBrowser <type>String # begin end Block
android.media.browse.MediaBrowser$subscribe @0 <type>android.media.browse.MediaBrowser <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getDescription EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getMetadata EXP <type>android.media.session.MediaController # begin Block
android.media.browse.MediaBrowser.MediaItem$getDescription EXP <type>android.media.browse.MediaBrowser.MediaItem # end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState <type>android.media.session.PlaybackState <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this AlarmCreateActivity.this 0 <type>android.content.Intent 0 # begin MethodDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this AlarmCreateActivity.this 0 <type>android.content.Intent 0 # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlarmManager$set @0 <type>android.app.AlarmManager android.app.AlarmManager.RTC_WAKEUP EXP <type>android.app.PendingIntent # begin MethodDeclaration
android.app.AlarmManager$set @0 <type>android.app.AlarmManager android.app.AlarmManager.RTC_WAKEUP EXP <type>android.app.PendingIntent # MethodDeclaration
android.widget.Toast$makeText EXP this EXP "Single Alarm Set" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.app.AlarmManager$setRepeating @0 <type>android.app.AlarmManager android.app.AlarmManager.ELAPSED_REALTIME EXP android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES <type>android.app.PendingIntent # MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # MethodDeclaration
android.app.AlarmManager$setRepeating @0 <type>android.app.AlarmManager android.app.AlarmManager.ELAPSED_REALTIME EXP android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES <type>android.app.PendingIntent # MethodDeclaration
android.widget.Toast$makeText EXP this EXP "Repeating Alarm Set" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.app.AlarmManager$setInexactRepeating @0 <type>android.app.AlarmManager android.app.AlarmManager.ELAPSED_REALTIME EXP android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES <type>android.app.PendingIntent # MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # MethodDeclaration
android.app.AlarmManager$setInexactRepeating @0 <type>android.app.AlarmManager android.app.AlarmManager.ELAPSED_REALTIME EXP android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES <type>android.app.PendingIntent # MethodDeclaration
android.widget.Toast$makeText EXP this EXP "Inexact Repeating Alarm Set" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlarmManager$cancel @0 <type>android.app.AlarmManager <type>android.app.PendingIntent # begin MethodDeclaration
android.app.AlarmManager$cancel @0 <type>android.app.AlarmManager <type>android.app.PendingIntent # MethodDeclaration
android.widget.Toast$makeText EXP this EXP "Repeating Alarms Cancelled" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>BitmapPreFillRunner # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_fragment_nativedash <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.demo.extras.ui.widget.CollectionView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.menu_collection_vew # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context it.gmariotti.cardslib.demo.extras.R.string.header_title_group1 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.name # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.name # begin MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.description # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin MethodDeclaration
android.content.Context$getString <type>String <type>android.content.Context FIELD # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.content.Context$getString <type>String <type>android.content.Context FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin MethodDeclaration
android.widget.Toast$makeText <type>android.widget.Toast this EXP <type>String android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$announceForAccessibility @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end Block
<END>
<S2>
<S1>
android.content.Context$getClassLoader EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getFragmentManager <type>android.app.FragmentManager <type>android.content.Context # begin Block
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction it.gmariotti.cardslib.demo.extras.R.id.container <type>BaseFragment # Block
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int <type>int EXP EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSparseParcelableArray @0 <type>android.os.Bundle <type>String <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getSparseParcelableArray <type>android.util.SparseArray <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$saveHierarchyState @0 <type>android.view.View <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putSparseParcelableArray @0 <type>android.os.Bundle EXP <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getSparseParcelableArray <type>android.util.SparseArray <type>android.os.Bundle EXP # begin end MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$restoreHierarchyState @0 <type>android.view.View <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivityOptions <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.ComponentName <type>android.content.Intent <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setComponent @0 <type>android.content.Intent EXP # begin Block
android.content.pm.ResolveInfo$loadLabel EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # Block
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getConfiguration EXP <type>android.content.res.Resources # begin MethodDeclaration
android.content.res.Resources$getBoolean EXP <type>android.content.res.Resources com.actionbarsherlock.R.bool.abs__config_showMenuShortcutsWhenKeyboardPresent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getMetaState <type>int <type>android.view.KeyEvent # begin MethodDeclaration
android.view.KeyEvent$getKeyData <type>boolean <type>android.view.KeyEvent <type>android.view.KeyCharacterMap.KeyData # end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getMetaState <type>int <type>android.view.KeyEvent # begin MethodDeclaration
android.view.KeyEvent$getKeyData @0 <type>android.view.KeyEvent <type>android.view.KeyCharacterMap.KeyData # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getText <type>CharSequence <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.view.Menu$clear @0 <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.StaggeredGridLayoutManager$setOrientation @0 <type>android.support.v7.widget.StaggeredGridLayoutManager android.support.v7.widget.LinearLayoutManager.VERTICAL # begin MethodDeclaration
android.view.LayoutInflater$from EXP this this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle ARG_SELECTED # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.cancel # begin MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP this # MethodDeclaration
android.app.Activity$getLayoutInflater <type>android.view.LayoutInflater <type>android.app.Activity # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.ListView <type>android.view.LayoutInflater com.github.pockethub.R.layout.dialog_list_view null # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SELECTED_CHOICE # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>RefListAdapter # end MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setSelection @0 <type>android.widget.ListView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Please input your Email and Password" # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Please input your Email and Password" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Wrong password!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Wrong password!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.MediaController$setEnabled @0 <type>android.widget.MediaController false # begin MethodDeclaration
android.widget.VideoView$setMediaController @0 <type>android.widget.VideoView <type>android.widget.MediaController # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.widget.VideoView$setVideoURI @0 <type>android.widget.VideoView EXP # end MethodDeclaration
android.widget.VideoView$setOnPreparedListener @0 <type>android.widget.VideoView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.MediaController$setEnabled @0 <type>android.widget.MediaController true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.VideoView$stopPlayback @0 <type>android.widget.VideoView # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "," EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.example.scrumptious.R.layout.usersettings_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.facebook.login.widget.LoginButton <type>android.view.View com.example.scrumptious.R.id.usersettings_fragment_login_button # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.scrumptious.R.id.usersettings_fragment_profile_name # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getBackground EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setShadowLayer @0 <type>android.widget.TextView 1f 0f EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.Drawable null null # begin Block
android.widget.TextView$setTag @0 <type>android.widget.TextView <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.Drawable null null # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setShadowLayer @0 <type>android.widget.TextView 0f 0f 0f <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null null null null # Block
android.widget.TextView$setTag @0 <type>android.widget.TextView null # end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # begin Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.BitmapDrawable null null # Block
android.widget.TextView$setTag @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>OurViewPagerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getDataString <type>String <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin TryBlock
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri "sid" # end TryBlock
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.TabLayout$setTabsFromPagerAdapter @0 <type>android.support.design.widget.TabLayout <type>OurViewPagerAdapter # begin end Block
android.support.design.widget.TabLayout$setOnTabSelectedListener @0 <type>android.support.design.widget.TabLayout EXP # begin Block
android.support.v4.view.ViewPager$setPageMargin @0 <type>android.support.v4.view.ViewPager EXP # Block
android.support.v4.view.ViewPager$setPageMarginDrawable @0 <type>android.support.v4.view.ViewPager com.google.samples.apps.iosched.R.drawable.page_margin # end Block
<END>
<S2>
<S1>
android.support.design.widget.TabLayout.Tab$getPosition EXP <type>android.support.design.widget.TabLayout.Tab # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP true # MethodDeclaration
android.support.design.widget.TabLayout.Tab$getPosition EXP <type>android.support.design.widget.TabLayout.Tab # MethodDeclaration
android.support.design.widget.TabLayout.Tab$getText EXP <type>android.support.design.widget.TabLayout.Tab # MethodDeclaration
android.widget.TextView$setContentDescription @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.TabLayout.Tab$getPosition EXP <type>android.support.design.widget.TabLayout.Tab # begin MethodDeclaration
android.support.design.widget.TabLayout.Tab$getText EXP <type>android.support.design.widget.TabLayout.Tab # MethodDeclaration
android.widget.TextView$setContentDescription @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 2 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.TabLayout$getTabAt <type>android.support.design.widget.TabLayout.Tab <type>android.support.design.widget.TabLayout <type>int # begin Block
android.view.LayoutInflater$inflate <type>android.widget.TextView <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.tab_my_schedule <type>android.support.design.widget.TabLayout false # Block
android.widget.TextView$setId @0 <type>android.widget.TextView EXP # Block
android.support.design.widget.TabLayout.Tab$getText EXP <type>android.support.design.widget.TabLayout.Tab # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
android.support.design.widget.TabLayout.Tab$setCustomView @0 <type>android.support.design.widget.TabLayout.Tab <type>android.widget.TextView # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.TabLayout.Tab$getText EXP <type>android.support.design.widget.TabLayout.Tab # begin Block
android.widget.TextView$setContentDescription @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.support.design.widget.TabLayout.Tab$getText EXP <type>android.support.design.widget.TabLayout.Tab # begin Block
android.widget.TextView$setContentDescription @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$announceForAccessibility @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollVertically EXP this <type>android.widget.ScrollView EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # Block
android.text.util.Linkify$addLinks @0 this <type>android.text.SpannableString android.text.util.Linkify.WEB_URLS # end Block
android.app.AlertDialog.Builder$setMessage @0 <type>android.app.AlertDialog.Builder <type>android.text.SpannableString # begin end Block
android.app.AlertDialog.Builder$create <type>android.app.AlertDialog <type>android.app.AlertDialog.Builder # begin Block
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # Block
android.app.AlertDialog$findViewById <type>android.widget.TextView <type>android.app.AlertDialog android.R.id.message # end Block
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder <type>String # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setNegativeButton @0 <type>android.app.AlertDialog.Builder <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog$cancel @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setPositiveButton @0 <type>android.app.AlertDialog.Builder <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.method.LinkMovementMethod$getInstance EXP this # begin Block
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.app.ListFragment$getListView EXP <type>android.app.ListFragment # begin MethodDeclaration
android.app.ListFragment$getArguments EXP <type>android.app.ListFragment # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ListFragment$setListAdapter @0 <type>android.app.ListFragment <type>MyScheduleAdapter # begin Block
android.app.ListFragment$getListView EXP <type>android.app.ListFragment # end Block
<END>
<S2>
<S1>
android.app.ListFragment$setListAdapter @0 <type>android.app.ListFragment EXP # begin Block
android.app.ListFragment$getListView EXP <type>android.app.ListFragment # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler this <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_SHARE_DIALOG_SHOW <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_SHARE_DIALOG_CONTENT_TYPE <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.session_finished # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString <type>String <type>android.content.Context com.google.samples.apps.iosched.R.string.unknown_room # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.session_subtitle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString <type>String <type>android.content.Context com.google.samples.apps.iosched.R.string.unknown_room # begin end Block
<END>
<S2>
<S1>
android.text.format.DateUtils$formatDateRange EXP this <type>android.content.Context <type>java.util.Formatter <type>long <type>long <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "" # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this <type>String # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.text.method.LinkMovementMethod$getInstance EXP this # Block
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.live_available # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$delete @0 <type>android.text.SpannableStringBuilder EXP EXP # begin Block
android.text.SpannableStringBuilder$delete @0 <type>android.text.SpannableStringBuilder EXP EXP # Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP EXP EXP android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getIntent <type>android.content.Intent <type>android.app.Activity # begin end MethodDeclaration
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this com.google.samples.apps.iosched.Config.SESSION_DETAIL_WEB_URL_PREFIX # begin MethodDeclaration
android.net.Uri$getPath <type>String <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPath <type>String <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setIntent @0 <type>android.app.Activity EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme <type>android.content.res.Resources.Theme <type>android.content.Context # begin end MethodDeclaration
android.content.res.Resources.Theme$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.res.Resources.Theme <type>int # begin end MethodDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray 0 0 # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this 255 EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$alpha EXP this <type>int # begin MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin MethodDeclaration
android.view.View$setFocusable @0 <type>android.view.View false # MethodDeclaration
android.view.View$setContentDescription @0 <type>android.view.View "" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setImportantForAccessibility @0 <type>android.view.View android.view.View.IMPORTANT_FOR_ACCESSIBILITY_NO # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.butter_bar_text # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View com.google.samples.apps.iosched.R.id.butter_bar_button # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin Block
android.text.TextUtils$isEmpty EXP this <type>String # Block
android.widget.Button$setVisibility @0 <type>android.widget.Button EXP # end Block
<END>
<S2>
<S1>
android.text.format.DateUtils$formatDateRange @0 this <type>android.content.Context EXP <type>long <type>long android.text.format.DateUtils.FORMAT_SHOW_TIME EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.PaintDrawable$setShape @0 <type>android.graphics.drawable.PaintDrawable EXP # begin MethodDeclaration
android.graphics.Color$alpha <type>int this <type>int # end MethodDeclaration
android.graphics.drawable.PaintDrawable$setShaderFactory @0 <type>android.graphics.drawable.PaintDrawable EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 0 0 0 # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF mHighlightPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mHighlightPaint # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View io.plaidapp.R.id.shot_spacer # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View io.plaidapp.R.id.shot_title # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View io.plaidapp.R.id.shot_description # MethodDeclaration
android.view.View$findViewById <type>android.widget.LinearLayout <type>android.view.View io.plaidapp.R.id.shot_actions # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View io.plaidapp.R.id.shot_like_count # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View io.plaidapp.R.id.shot_view_count # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View io.plaidapp.R.id.shot_share_action # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.player_name # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View io.plaidapp.R.id.player_avatar # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.shot_time_ago # MethodDeclaration
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$setOnScrollListener @0 <type>android.widget.ListView <type>android.widget.AbsListView.OnScrollListener # end MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # begin end MethodDeclaration
android.content.res.Resources$getQuantityString EXP <type>android.content.res.Resources io.plaidapp.R.plurals.likes FIELD EXP # begin MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button EXP # MethodDeclaration
android.content.res.Resources$getQuantityString EXP <type>android.content.res.Resources io.plaidapp.R.plurals.views FIELD EXP # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColorStateList EXP this this io.plaidapp.R.color.dribbble_links # begin Block
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.dribbble_link_highlight # end Block
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View <type>android.text.Spanned # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.format.DateUtils$getRelativeTimeSpanString EXP this EXP EXP android.text.format.DateUtils.SECOND_IN_MILLIS # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.app.assist.AssistContent$setWebUri @0 <type>android.app.assist.AssistContent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View io.plaidapp.R.id.avatar # begin Block
android.view.View$findViewById <type>android.widget.EditText <type>android.view.View io.plaidapp.R.id.comment # Block
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View io.plaidapp.R.id.post_comment # Block
android.widget.EditText$setOnFocusChangeListener @0 <type>android.widget.EditText <type>android.view.View.OnFocusChangeListener # Block
android.widget.ListView$addFooterView @0 <type>android.widget.ListView <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.ListView$removeFooterView @0 <type>android.widget.ListView <type>android.view.View # begin Block
android.widget.Toast$makeText EXP this EXP io.plaidapp.R.string.prospects_cant_post android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this DribbbleShot.this io.plaidapp.R.color.dribbble # begin MethodDeclaration
android.net.Uri$parse EXP this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 24 EXP # MethodDeclaration
android.support.v7.graphics.Palette$from EXP this <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # end MethodDeclaration
android.support.v7.graphics.Palette$from EXP this <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this DribbbleShot.this io.plaidapp.R.color.dark_icon # begin Block
android.widget.ImageButton$setColorFilter @0 <type>android.widget.ImageButton EXP # end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette.Swatch$getRgb EXP <type>android.support.v7.graphics.Palette.Swatch # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofArgb <type>android.animation.ValueAnimator this EXP <type>int # begin end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this DribbbleShot.this android.R.interpolator.fast_out_slow_in # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this DribbbleShot.this io.plaidapp.R.color.mid_grey # begin MethodDeclaration
android.view.View$setBackground @0 <type>android.view.View EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this DribbbleShot.this io.plaidapp.R.color.mid_grey # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setActivated @0 <type>android.widget.ImageButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this DribbbleShot.this io.plaidapp.R.color.dribbble # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # Block
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this DribbbleShot.this <type>io.plaidapp.ui.widget.FABToggle EXP # Block
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end Block
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin Block
android.view.View$draw @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # begin MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this DribbbleShot.this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.widget.ImageButton$setElevation @0 <type>android.widget.ImageButton 0f # MethodDeclaration
android.widget.ListView$animate EXP <type>android.widget.ListView # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this DribbbleShot.this android.R.interpolator.linear_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>DribbbleCommentsAdapter # begin Block
android.widget.ListView$setDivider @0 <type>android.widget.ListView EXP # Block
android.widget.ListView$setDividerHeight @0 <type>android.widget.ListView EXP # end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this <type>io.plaidapp.ui.widget.ParallaxScrimageView io.plaidapp.ui.widget.ParallaxScrimageView.OFFSET 0f # begin Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator 80 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_slow_in # Block
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # end Block
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin Block
android.animation.Animator$start @0 <type>android.animation.Animator # end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this this android.R.interpolator.fast_out_slow_in # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # end MethodDeclaration
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.ALPHA 0f 1f # begin Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_X 0f 1f # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_Y 0f 1f # Block
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.Animator this <type>io.plaidapp.ui.widget.FABToggle EXP EXP EXP # Block
android.animation.Animator$setStartDelay @0 <type>android.animation.Animator 300L # Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator 300L # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.linear_out_slow_in # Block
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # Block
android.animation.Animator$start @0 <type>android.animation.Animator # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin MethodDeclaration
android.view.View$setAlpha @0 <type>android.view.View 0.8f # MethodDeclaration
android.view.View$animate EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setEnabled @0 <type>android.widget.EditText false # begin Block
android.widget.EditText$getText EXP <type>android.widget.EditText # end Block
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$setEnabled @0 <type>android.widget.EditText true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setEnabled @0 <type>android.widget.EditText true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.background_light # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # Block
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this DribbbleShot.this <type>android.widget.ImageButton EXP # Block
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin ConstructorDeclaration
android.transition.Transition$setDuration @0 <type>android.transition.Transition 200L # ConstructorDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this context android.R.interpolator.fast_out_slow_in # ConstructorDeclaration
android.transition.Transition$setInterpolator @0 <type>android.transition.Transition EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater io.plaidapp.R.layout.dribbble_comment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.player_avatar # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.player_avatar EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_author # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_author EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_time_ago # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_time_ago EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_text # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_text EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_reply # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_reply EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_like # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_like EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.comment_likes_count # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View io.plaidapp.R.id.comment_likes_count EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>android.widget.ImageView <type>android.view.View io.plaidapp.R.id.player_avatar # begin MethodDeclaration
android.view.View$getTag <type>io.plaidapp.ui.widget.AuthorTextView <type>android.view.View io.plaidapp.R.id.comment_author # MethodDeclaration
android.view.View$getTag <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.comment_time_ago # MethodDeclaration
android.view.View$getTag <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.comment_text # MethodDeclaration
android.view.View$getTag <type>android.widget.ImageButton <type>android.view.View io.plaidapp.R.id.comment_reply # MethodDeclaration
android.view.View$getTag <type>io.plaidapp.ui.widget.CheckableImageButton <type>android.view.View io.plaidapp.R.id.comment_like # MethodDeclaration
android.view.View$getTag <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.comment_likes_count # end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.text.format.DateUtils$getRelativeTimeSpanString EXP this EXP EXP android.text.format.DateUtils.SECOND_IN_MILLIS # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$setActivated @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton EXP # end MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$getVisibility EXP <type>android.widget.ImageButton # begin MethodDeclaration
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.widget.ListView <type>android.transition.Transition # MethodDeclaration
android.view.View$setActivated @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
android.view.View$requestFocus @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$clearFocus @0 <type>android.widget.EditText # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$setSelection @0 <type>android.widget.EditText EXP # MethodDeclaration
android.widget.EditText$requestFocus @0 <type>android.widget.EditText # MethodDeclaration
android.widget.ListView$getCount EXP <type>android.widget.ListView # MethodDeclaration
android.widget.ListView$smoothScrollToPositionFromTop @0 <type>android.widget.ListView EXP 0 300 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "GET COMMENT LIKES" EXP <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this <type>String android.util.Base64.DEFAULT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent "com.android.vending" # begin MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$bindService @0 <type>android.content.Context <type>android.content.Intent <type>android.content.ServiceConnection android.content.Context.BIND_AUTO_CREATE # begin end Block
<END>
<S2>
<S1>
android.content.Context$unbindService @0 <type>android.content.Context <type>android.content.ServiceConnection # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
android.os.Bundle$getParcelable <type>android.app.PendingIntent <type>android.os.Bundle <type>String # begin TryBlock
android.app.PendingIntent$getIntentSender EXP <type>android.app.PendingIntent # TryBlock
android.app.Activity$startIntentSenderForResult @0 <type>android.app.Activity EXP <type>int EXP EXP EXP EXP # end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # end Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setPageMargin @0 <type>android.support.v4.view.ViewPager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this AboutActivity.this # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater io.plaidapp.R.layout.about_plaid <type>android.view.ViewGroup false # begin Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.text.SpannableString$length EXP <type>android.text.SpannableString # Block
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.text.SpannableString$length EXP <type>android.text.SpannableString # Block
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.text.SpannableString$length EXP <type>android.text.SpannableString # Block
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.text.TextUtils$concat <type>CharSequence this <type>CharSequence "\n\n" <type>android.text.SpannableString "\n" <type>android.text.SpannableString "\n\n" <type>android.text.SpannableString # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater io.plaidapp.R.layout.about_icon <type>android.view.ViewGroup false # begin Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # Block
android.text.TextUtils$concat <type>CharSequence this <type>CharSequence "\n" <type>CharSequence # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater io.plaidapp.R.layout.about_libs <type>android.view.ViewGroup false # begin Block
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # Block
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin SwitchCase
android.view.LayoutInflater$from EXP this EXP # end SwitchCase
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin SwitchCase
android.view.LayoutInflater$from EXP this EXP # end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "FAIL" EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$list <type>String <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$list <type>String <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$list <type>String <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$list <type>String <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$list EXP <type>android.content.res.AssetManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$openFd <type>android.content.res.AssetFileDescriptor <type>android.content.res.AssetManager EXP # begin TryBlock
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$close @0 <type>android.content.res.AssetFileDescriptor # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetManager$openFd EXP <type>android.content.res.AssetManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getParentFragment <type>android.support.v4.app.Fragment <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception creating comment on gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet io.plaidapp.R.styleable.FabOverlapTextView # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_SP <type>int EXP # MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_fabGravity EXP # MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_fabOverlayHeight 0 # MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_fabOverlayWidth 0 # end MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_lineHeightHint 0 # begin MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_topPaddingHint 0 # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_android_breakStrategy android.text.Layout.BREAK_STRATEGY_BALANCED # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_android_textAppearance android.R.style.TextAppearance # begin Block
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextAppearance_android_textColor android.graphics.Color.BLACK # Block
android.text.TextPaint$setColor @0 <type>android.text.TextPaint EXP # Block
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextAppearance_android_textSize <type>float # Block
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextAppearance_font # begin Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_font # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_android_textColor 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FabOverlapTextView_android_textSize <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.GravityCompat$getAbsoluteGravity this.fabGravity this <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setColor @0 <type>android.text.TextPaint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint <type>android.graphics.Typeface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setLetterSpacing @0 <type>android.text.TextPaint <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setFontFeatureSettings @0 <type>android.text.TextPaint <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 4 EXP # begin Block
android.text.TextPaint$getFontMetricsInt <type>android.graphics.Paint.FontMetricsInt <type>android.text.TextPaint # Block
android.text.StaticLayout$getLineCount <type>int <type>android.text.StaticLayout # end Block
<END>
<S2>
<S1>
android.text.StaticLayout$getWidth EXP <type>android.text.StaticLayout # begin MethodDeclaration
android.text.StaticLayout$getHeight EXP <type>android.text.StaticLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # begin Block
android.text.StaticLayout$draw @0 <type>android.text.StaticLayout <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.text.Spannable$getSpanStart EXP <type>android.text.Spannable <type>in.uncod.android.bypass.style.TouchableUrlSpan # begin Block
android.text.Spannable$getSpanEnd EXP <type>android.text.Spannable <type>in.uncod.android.bypass.style.TouchableUrlSpan # Block
android.text.Selection$setSelection @0 this <type>android.text.Spannable EXP EXP # end Block
<END>
<S2>
<S1>
android.text.Selection$removeSelection @0 this <type>android.text.Spannable # begin end Block
<END>
<S2>
<S1>
android.text.Selection$removeSelection @0 this <type>android.text.Spannable # begin end Block
<END>
<S2>
<S1>
android.text.Selection$removeSelection @0 this <type>android.text.Spannable # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>int <type>android.view.MotionEvent # MethodDeclaration
android.text.StaticLayout$getLineForVertical <type>int <type>android.text.StaticLayout <type>int # MethodDeclaration
android.text.StaticLayout$getOffsetForHorizontal <type>int <type>android.text.StaticLayout <type>int <type>int # MethodDeclaration
android.text.Spannable$getSpans <type>in.uncod.android.bypass.style.TouchableUrlSpan <type>android.text.Spannable <type>int <type>int in.uncod.android.bypass.style.TouchableUrlSpan # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getKeyCode EXP <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getKeyCode EXP <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.InputDevice$getDevice <type>android.view.InputDevice this <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray 0 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray 0 0 # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this <type>android.content.Context com.facebook.R.color.com_facebook_blue # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray 0 0 # begin TryBlock
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray 1 0 # TryBlock
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray 2 0 # TryBlock
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray 3 0 # TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 4 0 # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 0 0 # begin TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 1 0 # TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 2 0 # TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 3 0 # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray 0 android.graphics.Color.WHITE # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray 0 android.view.Gravity.CENTER # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray 0 0 # begin TryBlock
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray 1 android.graphics.Typeface.BOLD # TryBlock
android.graphics.Typeface$defaultFromStyle EXP this EXP # TryBlock
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray 2 # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable false <type>boolean # begin MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable true <type>boolean # MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable false <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$setFloatValues @0 <type>android.animation.ValueAnimator <type>float <type>float # begin MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setRepeatMode @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.REVERSE # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.INFINITE # MethodDeclaration
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP EXP <type>int <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getRight <type>int <type>android.view.View # end Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int EXP <type>int <type>int <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>byte EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$rgb EXP this <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$requestSync @0 this <type>android.accounts.Account com.google.samples.apps.iosched.provider.ScheduleContract.CONTENT_AUTHORITY EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_base_different_inner <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.DialogFragment$show @0 <type>android.app.DialogFragment EXP "DatePicker" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin ConstructorDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # ConstructorDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP <type>float EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 0 <type>int # begin Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.os.ConditionVariable$block <type>boolean <type>android.os.ConditionVariable 5000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$open @0 <type>android.os.ConditionVariable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$open @0 <type>android.os.ConditionVariable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$block <type>boolean <type>android.os.ConditionVariable 5000 # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$get EXP <type>android.os.Bundle FacebookSdk.APPLICATION_ID_PROPERTY # begin MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle FacebookSdk.CLIENT_TOKEN_PROPERTY # MethodDeclaration
android.content.pm.PackageManager$getApplicationInfo EXP <type>android.content.pm.PackageManager "packageName" android.content.pm.PackageManager.GET_META_DATA # MethodDeclaration
android.content.Context$getPackageName EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin ConstructorDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this <type>android.graphics.drawable.Drawable # ConstructorDeclaration
android.content.Context$getResources EXP <type>android.content.Context # ConstructorDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView null # begin MethodDeclaration
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView 1.0f # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Exception # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "creating OpenGL ES 2.0 context" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.daimajia.swipe.SwipeLayout <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation.Builder$withValue EXP <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_ID FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newUpdate <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor VideoHashcodeQuery.VIDEO_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor VideoHashcodeQuery.VIDEO_IMPORT_HASHCODE # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Animatable$start @0 <type>android.graphics.drawable.Animatable # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>android.support.v4.app.FragmentPagerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.chart # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTabHost$setup @0 <type>android.support.v4.app.FragmentTabHost this EXP R.id.realtabcontent # begin MethodDeclaration
android.support.v4.app.FragmentTabHost$getTabWidget EXP <type>android.support.v4.app.FragmentTabHost # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTabHost$newTabSpec EXP <type>android.support.v4.app.FragmentTabHost EXP # begin Block
android.support.v4.app.FragmentTabHost$addTab @0 <type>android.support.v4.app.FragmentTabHost <type>android.widget.TabHost.TabSpec EXP null # Block
android.support.v4.app.FragmentTabHost$getTabWidget EXP <type>android.support.v4.app.FragmentTabHost # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this this # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.tab_bottom_nav null # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.iv_icon # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.tv_icon # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource <type>android.widget.ArrayAdapter this <type>android.content.Context R.array.locations R.layout.sherlock_spinner_item # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter R.layout.sherlock_spinner_dropdown_item # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.database.Cursor$getCount @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getSuggestAuthority <type>String <type>android.app.SearchableInfo # begin end MethodDeclaration
android.app.SearchableInfo$getSuggestPath <type>String <type>android.app.SearchableInfo # begin end MethodDeclaration
android.net.Uri.Builder$appendPath @0 <type>android.net.Uri.Builder android.app.SearchManager.SUGGEST_URI_PATH_QUERY # begin MethodDeclaration
android.app.SearchableInfo$getSuggestSelection <type>String <type>android.app.SearchableInfo # end MethodDeclaration
android.net.Uri.Builder$build <type>android.net.Uri <type>android.net.Uri.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri.Builder$appendEncodedPath @0 <type>android.net.Uri.Builder <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri.Builder$appendPath @0 <type>android.net.Uri.Builder <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder "limit" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "close()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "notifyDataSetChanged" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "notifyDataSetInvalidated" # begin end IfTrue
<END>
<S2>
<S1>
android.database.Cursor$getExtras EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean EXP <type>android.os.Bundle android.app.SearchManager.CURSOR_EXTRA_KEY_IN_PROGRESS # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Tried to change cursor after adapter was closed." # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end IfTrue
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_1 # begin Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_2 # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_2_URL # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_ICON_1 # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_ICON_2 # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_FLAGS # end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>ChildViewCache <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getInt <type>int <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 EXP android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin Block
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable false false # Block
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable true false # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
android.content.Context$getResources EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$getScheme <type>String <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$createFromStream EXP this <type>java.io.InputStream null # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$getAuthority <type>String <type>android.net.Uri # begin end MethodDeclaration
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getIdentifier <type>int <type>android.content.res.Resources EXP EXP <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable.ConstantState$newDrawable EXP <type>android.graphics.drawable.Drawable.ConstantState # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getConstantState EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.content.ComponentName$flattenToShortString <type>String <type>android.content.ComponentName # begin end MethodDeclaration
android.graphics.drawable.Drawable$getConstantState EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.drawable.Drawable.ConstantState$newDrawable EXP <type>android.graphics.drawable.Drawable.ConstantState EXP # end Block
<END>
<S2>
<S1>
android.content.pm.ActivityInfo$getIconResource <type>int <type>android.content.pm.ActivityInfo # begin end MethodDeclaration
android.content.ComponentName$getPackageName <type>String <type>android.content.ComponentName # begin MethodDeclaration
android.content.pm.PackageManager$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.pm.PackageManager <type>String <type>int FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getActivityInfo <type>android.content.pm.ActivityInfo <type>android.content.pm.PackageManager <type>android.content.ComponentName android.content.pm.PackageManager.GET_META_DATA # begin end TryBlock
<END>
<S2>
<S1>
android.content.ComponentName$flattenToShortString EXP <type>android.content.ComponentName # begin Block
android.util.Log$w @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin IfFalse
android.graphics.RectF$height EXP <type>android.graphics.RectF # end IfFalse
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha <type>int <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_expand <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setFocusable @0 <type>android.view.View true # begin Block
android.view.View$setFocusableInTouchMode @0 <type>android.view.View true # end Block
<END>
<S2>
<S1>
android.view.View$getClass EXP <type>android.view.View # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$setRenderer @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.view.View$setEGLConfigChooser @0 <type>android.view.View <type>android.opengl.GLSurfaceView.EGLConfigChooser # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setEGLConfigChooser @0 <type>android.view.View FIELD FIELD FIELD FIELD FIELD FIELD # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setRenderer @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.view.View$setEGLConfigChooser @0 <type>android.view.View <type>android.opengl.GLSurfaceView.EGLConfigChooser # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setEGLConfigChooser @0 <type>android.view.View FIELD FIELD FIELD FIELD FIELD FIELD # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$onPause @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$onPause @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$onResume @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$onResume @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.Display$getWidth this.width <type>android.view.Display # begin MethodDeclaration
android.view.Display$getHeight this.height <type>android.view.Display # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setRenderMode @0 <type>android.view.View <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setRenderMode @0 <type>android.view.View <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$requestRender @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$requestRender @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.appwidget.AppWidgetManager$getInstance <type>android.appwidget.AppWidgetManager this this.context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.appwidget.AppWidgetManager$updateAppWidget @0 <type>android.appwidget.AppWidgetManager this.componentName this.remoteViews # begin end Block
<END>
<S2>
<S1>
android.appwidget.AppWidgetManager$updateAppWidget @0 <type>android.appwidget.AppWidgetManager this.widgetIds this.remoteViews # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_fragmenttransition_default <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View R.id.list # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # MethodDeclaration
android.support.v4.app.FragmentTransaction$setTransition @0 <type>android.support.v4.app.FragmentTransaction android.support.v4.app.FragmentTransaction.TRANSIT_FRAGMENT_FADE # MethodDeclaration
android.support.v4.app.FragmentTransaction$replace @0 <type>android.support.v4.app.FragmentTransaction R.id.fragment EXP FragmentTransitionSecondFragment.FRAGMENT_TAG # MethodDeclaration
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # MethodDeclaration
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.welcome_attending_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas x y radius <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation.Builder$withValue EXP <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.SyncColumns.UPDATED EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newUpdate <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor SpeakerHashcodeQuery.SPEAKER_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor SpeakerHashcodeQuery.SPEAKER_IMPORT_HASHCODE # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.support.v7.widget.RecyclerView <type>android.view.LayoutInflater R.layout.fragment_cheese_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getContext EXP <type>android.support.v7.widget.RecyclerView # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # MethodDeclaration
android.view.View$setBackgroundResource @0 <type>android.view.View <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext <type>android.content.Context <type>android.view.View # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent CheeseDetailActivity.EXTRA_NAME FIELD # MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getLeft <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.support.v4.view.ViewCompat$offsetTopAndBottom @0 this <type>android.view.View EXP # MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # MethodDeclaration
android.support.v4.view.ViewCompat$offsetLeftAndRight @0 this <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getTranslationX <type>float this <type>android.view.View # begin MethodDeclaration
android.support.v4.view.ViewCompat$setTranslationY @0 this <type>android.view.View EXP # MethodDeclaration
android.support.v4.view.ViewCompat$setTranslationY @0 this <type>android.view.View <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Pair$create EXP this EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_listview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableListView false # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.root # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu @0 this EXP # MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu @0 this EXP # MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasAction EXP this android.content.Intent.ACTION_VIEW # MethodDeclaration
android.net.Uri$parse EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasData EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu @0 this EXP # MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Contributors" # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.RootMatchers.isDialog EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu @0 this EXP # MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this android.R.string.ok # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$addCircle @0 <type>android.graphics.Path center.x center.y EXP android.graphics.Path.Direction.CCW # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading user" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>AccessToken # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>AccessToken # MethodDeclaration
android.support.v4.content.LocalBroadcastManager$sendBroadcast @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "grant_type" "fb_extend_sso_token" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP 90 false <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.3f 1 # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.6f 1 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 180 360 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_gplaycard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_section_gplay_title # begin end Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_section_gplay_textmore # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Xml$newSerializer <type>org.xmlpull.v1.XmlSerializer this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Xml$newPullParser <type>org.xmlpull.v1.XmlPullParser this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onActivityResult handled by IABUtil." # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout EXP # begin end MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout it.gmariotti.cardslib.demo.R.drawable.drawer_shadow android.view.Gravity.START # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$findViewById <type>android.view.View <type>android.support.v4.widget.DrawerLayout it.gmariotti.cardslib.demo.R.id.navdrawer # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar it.gmariotti.cardslib.demo.R.drawable.ic_navigation_drawer # begin end Block
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$isDrawerOpen EXP <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeAllViews @0 <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.icon # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.title # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.view.Gravity.START # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.icon # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.title # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "_uri" <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin Block
android.os.Bundle$putAll @0 <type>android.os.Bundle EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle "_uri" # begin end MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # begin MethodDeclaration
android.content.Intent$removeExtra @0 <type>android.content.Intent "_uri" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofInt EXP this EXP EXP EXP EXP # begin end MethodDeclaration
android.animation.ObjectAnimator$setEvaluator @0 <type>android.animation.ObjectAnimator <type>android.animation.TypeEvaluator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$cancel @0 <type>android.animation.ObjectAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>android.support.v4.widget.DrawerLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_grid_cursor <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.TITLE_COLUMN # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.SUBTITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.HEADER_COLUMN # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.ID_COLUMN # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.THUMBNAIL_COLUMN # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>long <type>android.content.ContentResolver it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.CONTENT_URI EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 48 <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.4f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnPreDrawListener @0 <type>android.view.ViewTreeObserver this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnPreDrawListener @0 <type>android.view.ViewTreeObserver this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER <type>com.alorma.github.sdk.bean.dto.response.User # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$get <type>com.alorma.github.sdk.bean.dto.response.User <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getApplicationContext FacebookSdk.applicationContext <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.content.Context <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin TryBlock
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences <type>String 0 # TryBlock
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # end TryBlock
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin Block
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String <type>long # end Block
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context com.facebook.appevents.AppEventsLogger.APP_EVENT_PREFERENCES android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences "limitEventUsage" false # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context com.facebook.appevents.AppEventsLogger.APP_EVENT_PREFERENCES android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
android.util.Base64$encodeToString EXP this EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String android.content.pm.PackageManager.GET_SIGNATURES # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro2 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 240 238 70 # begin MethodDeclaration
android.graphics.Color$rgb EXP this 240 238 70 # MethodDeclaration
android.graphics.Color$rgb EXP this 240 238 70 # MethodDeclaration
android.graphics.Color$rgb EXP this 240 238 70 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 60 220 78 # begin MethodDeclaration
android.graphics.Color$rgb EXP this 60 220 78 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 80 80 80 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>ChartDataAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray io.plaidapp.R.styleable.DynamicTextView_snapToMaterialScale true # begin MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.DynamicTextView_minTextSize EXP # MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.DynamicTextView_maxTextSize EXP # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$create EXP this FIELD android.graphics.Typeface.NORMAL # begin Block
android.graphics.Color$red EXP this <type>int # Block
android.graphics.Color$green EXP this <type>int # Block
android.graphics.Color$blue EXP this <type>int # Block
android.graphics.Color$argb EXP this FIELD EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # begin Block
android.graphics.Typeface$create EXP this FIELD android.graphics.Typeface.NORMAL # Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # Block
android.text.StaticLayout$getHeight <type>int <type>android.text.StaticLayout # Block
android.text.StaticLayout$getLineCount <type>int <type>android.text.StaticLayout # end Block
<END>
<S2>
<S1>
android.graphics.Typeface$create EXP this FIELD android.graphics.Typeface.NORMAL # begin Block
android.graphics.Color$red EXP this <type>int # Block
android.graphics.Color$green EXP this <type>int # Block
android.graphics.Color$blue EXP this <type>int # Block
android.graphics.Color$argb EXP this FIELD EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # begin Block
android.graphics.Typeface$create EXP this FIELD android.graphics.Typeface.NORMAL # Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # Block
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>String # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>int # begin Block
android.text.StaticLayout$getHeight <type>int <type>android.text.StaticLayout # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>int # begin Block
android.text.StaticLayout$getHeight <type>int <type>android.text.StaticLayout # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>int # begin Block
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>String # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>int # begin Block
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>String # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getBottom EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.support.design.widget.CollapsingToolbarLayout$setTitle @0 <type>android.support.design.widget.CollapsingToolbarLayout <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_custom_card_google_maps # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_custom_card_googleinc # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar 4.7f # end Block
<END>
<S2>
<S1>
android.util.SparseArray$size <type>int <type>android.util.SparseArray # begin Block
android.util.SparseArray$clear @0 <type>android.util.SparseArray # end Block
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$remove @0 <type>android.util.SparseArray <type>Integer # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues DataContract.DATA # begin Block
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP <type>DataRecord # Block
android.net.Uri$withAppendedPath EXP this DataContract.CONTENT_URI EXP # end Block
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$get <type>DataRecord <type>android.util.SparseArray EXP # Block
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$get <type>DataRecord <type>android.util.SparseArray <type>Integer # begin Block
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentById <type>SplashFragment <type>android.app.FragmentManager R.id.splashFragment # begin MethodDeclaration
android.app.FragmentManager$findFragmentById EXP <type>android.app.FragmentManager R.id.selectionFragment # MethodDeclaration
android.app.FragmentManager$findFragmentById EXP <type>android.app.FragmentManager R.id.userSettingsFragment # MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # end MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$getBackStackEntryCount <type>int <type>android.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$popBackStack @0 <type>android.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$hide @0 <type>android.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin end MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$show @0 <type>android.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$hide @0 <type>android.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getApplication <type>android.content.Context <type>android.app.Activity # begin end MethodDeclaration
android.app.Activity$runOnUiThread @0 <type>android.app.Activity EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getApplication <type>android.content.Context <type>android.app.Activity # begin end MethodDeclaration
android.app.Activity$runOnUiThread @0 <type>android.app.Activity EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString <type>String <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString <type>String <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView R.drawable.view_animation # begin MethodDeclaration
android.widget.ImageView$getBackground <type>android.graphics.drawable.AnimationDrawable <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.AnimationDrawable$stop @0 <type>android.graphics.drawable.AnimationDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.AnimationDrawable$start @0 <type>android.graphics.drawable.AnimationDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 1 EXP android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$isRecycled EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$isMutable EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin MethodDeclaration
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getChangingConfigurations EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getLevel EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$isVisible EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getState EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$notifyDataSetChanged @0 <type>android.widget.ArrayAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$notifyDataSetChanged @0 <type>android.widget.ArrayAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$notifyDataSetChanged @0 <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.widget.ImageView android.view.ViewGroup.LayoutParams.MATCH_PARENT android.view.ViewGroup.LayoutParams.MATCH_PARENT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.new_gist # begin MethodDeclaration
android.support.v7.app.ActionBar$setIcon @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.drawable.ic_github_gist_white_32dp # MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end IfTrue
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>CharSequence # begin IfTrue
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # end IfTrue
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_apply # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.CheckBox$isChecked <type>boolean <type>android.widget.CheckBox # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.UiModeManager <type>android.content.Context android.content.Context.UI_MODE_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.mikepenz.materialdrawer.app.R.layout.fragment_simple_sample <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.mikepenz.materialdrawer.app.R.id.rootView # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.mikepenz.materialdrawer.app.R.id.title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$openFileInput <type>java.io.InputStream <type>android.content.Context EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$openFileOutput <type>java.io.OutputStream <type>android.content.Context EXP android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_grid_base <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Other Button" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet <type>int # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray 0 EXP # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.ListView <type>android.view.LayoutInflater com.donnfelker.android.bootstrap.R.layout.fragment_navigation_drawer <type>android.view.ViewGroup false # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # MethodDeclaration
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$isDrawerOpen EXP <type>android.support.v4.widget.DrawerLayout <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin MethodDeclaration
android.support.v7.app.ActionBar$setHomeButtonEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v4.app.ActionBarDrawerToggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.ActionBarDrawerToggle$onConfigurationChanged @0 <type>android.support.v4.app.ActionBarDrawerToggle <type>android.content.res.Configuration # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.donnfelker.android.bootstrap.R.menu.global <type>android.view.Menu # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayShowTitleEnabled @0 <type>android.support.v7.app.ActionBar true # begin MethodDeclaration
android.support.v7.app.ActionBar$setNavigationMode @0 <type>android.support.v7.app.ActionBar android.support.v7.app.ActionBar.NAVIGATION_MODE_STANDARD # MethodDeclaration
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar com.donnfelker.android.bootstrap.R.string.app_name # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.DialogFragment$show @0 <type>android.app.DialogFragment EXP "TimePicker" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$createPackageContext <type>android.content.Context <type>android.content.Context <type>String 0 # begin TryBlock
android.content.Context$getPackageManager EXP <type>android.content.Context # TryBlock
android.content.Context$setTheme @0 <type>android.content.Context FIELD # TryBlock
android.content.Context$getTheme <type>android.content.res.Resources.Theme <type>android.content.Context # TryBlock
android.content.res.Resources.Theme$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.res.Resources.Theme EXP # TryBlock
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 0 <type>int # TryBlock
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin MethodDeclaration
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # begin TryBlock
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # TryBlock
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # TryBlock
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # TryBlock
android.content.ContentResolver$applyBatch @0 <type>android.content.ContentResolver android.provider.CalendarContract.AUTHORITY EXP # end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor 0 # begin Block
android.database.Cursor$close @0 <type>android.database.Cursor # end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.CONTENT_URI SessionsQuery.PROJECTION null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor 0 # begin Block
android.database.Cursor$getInt EXP <type>android.database.Cursor SessionsQuery.SESSION_IN_MY_SCHEDULE # end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor SessionsQuery.SESSION_START # begin Block
android.database.Cursor$getLong EXP <type>android.database.Cursor SessionsQuery.SESSION_END # Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionsQuery.SESSION_TITLE # Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionsQuery.ROOM_NAME # end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.CalendarContract.Events.CONTENT_URI EXP EXP EXP null # begin end Block
android.content.ContentValues$clear @0 <type>android.content.ContentValues # begin Block
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_CAL_EVENT_ID <type>long # Block
android.content.ContentResolver$update @0 <type>android.content.ContentResolver <type>android.net.Uri <type>android.content.ContentValues null null # end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor 0 # begin Block
android.database.Cursor$close @0 <type>android.database.Cursor # Block
android.content.ContentProviderOperation$newUpdate EXP this android.provider.CalendarContract.Events.CONTENT_URI # end Block
<END>
<S2>
<S1>
android.content.ContentValues$clear @0 <type>android.content.ContentValues # begin Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.DTSTART <type>long # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.DTEND <type>long # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.EVENT_LOCATION <type>String # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.TITLE <type>String # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.CALENDAR_ID <type>long # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.CalendarContract.Events.EVENT_TIMEZONE EXP # Block
android.content.ContentResolver$insert <type>android.net.Uri <type>android.content.ContentResolver android.provider.CalendarContract.Events.CONTENT_URI <type>android.content.ContentValues # Block
android.net.Uri$getLastPathSegment <type>String <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri EXP null null null # begin end Block
android.content.ContentValues$clear @0 <type>android.content.ContentValues # begin Block
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_CAL_EVENT_ID null # Block
android.content.ContentResolver$update @0 <type>android.content.ContentResolver <type>android.net.Uri <type>android.content.ContentValues null null # end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor 0 # begin Block
android.database.Cursor$close @0 <type>android.database.Cursor # end Block
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>int <type>android.content.ContentResolver android.provider.CalendarContract.Events.CONTENT_URI EXP EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$delete @0 <type>android.content.ContentResolver android.provider.CalendarContract.Events.CONTENT_URI EXP EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this android.provider.CalendarContract.Events.CONTENT_URI # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unable to find Calendar for user" # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getSerializableExtra EXP <type>android.content.Intent com.loopj.android.http.sample.services.ExampleIntentService.INTENT_THROWABLE # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getIntExtra EXP <type>android.content.Intent com.loopj.android.http.sample.services.ExampleIntentService.INTENT_STATUS_CODE 0 # begin Block
android.content.Intent$getStringArrayExtra EXP <type>android.content.Intent com.loopj.android.http.sample.services.ExampleIntentService.INTENT_HEADERS # Block
android.content.Intent$getByteArrayExtra <type>byte <type>android.content.Intent com.loopj.android.http.sample.services.ExampleIntentService.INTENT_DATA # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.loopj.android.http.sample.services.ExampleIntentService.INTENT_URL <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getClassLoader EXP this # begin ConstructorDeclaration
android.net.Uri$getClassLoader EXP this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.bitmap 0 # begin MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.imageUrl 0 # MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeTypedList @0 <type>android.os.Parcel <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readTypedList @0 <type>android.os.Parcel <type>java.util.List <type>Creator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getFragmentManager EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getResources EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getId EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getTag EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getChildFragmentManager EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.DialogFragment$getDialog EXP <type>android.support.v4.app.DialogFragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.AlarmManager <type>android.content.Context android.content.Context.ALARM_SERVICE # begin MethodDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>android.content.Context <type>int <type>android.content.Intent 0 # MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # MethodDeclaration
android.app.AlarmManager$setRepeating @0 <type>android.app.AlarmManager android.app.AlarmManager.ELAPSED_REALTIME_WAKEUP EXP <type>long <type>android.app.PendingIntent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.AlarmManager <type>android.content.Context android.content.Context.ALARM_SERVICE # begin MethodDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>android.content.Context <type>int <type>android.content.Intent 0 # MethodDeclaration
android.app.AlarmManager$cancel @0 <type>android.app.AlarmManager <type>android.app.PendingIntent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.os.PowerManager <type>android.content.Context android.content.Context.POWER_SERVICE # begin MethodDeclaration
android.os.PowerManager$newWakeLock <type>android.os.PowerManager.WakeLock <type>android.os.PowerManager android.os.PowerManager.PARTIAL_WAKE_LOCK <type>String # MethodDeclaration
android.os.PowerManager.WakeLock$acquire @0 <type>android.os.PowerManager.WakeLock # MethodDeclaration
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # MethodDeclaration
android.os.PowerManager.WakeLock$release @0 <type>android.os.PowerManager.WakeLock # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar null # begin end IfFalse
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar null # begin end IfFalse
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar null # begin Block
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar null # end Block
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt EXP this <type>int 1 # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getWrappedAdapter <type>android.widget.ListAdapter <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId <type>long <type>android.widget.ListAdapter <type>int # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId <type>long <type>android.widget.ListAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # begin MethodDeclaration
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # MethodDeclaration
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$swapItems @0 <type>android.widget.ListAdapter EXP EXP # begin MethodDeclaration
android.widget.ListAdapter$notifyDataSetChanged @0 <type>android.widget.ListAdapter # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getY EXP <type>android.view.View # begin MethodDeclaration
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this EXP EXP # MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator <type>SettleHoverDrawableAnimatorListener # MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator <type>SettleHoverDrawableAnimatorListener # MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$height <type>int <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getY <type>float <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin MethodDeclaration
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP EXP # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 600 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setMinimumHeight @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "artists" # begin MethodDeclaration
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources R.drawable.ic_tab_artists # MethodDeclaration
android.widget.TabHost$addTab @0 <type>android.widget.TabHost <type>android.widget.TabHost.TabSpec # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "albums" # MethodDeclaration
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources R.drawable.ic_tab_albums # MethodDeclaration
android.widget.TabHost$addTab @0 <type>android.widget.TabHost <type>android.widget.TabHost.TabSpec # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "songs" # MethodDeclaration
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources R.drawable.ic_tab_songs # MethodDeclaration
android.widget.TabHost$addTab @0 <type>android.widget.TabHost <type>android.widget.TabHost.TabSpec # MethodDeclaration
android.widget.TabHost$setCurrentTab @0 <type>android.widget.TabHost 2 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource <type>android.widget.ArrayAdapter this this R.array.colors R.layout.dropdown_item # begin MethodDeclaration
android.widget.Spinner$setAdapter @0 <type>android.widget.Spinner <type>android.widget.ArrayAdapter # end MethodDeclaration
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getContext EXP <type>android.widget.AdapterView # begin MethodDeclaration
android.widget.AdapterView$getItemAtPosition EXP <type>android.widget.AdapterView <type>int # MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putAll @0 <type>android.os.Bundle <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByte @0 <type>android.os.Bundle <type>String <type>byte # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putChar @0 <type>android.os.Bundle <type>String <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShort @0 <type>android.os.Bundle <type>String <type>short # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putFloat @0 <type>android.os.Bundle <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putDouble @0 <type>android.os.Bundle <type>String <type>double # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle <type>String <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.os.Parcelable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArray @0 <type>android.os.Bundle <type>String <type>android.os.Parcelable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSparseParcelableArray @0 <type>android.os.Bundle <type>String <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putIntegerArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>java.io.Serializable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBooleanArray @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle <type>String <type>byte # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShortArray @0 <type>android.os.Bundle <type>String <type>short # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putCharArray @0 <type>android.os.Bundle <type>String <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putIntArray @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLongArray @0 <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putFloatArray @0 <type>android.os.Bundle <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putDoubleArray @0 <type>android.os.Bundle <type>String <type>double # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArray @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$addOnLayoutChangeListener @0 <type>android.view.View <type>android.view.View.OnLayoutChangeListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$removeOnLayoutChangeListener @0 <type>android.view.View this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setTextFilterEnabled @0 <type>android.widget.ListView true # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getText EXP <type>android.view.View # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.facebook.R.string.com_facebook_image_download_unknown_error # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.net.Uri$hashCode EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.ImageView <type>android.view.LayoutInflater R.layout.page <type>android.view.ViewGroup false # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP <type>String android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String <type>int # begin Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String <type>int # end Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String <type>boolean # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.location.Location <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity <type>android.util.AttributeSet com.example.scrumptious.R.styleable.picker_place_picker_fragment # begin MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_place_picker_fragment_radius_in_meters <type>int # MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_place_picker_fragment_results_limit <type>int # end MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_place_picker_fragment_show_search_box <type>boolean # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_place_picker_fragment_search_text # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.ListView <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_list_view # begin Block
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View null false # Block
android.view.ViewGroup$findViewById <type>android.widget.EditText <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_search_text # Block
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # end Block
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # begin end Block
<END>
<S2>
<S1>
android.view.inputmethod.InputMethodManager$showSoftInput @0 <type>android.view.inputmethod.InputMethodManager <type>android.widget.EditText android.view.inputmethod.InputMethodManager.SHOW_IMPLICIT # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$getWindowToken EXP <type>android.widget.EditText # begin Block
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.location.Location # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_DIALOG_OUTCOME <type>String # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "num_places_picked" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>Set # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this this # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableListView false # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableListView false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_cardwithlist_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityTransition1Binding this this R.layout.activity_transition1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_SAMPLE <type>Sample # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_TYPE TYPE_PROGRAMMATICALLY # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_SAMPLE <type>Sample # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_TYPE TYPE_XML # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_SAMPLE <type>Sample # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_TYPE TYPE_PROGRAMMATICALLY # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_SAMPLE <type>Sample # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_TYPE TYPE_XML # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Fade$setDuration @0 <type>android.transition.Fade EXP # begin MethodDeclaration
android.transition.Fade$excludeTarget @0 <type>android.transition.Fade R.id.square_red true # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Visibility$setDuration @0 <type>android.transition.Visibility EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$addItemDecoration @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setItemAnimator @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView.Adapter$setMode @0 <type>android.support.v7.widget.RecyclerView.Adapter com.daimajia.swipe.util.Attributes.Mode.Single # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.RecyclerView.Adapter # MethodDeclaration
android.support.v7.widget.RecyclerView$setOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.RecyclerView.OnScrollListener # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setTitle @0 <type>android.app.ActionBar "RecyclerView" # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "ListView" "onScrollStateChanged" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId card_layout_resourceID <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_layout_resourceID this.card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.View$drawableHotspotChanged @0 <type>android.view.View <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$removeView @0 <type>android.view.View <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnLongClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnLongClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$removeView @0 <type>android.view.View <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this TAG "Does the card have the ViewToClickToExpand?" # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.haarman.listviewanimations.R.string.row_number <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.haarman.listviewanimations.R.id.list_row_draganddrop_textview # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.haarman.listviewanimations.R.id.undo_row_undobutton # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText <type>android.widget.Toast this DynamicListViewActivity.this EXP android.widget.Toast.LENGTH_LONG # begin MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText <type>android.widget.Toast this EXP EXP android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text2 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text3 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text4 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Lorem ipsum dolor sit amet, consectetur adipisici elit..." # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Quis aute iure reprehenderit in voluptate velit esse cillum .." # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#2196F3" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ClipData$newPlainText <type>android.content.ClipData this "giphy_url" FIELD # begin MethodDeclaration
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$setOnTouchListener @0 <type>android.widget.AbsListView <type>SwipeUndoTouchListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getAdapter EXP <type>android.widget.AbsListView # begin MethodDeclaration
android.widget.AbsListView$smoothScrollToPosition @0 <type>android.widget.AbsListView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getChildAt EXP <type>android.widget.AbsListView 0 # begin MethodDeclaration
android.widget.AbsListView$getAdapter EXP <type>android.widget.AbsListView # MethodDeclaration
android.widget.AbsListView$smoothScrollToPosition @0 <type>android.widget.AbsListView <type>int # MethodDeclaration
android.widget.AbsListView$smoothScrollToPosition @0 <type>android.widget.AbsListView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$height <type>float <type>android.graphics.Rect # begin ConstructorDeclaration
android.graphics.Color$colorToHSV @0 this bg <type>float # end ConstructorDeclaration
android.content.res.Resources$getDrawable <type>android.graphics.drawable.LayerDrawable <type>android.content.res.Resources com.github.pockethub.R.drawable.label_background # begin ConstructorDeclaration
android.graphics.drawable.LayerDrawable$findDrawableByLayerId EXP <type>android.graphics.drawable.LayerDrawable com.github.pockethub.R.id.item_outer_layer # ConstructorDeclaration
android.graphics.drawable.LayerDrawable$findDrawableByLayerId EXP <type>android.graphics.drawable.LayerDrawable com.github.pockethub.R.id.item_inner_layer # ConstructorDeclaration
android.graphics.drawable.LayerDrawable$findDrawableByLayerId EXP <type>android.graphics.drawable.LayerDrawable com.github.pockethub.R.id.item_bg # ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.content.res.Resources$getColor EXP <type>android.content.res.Resources android.R.color.transparent # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint android.graphics.Typeface.DEFAULT_BOLD # ConstructorDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint <type>float # ConstructorDeclaration
android.graphics.drawable.LayerDrawable$setBounds @0 <type>android.graphics.drawable.LayerDrawable <type>android.graphics.Rect # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Color$HSVToColor <type>int this <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$draw @0 <type>android.graphics.drawable.LayerDrawable <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Paint$getColor <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getResources <type>android.content.res.Resources <type>android.widget.TextView # begin MethodDeclaration
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint android.graphics.Typeface.DEFAULT_BOLD # MethodDeclaration
android.widget.TextView$getTextSize EXP <type>android.widget.TextView # MethodDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # end MethodDeclaration
android.widget.TextView$getTextSize <type>float <type>android.widget.TextView # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$setEmpty @0 <type>android.graphics.Rect # begin Block
android.graphics.Paint$getTextBounds @0 <type>android.graphics.Paint <type>String 0 EXP <type>android.graphics.Rect # Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # Block
android.graphics.Rect$width EXP <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor this.color this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this GetSample.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getDir EXP <type>android.content.Context "dex" android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
android.content.Context$getCodeCacheDir <type>java.io.File <type>android.content.Context # begin MethodDeclaration
android.content.Context$getClassLoader EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$addFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD # begin end MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getLocationOnScreen @0 <type>android.widget.ListView <type>int # begin MethodDeclaration
android.view.MotionEvent$getDownTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getMetaState EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$obtain <type>android.view.MotionEvent this EXP EXP EXP EXP EXP EXP # MethodDeclaration
android.widget.ListView$onInterceptTouchEvent <type>boolean <type>android.widget.ListView <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$dispatchTouchEvent <type>boolean <type>android.widget.ListView <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextSize @0 <type>android.widget.TextView 30 # begin end Block
<END>
<S2>
<S1>
android.app.Activity$isAssignableFrom EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewWithTag <type>android.view.View <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception starring repository" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "," EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.example.rps.R.layout.usersettings_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.facebook.login.widget.LoginButton <type>android.view.View com.example.rps.R.id.usersettings_fragment_login_button # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.rps.R.id.usersettings_fragment_profile_name # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getBackground EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setShadowLayer @0 <type>android.widget.TextView 1f 0f EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.Drawable null null # begin Block
android.widget.TextView$setTag @0 <type>android.widget.TextView <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.Drawable null null # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setShadowLayer @0 <type>android.widget.TextView 0f 0f 0f <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null null null null # Block
android.widget.TextView$setTag @0 <type>android.widget.TextView null # end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # begin Block
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView null <type>android.graphics.drawable.BitmapDrawable null null # Block
android.widget.TextView$setTag @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ImageHolderFragment.RES_ID EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle ImageHolderFragment.POS EXP # MethodDeclaration
android.app.Fragment$setArguments @0 <type>android.app.Fragment <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_forks_icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_watchers_icon # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$inflate <type>org.bookdash.android.databinding.FragmentPageBinding this <type>android.view.LayoutInflater org.bookdash.android.R.layout.fragment_page <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>org.bookdash.android.domain.pojo.gson.Page # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>org.bookdash.android.domain.pojo.gson.Page # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add EXP <type>android.support.v4.app.FragmentTransaction R.id.simple_fragment <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "level" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "level" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$replace @0 <type>android.support.v4.app.FragmentTransaction R.id.simple_fragment <type>android.support.v4.app.Fragment # begin MethodDeclaration
android.support.v4.app.FragmentTransaction$setTransition @0 <type>android.support.v4.app.FragmentTransaction android.support.v4.app.FragmentTransaction.TRANSIT_FRAGMENT_OPEN # MethodDeclaration
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.hello_world <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setBackgroundDrawable @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.support.v4.widget.ScrollerCompat$create <type>android.support.v4.widget.ScrollerCompat this context <type>android.view.animation.Interpolator # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
android.support.v4.widget.ScrollerCompat$startScroll @0 <type>android.support.v4.widget.ScrollerCompat <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.widget.ScrollerCompat$fling @0 <type>android.support.v4.widget.ScrollerCompat EXP EXP EXP EXP <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$computeScrollOffset <type>boolean <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$isFinished <type>boolean <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$post @0 <type>android.view.ViewGroup <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewCompat$canScrollVertically EXP this <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>float # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay EXP <type>android.view.WindowManager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_forks_icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_watchers_icon # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_grid_gplay <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityManager$getMemoryClass EXP <type>android.app.ActivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Spannable$getSpanStart EXP <type>android.text.Spannable <type>in.uncod.android.bypass.style.TouchableUrlSpan # begin Block
android.text.Spannable$getSpanEnd EXP <type>android.text.Spannable <type>in.uncod.android.bypass.style.TouchableUrlSpan # Block
android.text.Selection$setSelection @0 this <type>android.text.Spannable EXP EXP # end Block
<END>
<S2>
<S1>
android.text.Selection$removeSelection @0 this <type>android.text.Spannable # begin end Block
<END>
<S2>
<S1>
android.text.Selection$removeSelection @0 this <type>android.text.Spannable # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>int <type>android.view.MotionEvent # MethodDeclaration
android.widget.TextView$getTotalPaddingLeft <type>int <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$getTotalPaddingTop <type>int <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$getScrollX <type>int <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$getScrollY <type>int <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$getLayout <type>android.text.Layout <type>android.widget.TextView # MethodDeclaration
android.text.Layout$getLineForVertical <type>int <type>android.text.Layout <type>int # MethodDeclaration
android.text.Layout$getOffsetForHorizontal <type>int <type>android.text.Layout <type>int <type>int # MethodDeclaration
android.text.Spannable$getSpans <type>in.uncod.android.bypass.style.TouchableUrlSpan <type>android.text.Spannable <type>int <type>int in.uncod.android.bypass.style.TouchableUrlSpan # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end TryBlock
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.widget.Button$performLongClick @0 <type>android.widget.Button # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mGridPaint # end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mLimitLinePaint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ActionModesNoActionBar.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED by Receiver1" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this AsyncTaskActivity.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.widget.ProgressBar.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.widget.ProgressBar.INVISIBLE # begin MethodDeclaration
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_gridview null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.GridView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_grid_view # end MethodDeclaration
android.widget.GridView$setOnItemClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>in.srain.cube.views.list.ListViewDataAdapter # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_grid_view_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.with_grid_view_item_image # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewParent$removeView @0 <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int EXP # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int EXP # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas 0 0 EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onOptionsItemSelected EXP <type>android.support.v4.app.Fragment <type>android.view.MenuItem # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onCreateOptionsMenu @0 <type>android.support.v4.app.Fragment <type>android.view.Menu EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.social_frag <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View com.google.samples.apps.iosched.R.id.twitter_icon_box # begin MethodDeclaration
android.view.View$setContentDescription @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.google.samples.apps.iosched.R.id.gplus_icon_box # MethodDeclaration
android.view.View$setContentDescription @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.AnimatedVectorDrawable # begin Block
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # end Block
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading issue" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 45 # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Entry selected" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Nothing selected" "Nothing selected." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # begin MethodDeclaration
android.widget.Spinner$setAdapter @0 <type>android.widget.Spinner EXP # end MethodDeclaration
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent EXP # begin MethodDeclaration
android.content.Intent$addCategory @0 <type>android.content.Intent <type>String # MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClassName @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>java.util.Map <type>android.widget.AdapterView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 40 20 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 40 20 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 640 640 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 640 640 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 640 640 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 640 640 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 640 640 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 20 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 20 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 20 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 50 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 20 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_cardwithlist_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "App" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Error on connection..." android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Error on connection..." android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getCurrentFocus <type>android.view.View <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.view.inputmethod.InputMethodManager <type>android.app.Activity android.content.Context.INPUT_METHOD_SERVICE # begin Block
android.view.View$getWindowToken EXP <type>android.view.View # Block
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # Block
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG "ℹ Hide keyboard" # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_city # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_icon # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_temperature # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$setRepeatMode @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.INFINITE # begin MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.INFINITE # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$setFloatValues @0 <type>android.animation.ValueAnimator 0 1f # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator <type>android.view.animation.BaseInterpolator # MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator this # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$cancel @0 <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedFraction <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.PathMeasure$getLength EXP <type>android.graphics.PathMeasure # begin MethodDeclaration
android.graphics.PathMeasure$getPosTan @0 <type>android.graphics.PathMeasure EXP <type>float null # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$create <type>android.support.v4.widget.ViewDragHelper this this <type>android.support.v4.widget.ViewDragHelper.Callback # begin ConstructorDeclaration
android.view.ViewConfiguration$get EXP this context # ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.SwipeLayout_drag_edge <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.SwipeLayout_leftEdgeSwipeOffset 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.SwipeLayout_rightEdgeSwipeOffset 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.SwipeLayout_topEdgeSwipeOffset 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.SwipeLayout_bottomEdgeSwipeOffset 0 # ConstructorDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.SwipeLayout_clickToClose <type>boolean # end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.SwipeLayout_show_mode EXP # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getRight <type>int <type>android.view.View # MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # MethodDeclaration
android.view.View$getBottom <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin Block
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end Block
android.view.View$getLeft FIELD <type>android.view.View # begin Block
android.view.View$getTop FIELD <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup.LayoutParams$getClass EXP <type>android.view.ViewGroup.LayoutParams # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getLayoutDirection EXP this this # begin Block
android.support.v4.view.GravityCompat$getAbsoluteGravity <type>int this <type>int EXP # end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent true # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getActionMasked <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.GestureDetector$onTouchEvent @0 <type>android.view.GestureDetector <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getPositionForView <type>int <type>android.widget.AdapterView SwipeLayout.this # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getFirstVisiblePosition EXP <type>android.widget.AdapterView # begin Block
android.widget.AdapterView$getChildAt EXP <type>android.widget.AdapterView EXP # Block
android.widget.AdapterView$getAdapter EXP <type>android.widget.AdapterView # Block
android.widget.AdapterView$performItemClick @0 <type>android.widget.AdapterView EXP <type>int EXP # end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getPositionForView <type>int <type>android.widget.AdapterView SwipeLayout.this # begin end Block
android.widget.AdapterView$getItemIdAtPosition <type>long <type>android.widget.AdapterView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getDeclaredMethod <type>java.lang.reflect.Method this "performLongPress" android.view.View int long # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.graphics.Rect$contains EXP <type>android.graphics.Rect EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$getMinVelocity <type>float <type>android.support.v4.widget.ViewDragHelper # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$smoothSlideViewTo @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.View FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$smoothSlideViewTo @0 <type>android.support.v4.widget.ViewDragHelper EXP EXP EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View FIELD FIELD FIELD FIELD # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.net.LocalSocket$setSoTimeout @0 <type>android.net.LocalSocket <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.net.LocalSocket$getSoTimeout EXP <type>android.net.LocalSocket # begin end TryBlock
<END>
<S2>
<S1>
android.net.LocalSocket$close @0 <type>android.net.LocalSocket # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_spannablegrid_twowayview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>org.lucasr.twowayview.widget.SpannableGridLayoutManager.LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>org.lucasr.twowayview.widget.SpannableGridLayoutManager.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabScrollViewFragment.ARG_SCROLL_Y <type>int # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabListViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabRecyclerViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabGridViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_nativedash <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.demo.ui.widget.CollectionView <type>android.view.View it.gmariotti.cardslib.demo.R.id.menu_collection_vew # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context it.gmariotti.cardslib.demo.R.string.header_title_group1 # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context it.gmariotti.cardslib.demo.R.string.header_title_group2 # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context it.gmariotti.cardslib.demo.R.string.header_title_group3 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View it.gmariotti.cardslib.demo.R.id.name # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.demo.R.id.name # begin MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.demo.R.id.description # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin MethodDeclaration
android.content.Context$getString <type>String <type>android.content.Context FIELD # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.content.Context$getString <type>String <type>android.content.Context FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin MethodDeclaration
android.widget.Toast$makeText <type>android.widget.Toast this EXP <type>String android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$announceForAccessibility @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$cancel @0 <type>android.widget.Toast # begin end Block
<END>
<S2>
<S1>
android.content.Context$getClassLoader EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getFragmentManager <type>android.app.FragmentManager <type>android.content.Context # begin Block
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction it.gmariotti.cardslib.demo.R.id.container <type>BaseFragment # Block
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.content.ContentResolver.SCHEME_ANDROID_RESOURCE$equals EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource @0 this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setChangingConfigurations @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getChangingConfigurations EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setDither @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setFilterBitmap @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$invalidateSelf @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$scheduleSelf @0 <type>android.graphics.drawable.Drawable <type>Runnable <type>long # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$unscheduleSelf @0 <type>android.graphics.drawable.Drawable <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>int <type>PorterDuff.Mode # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$clearColorFilter @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$isStateful EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState EXP <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getState EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible EXP <type>android.graphics.drawable.Drawable <type>boolean <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getTransparentRegion EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getMinimumWidth EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getMinimumHeight EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding EXP <type>android.graphics.drawable.Drawable <type>Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getConstantState EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this HandlerMessagesActivity.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler <type>int android.widget.ProgressBar.VISIBLE # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # MethodDeclaration
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end MethodDeclaration
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # MethodDeclaration
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler <type>int android.widget.ProgressBar.INVISIBLE # MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler <type>int EXP # begin Block
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # end Block
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle ShareConstants.LEGACY_PHOTOS EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle ShareConstants.LEGACY_DATA_FAILURES_FATAL <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle ShareConstants.LEGACY_FRIEND_TAGS EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin MethodDeclaration
android.content.Intent$setFlags @0 <type>android.content.Intent EXP # MethodDeclaration
android.app.PendingIntent$getActivity EXP this <type>android.content.Context 1 <type>android.content.Intent android.app.PendingIntent.FLAG_UPDATE_CURRENT # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "visibleLeakRefKey" # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "visibleLeakRefKey" <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu com.squareup.leakcanary.R.string.leak_canary_share_leak # begin end Block
android.view.Menu$add EXP <type>android.view.Menu com.squareup.leakcanary.R.string.leak_canary_share_heap_dump # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "text/plain" # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT <type>String # MethodDeclaration
android.content.Intent$createChooser EXP this <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "application/octet-stream" # begin MethodDeclaration
android.net.Uri$fromFile EXP this <type>java.io.File # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_STREAM EXP # MethodDeclaration
android.content.Intent$createChooser EXP this <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getAdapter <type>android.widget.ListAdapter <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.VISIBLE # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.GONE # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # Block
android.util.Log$getStackTraceString EXP this FIELD # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.VISIBLE # Block
android.widget.Button$setText @0 <type>android.widget.Button com.squareup.leakcanary.R.string.leak_canary_delete # Block
android.widget.ListView$setAdapter @0 <type>android.widget.ListView null # end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>DisplayLeakAdapter # begin end Block
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin Block
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.VISIBLE # Block
android.widget.Button$setText @0 <type>android.widget.Button com.squareup.leakcanary.R.string.leak_canary_delete # end Block
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setVisibility @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$notifyDataSetChanged @0 <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>LeakListAdapter # begin end Block
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin Block
android.widget.Button$setText @0 <type>android.widget.Button com.squareup.leakcanary.R.string.leak_canary_delete_all # end Block
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.squareup.leakcanary.R.id.__leak_canary_row_text # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.squareup.leakcanary.R.id.__leak_canary_row_time # end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin MethodDeclaration
android.text.format.DateUtils$formatDateTime <type>String this DisplayLeakActivity.this EXP EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this DisplayLeakActivity.this # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_expand_inner_simple_title # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView mTitle # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint color # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float EXP Integer.MAX_VALUE EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow <type>android.view.Window <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow <type>android.view.Window <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$alpha EXP this <type>int # begin MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>float <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette.Swatch$getHsl EXP <type>android.support.v7.graphics.Palette.Swatch # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$from EXP this <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin IfTrue
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this EXP <type>int # end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setAnimation @0 <type>android.widget.ImageView null # begin end Block
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry$getInstrumentation EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of VideoLibraryModel" EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isClickable EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.headerbar # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.headerbar # begin MethodDeclaration
android.support.test.espresso.Espresso.onView <type>android.support.test.espresso.ViewInteraction this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.ViewInteraction$check @0 <type>android.support.test.espresso.ViewInteraction EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent EXP # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this SampleList.this # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext <type>android.content.Context <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this <type>String # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.GRAY # begin ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 1f # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 90 # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 1f # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setImportantForAccessibility @0 this FIELD android.support.v4.view.ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.divider <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_divider # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin Block
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.fragment EXP ViewPagerTabFragmentParentFragment.FRAGMENT_TAG # Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # Block
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap <type>int <type>int <type>int <type>int # end MethodDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode EXP this <type>String android.util.Base64.DEFAULT # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this RangeResponseSample.this "Unable to determine remote file's size, or\nremote server doesn't support ranges" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$setDataSource @0 <type>android.media.MediaMetadataRetriever <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$getFrameAtTime EXP <type>android.media.MediaMetadataRetriever # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$release @0 <type>android.media.MediaMetadataRetriever # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin TryBlock
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end TryBlock
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail <type>android.graphics.Bitmap this EXP android.provider.MediaStore.Video.Thumbnails.MINI_KIND # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin IfTrue
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # IfTrue
android.graphics.Bitmap$createScaledBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap EXP EXP true # end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_with_long_press null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.with_long_press_list_view_frame # MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.with_long_press_list_view # end MethodDeclaration
android.widget.ListView$setOnItemLongClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>in.srain.cube.views.list.ListViewDataAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.with_long_press_list_view_item null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.with_long_press_list_image # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$setId @0 <type>android.widget.TextView android.R.id.text1 # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.LinearLayout # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.LinearLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setId @0 <type>android.widget.LinearLayout <type>int # begin MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setId @0 <type>android.widget.TextView android.R.id.text2 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "image/*" # begin MethodDeclaration
android.net.Uri$fromFile <type>android.net.Uri this EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_STREAM <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.TouchUtils$touchAndCancelView @0 this this <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.ContactsContract.Contacts.CONTENT_URI EXP null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.ContactsContract.Contacts.DISPLAY_NAME # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_flexiblespacewithimagerecyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.fragment_root # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SCROLL_Y 0 # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.LayoutManager$scrollToPositionWithOffset @0 <type>android.support.v7.widget.RecyclerView.LayoutManager 0 EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.LayoutManager$scrollToPositionWithOffset @0 <type>android.support.v7.widget.RecyclerView.LayoutManager <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.list_background # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_ID <type>String # begin MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_TITLE <type>String # MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_START <type>long # MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_END <type>long # MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_TYPE <type>String # MethodDeclaration
android.content.ContentProviderOperation.Builder$withValue @0 <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_SUBTITLE <type>String # MethodDeclaration
android.content.ContentProviderOperation.Builder$build EXP <type>android.content.ContentProviderOperation.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ScaleGestureDetector$getScaleFactor <type>float <type>android.view.ScaleGestureDetector # begin end MethodDeclaration
android.view.ScaleGestureDetector$getFocusX EXP <type>android.view.ScaleGestureDetector # begin MethodDeclaration
android.view.ScaleGestureDetector$getFocusY EXP <type>android.view.ScaleGestureDetector # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ScaleGestureDetector$isInProgress EXP <type>android.view.ScaleGestureDetector # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ScaleGestureDetector$onTouchEvent @0 <type>android.view.ScaleGestureDetector <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnGenericMotionListener @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance this.broadcastManager this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>AccessToken <type>android.content.Intent AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN # begin Block
android.content.Intent$getParcelableExtra <type>AccessToken <type>android.content.Intent AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN # end Block
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter AccessTokenManager.ACTION_CURRENT_ACCESS_TOKEN_CHANGED # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver <type>android.content.IntentFilter # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.example.android.uamp.R.layout.fragment_playback_controls <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View com.example.android.uamp.R.id.play_pause # MethodDeclaration
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton true # MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton <type>android.view.View.OnClickListener # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.android.uamp.R.id.title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.android.uamp.R.id.artist # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.example.android.uamp.R.id.extra_info # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.example.android.uamp.R.id.album_art # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent MusicPlayerActivity.EXTRA_CURRENT_MEDIA_DESCRIPTION EXP # end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getMetadata EXP <type>android.media.session.MediaController # begin Block
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # Block
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.media.session.PlaybackState$getErrorMessage EXP <type>android.media.session.PlaybackState # begin SwitchCase
android.media.session.PlaybackState$getErrorMessage EXP <type>android.media.session.PlaybackState # SwitchCase
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getExtras EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getTransportControls EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getTransportControls EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_header_inner_simple_title # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView mTitle # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this "CardHeader" "You set visible=true to other button menu, but you don't add any listener" # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getMethod <type>java.lang.reflect.Method this "setSystemUiVisibility" int # begin end TryBlock
<END>
<S2>
<S1>
android.os.Debug$getNativeHeapAllocatedSize EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getParentFragment <type>android.support.v4.app.Fragment <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver2" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver2" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelableArray <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$isMutable EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$reconfigure @0 <type>android.graphics.Bitmap <type>int <type>int <type>android.graphics.Bitmap.Config # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Debug$isDebuggerConnected EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Message$sendToTarget @0 <type>android.os.Message # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception starring gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getLeft EXP <type>android.view.ViewGroup # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.icon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_icon # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # ConstructorDeclaration
android.view.View$findViewById this.description <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_description # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$inflate <type>android.view.View this <type>android.content.Context R.layout.widget_fab_button this # begin MethodDeclaration
android.view.View$findViewById <type>CircleImageView <type>android.view.View R.id.fabbutton_circle # MethodDeclaration
android.view.View$findViewById <type>ProgressRingView <type>android.view.View R.id.fabbutton_ring # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet R.styleable.CircleImageView # begin Block
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_android_color android.graphics.Color.BLACK # Block
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_progressColor android.graphics.Color.BLACK # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_android_progress 0f # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_android_max 100f # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_android_indeterminate false # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_autoStart true # Block
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_android_indeterminateDuration <type>int # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_android_src <type>int # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_progressWidthRatio <type>float # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_endBitmap R.drawable.ic_fab_complete # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_showEndBitmap false # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_hideProgressOnComplete false # Block
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_showShadow true # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getMinimumHeight <type>int this <type>android.support.design.widget.AppBarLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$getChildCount <type>int <type>android.support.design.widget.AppBarLayout # begin Block
android.support.design.widget.AppBarLayout$getChildAt EXP <type>android.support.design.widget.AppBarLayout EXP # Block
android.support.v4.view.ViewCompat$getMinimumHeight EXP this EXP # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>FabButton # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>FabButton # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setTranslationY @0 this <type>FabButton <type>float # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout$getDependencies <type>java.util.List <type>android.support.design.widget.CoordinatorLayout <type>FabButton # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getTranslationY EXP this <type>android.view.View # begin Block
android.view.View$getHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>FabButton # begin end Block
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 200 # begin Block
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this <type>FabButton # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR # begin Block
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 200 # end Block
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_native_fragment_staggeredgrid <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplication EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_recyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$setGravity @0 <type>android.widget.Toast android.view.Gravity.CENTER_VERTICAL 0 0 # begin MethodDeclaration
android.widget.Toast$setDuration @0 <type>android.widget.Toast android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.Toast$setView @0 <type>android.widget.Toast EXP # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$invalidate @0 <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$reset @0 <type>android.view.animation.Animation # begin MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation android.view.animation.Animation.INFINITE # begin MethodDeclaration
android.view.animation.Animation$setRepeatMode @0 <type>android.view.animation.Animation android.view.animation.Animation.RESTART # MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation <type>android.view.animation.Interpolator # MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View EXP # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_sample <type>android.view.ViewGroup false # begin Block
android.view.View$findViewById FIELD <type>android.view.View R.id.txt_line1 # Block
android.view.View$findViewById FIELD <type>android.view.View R.id.btn_go # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>double <type>android.util.SparseArray <type>int 0.0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>int <type>double # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_line_indicator_selected_color # begin ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_line_indicator_unselected_color # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_line_indicator_line_width # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_line_indicator_gap_width # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_line_indicator_stroke_width # ConstructorDeclaration
android.content.res.Resources$getBoolean <type>boolean <type>android.content.res.Resources R.bool.default_line_indicator_centered # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.LinePageIndicator_centered <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.LinePageIndicator_lineWidth <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.LinePageIndicator_gapWidth <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.LinePageIndicator_strokeWidth <type>float # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.LinePageIndicator_unselectedColor <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.LinePageIndicator_selectedColor <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.LinePageIndicator_android_background # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # ConstructorDeclaration
android.support.v4.view.ViewConfigurationCompat$getScaledPagingTouchSlop <type>int this <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # begin MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # begin SwitchCase
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$fakeDragBy @0 <type>android.support.v4.view.ViewPager <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$endFakeDrag @0 <type>android.support.v4.view.ViewPager # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end SwitchCase
android.support.v4.view.MotionEventCompat$findPointerIndex EXP this <type>android.view.MotionEvent <type>int # begin SwitchCase
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent EXP # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.util.FloatMath$ceil EXP this <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.util.FloatMath$ceil EXP this <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.content.ContentResolver.SCHEME_CONTENT$equals EXP this EXP # MethodDeclaration
android.net.Uri$getAuthority EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$getType <type>String <type>android.content.ContentResolver FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentUris.parseId <type>long this FIELD # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri <type>String null null null # begin end TryBlock
android.database.Cursor$getInt EXP <type>android.database.Cursor 0 # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray io.plaidapp.R.styleable.ForegroundView_android_foreground # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # begin Block
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setHotspot @0 <type>android.graphics.drawable.Drawable <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageState EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.b128 # begin MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>BubbleView # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createScaledBitmap this.mBitmap this bitmap <type>int <type>int false # begin ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap FIELD FIELD <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Must be on a portrait device where the tabs are stacked. Stacked background will disappear when action mode is triggered." # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button "Start ActionMode" # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button this # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.Button # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getBooleanQueryParameter EXP <type>android.net.Uri <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter EXP <type>android.net.Uri <type>String # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter EXP <type>android.net.Uri <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle "SlidingActivityHelper.open" # begin Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle "SlidingActivityHelper.secondary" # end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "SlidingActivityHelper.open" EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "SlidingActivityHelper.secondary" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setContentView @0 <type>android.app.Activity <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getBroadcast EXP this <type>android.content.Context 0 EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin MethodDeclaration
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.ALARM_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActivityChooserView_initialActivityCount ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_DEFAULT # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActivityChooserView_expandActivityOverflowButtonDrawable # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # ConstructorDeclaration
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__activity_chooser_view this true # ConstructorDeclaration
android.widget.FrameLayout$setOnClickListener @0 <type>android.widget.FrameLayout <type>Callbacks # ConstructorDeclaration
android.widget.FrameLayout$setOnLongClickListener @0 <type>android.widget.FrameLayout <type>Callbacks # ConstructorDeclaration
android.widget.FrameLayout$findViewById <type>android.widget.ImageView <type>android.widget.FrameLayout com.actionbarsherlock.R.id.abs__image # ConstructorDeclaration
android.widget.FrameLayout$setOnClickListener @0 <type>android.widget.FrameLayout <type>Callbacks # ConstructorDeclaration
android.widget.FrameLayout$findViewById <type>android.widget.ImageView <type>android.widget.FrameLayout com.actionbarsherlock.R.id.abs__image # ConstructorDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # end ConstructorDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin ConstructorDeclaration
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources com.actionbarsherlock.R.dimen.abs__config_prefDialogWidth # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString <type>CharSequence <type>android.content.Context <type>int # begin MethodDeclaration
android.widget.ImageView$setContentDescription @0 <type>android.widget.ImageView <type>CharSequence # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$getVisibility EXP <type>android.widget.FrameLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.actionbarsherlock.R.string.abs__activitychooserview_choose_application # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnGlobalLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnGlobalLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$setEnabled @0 <type>android.widget.FrameLayout true # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setEnabled @0 <type>android.widget.FrameLayout false # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setVisibility @0 <type>android.widget.FrameLayout VISIBLE # begin Block
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # Block
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel <type>CharSequence <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin Block
android.content.Context$getString <type>String <type>android.content.Context <type>int <type>CharSequence # Block
android.widget.FrameLayout$setContentDescription @0 <type>android.widget.FrameLayout <type>String # end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setVisibility @0 <type>android.widget.FrameLayout android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getAdapter <type>ActivityChooserViewAdapter <type>android.widget.AdapterView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.widget.PopupWindow.OnDismissListener$onDismiss @0 <type>android.widget.PopupWindow.OnDismissListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$setId @0 <type>android.view.View <type>int # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.actionbarsherlock.R.id.abs__title # Block
android.content.Context$getString EXP <type>android.content.Context com.actionbarsherlock.R.string.abs__activity_chooser_view_see_all # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin SwitchCase
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.actionbarsherlock.R.id.abs__icon # SwitchCase
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # SwitchCase
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # SwitchCase
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.actionbarsherlock.R.id.abs__title # SwitchCase
android.content.pm.ResolveInfo$loadLabel EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # SwitchCase
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "This is the Artists tab" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$getFileDescriptor EXP <type>android.os.ParcelFileDescriptor # begin TryBlock
android.media.MediaMetadataRetriever$setDataSource @0 <type>android.media.MediaMetadataRetriever EXP # end TryBlock
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$release @0 <type>android.media.MediaMetadataRetriever # begin end Finally
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$close @0 <type>android.os.ParcelFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$getFileDescriptor EXP <type>android.os.ParcelFileDescriptor # begin TryBlock
android.media.MediaMetadataRetriever$setDataSource @0 <type>android.media.MediaMetadataRetriever EXP # end TryBlock
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$getFrameAtTime <type>android.graphics.Bitmap <type>android.media.MediaMetadataRetriever # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$getFrameAtTime <type>android.graphics.Bitmap <type>android.media.MediaMetadataRetriever <type>long # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$getFrameAtTime <type>android.graphics.Bitmap <type>android.media.MediaMetadataRetriever <type>long <type>Integer # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadataRetriever$release @0 <type>android.media.MediaMetadataRetriever # begin end Finally
<END>
<S2>
<S1>
android.util.Base64$encodeToString EXP this <type>byte EXP # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard_undo <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_dragdrop <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setState @0 <type>android.view.View LoadingMoreFooter.STATE_COMPLETE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setState @0 <type>android.view.View LoadingMoreFooter.STATE_NOMORE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setState @0 <type>android.view.View LoadingMoreFooter.STATE_NOMORE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setState @0 <type>android.view.View LoadingMoreFooter.STATE_LAODING # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.util.Log$i @0 this "getVisiableHeight" EXP # begin Block
android.util.Log$i @0 this "getVisiableHeight" EXP # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutManager <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.GridLayoutManager$setSpanSizeLookup @0 <type>android.support.v7.widget.GridLayoutManager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.GridLayoutManager$getSpanCount EXP <type>android.support.v7.widget.GridLayoutManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams$setFullSpan @0 <type>android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams true # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$onCreateViewHolder EXP <type>android.support.v7.widget.RecyclerView.Adapter <type>android.view.ViewGroup <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemCount <type>int <type>android.support.v7.widget.RecyclerView.Adapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$onBindViewHolder @0 <type>android.support.v7.widget.RecyclerView.Adapter <type>android.support.v7.widget.RecyclerView.ViewHolder <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemCount EXP <type>android.support.v7.widget.RecyclerView.Adapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemCount <type>int <type>android.support.v7.widget.RecyclerView.Adapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemViewType EXP <type>android.support.v7.widget.RecyclerView.Adapter <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemCount <type>int <type>android.support.v7.widget.RecyclerView.Adapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Adapter$getItemId EXP <type>android.support.v7.widget.RecyclerView.Adapter <type>int # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_cursor <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.TITLE_COLUMN # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.SUBTITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.HEADER_COLUMN # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.ID_COLUMN # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.THUMBNAIL_COLUMN # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>long <type>android.content.ContentResolver it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.CONTENT_URI EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 EXP <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP <type>float EXP # begin end Block
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP EXP <type>float # begin end Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 2000 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 2000 # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP EXP <type>float # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP <type>float EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "camera_position" <type>int # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "requesting_permission" <type>boolean # MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle "recording_start" <type>long # MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle "recording_end" <type>long # MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle "length_limit" <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "front_camera_id_str" <type>Object # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle "back_camera_id_str" <type>Object # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "front_camera_id_int" <type>Object # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "back_camera_id_int" <type>Object # begin end IfTrue
<END>
<S2>
<S1>
android.view.Window$setStatusBarColor @0 <type>android.view.Window EXP # begin Block
android.view.Window$setNavigationBarColor @0 <type>android.view.Window <type>int # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "camera_position" EXP # begin Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle "requesting_permission" false # Block
android.os.Bundle$getLong <type>long <type>android.os.Bundle "recording_start" EXP # Block
android.os.Bundle$getLong <type>long <type>android.os.Bundle "recording_end" EXP # Block
android.os.Bundle$getLong <type>long <type>android.os.Bundle "length_limit" EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>Object <type>android.os.Bundle "front_camera_id_str" # begin Block
android.os.Bundle$getString <type>Object <type>android.os.Bundle "back_camera_id_str" # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>Object <type>android.os.Bundle "front_camera_id_int" # begin Block
android.os.Bundle$getInt <type>Object <type>android.os.Bundle "back_camera_id_int" # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$checkSelfPermission EXP this this android.Manifest.permission.CAMERA # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$checkSelfPermission EXP this this android.Manifest.permission.RECORD_AUDIO # begin end Block
android.support.v4.app.ActivityCompat$requestPermissions @0 this this <type>String <type>int # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$getOutputUri EXP <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$setArguments @0 <type>android.app.Fragment EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager R.id.fragment1 # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager R.id.fragment2 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$setCustomAnimations @0 <type>android.support.v4.app.FragmentTransaction android.R.anim.fade_in android.R.anim.fade_out # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$show @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin Block
android.widget.Button$setText @0 <type>android.widget.Button "Hide" # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin Block
android.widget.Button$setText @0 <type>android.widget.Button "Show" # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.labeled_text_edit <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.msg # MethodDeclaration
android.view.View$setText @0 <type>android.view.View "The fragment saves and restores this text." # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.saved # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getCharSequence EXP <type>android.os.Bundle "text" # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin MethodDeclaration
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle "text" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.labeled_text_edit <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.msg # MethodDeclaration
android.view.View$setText @0 <type>android.view.View "The TextView saves and restores this text." # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.saved # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase EXP EXP null null null null <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.view.View$setEnabled @0 <type>android.view.View false # end MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText "" # MethodDeclaration
android.util.Log$d @0 this "DaoExample" EXP # MethodDeclaration
android.database.Cursor$requery @0 <type>android.database.Cursor # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "DaoExample" EXP # begin MethodDeclaration
android.database.Cursor$requery @0 <type>android.database.Cursor # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor EXP this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.ColorDrawable$getColor EXP <type>android.graphics.drawable.ColorDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin Block
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # MethodDeclaration
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # end MethodDeclaration
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.Path$addCircle @0 <type>android.graphics.Path EXP EXP <type>float android.graphics.Path.Direction.CW # end Block
<END>
<S2>
<S1>
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Message$getCallback <type>Runnable <type>android.os.Message # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin MethodDeclaration
android.os.Handler$postAtTime @0 <type>android.os.Handler <type>Runnable EXP <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>long # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler <type>Token # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.widget.AbsListView$getChildAt EXP <type>android.widget.AbsListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getFirstVisiblePosition EXP <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getLastVisiblePosition EXP <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getCount EXP <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getChildCount EXP <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getHeaderViewsCount <type>int <type>android.widget.AbsListView # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getPositionForView EXP <type>android.widget.AbsListView <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getAdapter EXP <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$smoothScrollBy @0 <type>android.widget.AbsListView <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>Consumer <type>ProducerContext # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder R.string.title_custom_ca # begin MethodDeclaration
android.app.AlertDialog.Builder$setMessage @0 <type>android.app.AlertDialog.Builder EXP # end MethodDeclaration
android.app.AlertDialog.Builder$setNeutralButton @0 <type>android.app.AlertDialog.Builder android.R.string.cancel EXP # begin MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER <type>java.util.concurrent.atomic.AtomicReference # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$setDividerHeight @0 <type>android.widget.ListView 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$addListener <type>com.alorma.github.sdk.bean.dto.response.User <type>android.app.Activity this # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.User <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.widget.ListView <type>int # begin end MethodDeclaration
android.app.AlertDialog$setCanceledOnTouchOutside @0 <type>android.app.AlertDialog true # begin MethodDeclaration
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # end MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.view.View # begin MethodDeclaration
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>com.alorma.github.sdk.bean.dto.response.Repo <type>int # begin MethodDeclaration
android.os.Parcel$writeTypedList @0 <type>android.os.Parcel <type>java.util.List # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>com.alorma.github.sdk.bean.dto.response.Milestone <type>int # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>com.alorma.github.sdk.bean.dto.response.User <type>int # MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse EXP this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NotificationManagerCompat$from EXP this mContext # begin MethodDeclaration
android.support.v4.app.NotificationCompat.Builder$build EXP <type>android.support.v4.app.NotificationCompat.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.bookImageUrl # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.bookDownloadUrl # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.bookTitle # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.bookDetailObjectId # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.flickr_photo_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.support.v7.widget.RecyclerView <type>android.view.View R.id.flickr_photo_list # MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.LinearLayoutManager # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>FlickrPhotoListAdapter # MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader # MethodDeclaration
android.support.v7.widget.RecyclerView$setItemViewCacheSize @0 <type>android.support.v7.widget.RecyclerView 0 # end MethodDeclaration
android.support.v7.widget.RecyclerView$setRecyclerListener @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.support.v7.widget.LinearLayoutManager$scrollToPositionWithOffset @0 <type>android.support.v7.widget.LinearLayoutManager <type>int <type>int # end Block
<END>
<S2>
<S1>
android.support.v7.widget.LinearLayoutManager$findFirstVisibleItemPosition <type>int <type>android.support.v7.widget.LinearLayoutManager # begin Block
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView 0 # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from this.inflater this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.flickr_photo_list_item <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.INPUT_METHOD_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getClassLoader EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.NOTIFICATION_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin MethodDeclaration
android.util.Log$d @0 this EXP EXP # MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # MethodDeclaration
android.widget.TextView$getText EXP <type>android.widget.TextView # MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "DoubleClick" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SimpleThreadingExample.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.painter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Activity "Your evil remote control has exploded! Now Astroboy is FREEEEEEEEEE!" android.widget.Toast.LENGTH_LONG # begin MethodDeclaration
android.app.Activity$finish @0 <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # begin MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuView_itemBackground # begin ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuView_itemTextAppearance EXP # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuView_preserveIconSpacing false # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView <type>android.content.Context <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton EXP # begin end Block
<END>
<S2>
<S1>
android.widget.CompoundButton$setVisibility @0 <type>android.widget.CompoundButton <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.CompoundButton$setVisibility @0 <type>android.widget.CompoundButton GONE # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox GONE # begin Block
android.widget.RadioButton$setVisibility @0 <type>android.widget.RadioButton GONE # end Block
<END>
<S2>
<S1>
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getLayoutParams <type>LayoutParams <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.ImageView <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__list_menu_item_icon this false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.RadioButton <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__list_menu_item_radio this false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.CheckBox <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__list_menu_item_checkbox this false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int this # begin end Block
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View 0 0 EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View 0 0 EXP <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$setVisibility @0 <type>android.view.View EXP # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$setVisibility @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "behind INVISIBLE" # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getRight <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int 0 EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int 0 EXP EXP # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this <type>int 0 0 0 # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int 0 <type>int EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getLeft <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getLeft <type>int <type>android.view.View # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int 0 <type>int EXP <type>android.graphics.Paint # Block
android.view.View$getRight <type>int <type>android.view.View # Block
android.view.View$getRight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>String <type>android.view.View R.id.selected_view # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # end Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>int 0 <type>int EXP # Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>int EXP null # end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>int 0 <type>int EXP # Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap EXP EXP null # end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View R.id.selected_view null # begin end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View R.id.selected_view EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin MethodDeclaration
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_follow # begin MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # MethodDeclaration
android.webkit.WebView$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.webkit.WebView # MethodDeclaration
android.webkit.WebView$setLayoutParams @0 <type>android.webkit.WebView <type>android.widget.FrameLayout.LayoutParams # MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this <type>String android.util.Base64.DEFAULT # begin Block
android.graphics.BitmapFactory$decodeByteArray @0 this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 EXP <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP EXP <type>float # begin end Block
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float EXP <type>float # begin end Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading tree" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "This is the Songs tab" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getClass EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getId <type>int <type>android.view.View # begin end MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewDebug.ExportedProperty$mapping EXP <type>android.view.ViewDebug.ExportedProperty # begin MethodDeclaration
android.view.ViewDebug.ExportedProperty$mapping EXP <type>android.view.ViewDebug.ExportedProperty # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewDebug.ExportedProperty$flagMapping EXP <type>android.view.ViewDebug.ExportedProperty # begin MethodDeclaration
android.view.ViewDebug.ExportedProperty$flagMapping EXP <type>android.view.ViewDebug.ExportedProperty # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MiniDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.embedded <type>android.view.Menu # begin Block
android.view.Menu$findItem EXP <type>android.view.Menu R.id.menu_1 # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textView1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textView2 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textView3 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textView4 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.carddemo_googlenowstock_list_item <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_filter_state # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_filter_labels # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_filter_milestone # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.github.pockethub.R.id.ll_assignee # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_filter_assignee # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.github.pockethub.R.id.iv_assignee_avatar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.open_issues # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.closed_issues # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.issues <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_search # MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionView <type>android.support.v7.widget.SearchView this <type>android.view.MenuItem # MethodDeclaration
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # MethodDeclaration
android.support.v7.widget.SearchView$setSearchableInfo @0 <type>android.support.v7.widget.SearchView EXP # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY <type>com.alorma.github.sdk.bean.dto.response.Repo # MethodDeclaration
android.support.v7.widget.SearchView$setAppSearchData @0 <type>android.support.v7.widget.SearchView <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.github.pockethub.core.issue.IssueFilter <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE_FILTER # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.Issue <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_comment_icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_file_icon # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.chart # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 14 0 # begin MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 14 0 # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 14 25 0 # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 14 25 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 25 EXP 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 25 EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder "repos JOIN users ON (repos.ownerId = users.id)" # begin MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query EXP <type>android.database.sqlite.SQLiteQueryBuilder <type>android.database.sqlite.SQLiteDatabase EXP "repos.orgId=?" EXP null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong FIELD <type>android.database.Cursor 0 # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 1 # MethodDeclaration
android.database.Cursor$getInt FIELD <type>android.database.Cursor 2 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 3 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 4 # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor 5 # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor 6 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 7 # MethodDeclaration
android.database.Cursor$getInt FIELD <type>android.database.Cursor 8 # MethodDeclaration
android.database.Cursor$getInt FIELD <type>android.database.Cursor 9 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 10 # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor 11 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 12 # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete @0 <type>android.database.sqlite.SQLiteDatabase "repos" "orgId=?" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin Block
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # end Block
android.view.View$getLayoutParams EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewParent$removeView @0 <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrShowIndicator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$scrollTo @0 <type>android.view.View EXP EXP # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.IndicatorLayout <type>android.widget.FrameLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$removeView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.IndicatorLayout # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.IndicatorLayout <type>android.widget.FrameLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$removeView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.IndicatorLayout # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this LOG_TAG "isFirstItemVisible. Empty View." # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this LOG_TAG "isLastItemVisible. Empty View." # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.isRoot EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.UiController$loopMainThreadUntilIdle @0 <type>android.support.test.espresso.UiController # begin MethodDeclaration
android.view.View$getContext <type>android.app.Activity <type>android.view.View # MethodDeclaration
android.app.Activity$setRequestedOrientation @0 <type>android.app.Activity <type>int # end MethodDeclaration
android.support.test.runner.lifecycle.ActivityLifecycleMonitorRegistry$getInstance EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.TriBadgedView_TribadgeGravity com.github.chaossss.widget.badge.TriBadge.BOTTOMRIGHT # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint dividerColor # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildCount <type>int <type>android.support.v7.widget.RecyclerView # begin MethodDeclaration
android.support.v7.widget.RecyclerView$getLayoutManager <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.support.v7.widget.RecyclerView # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildAt <type>android.view.View <type>android.support.v7.widget.RecyclerView <type>int # begin Block
android.support.v7.widget.RecyclerView$getChildViewHolder <type>android.support.v7.widget.RecyclerView.ViewHolder <type>android.support.v7.widget.RecyclerView <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedRight <type>int <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # begin Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedBottom <type>int <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedLeft EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP <type>int <type>int <type>android.graphics.Paint # Block
android.support.v7.widget.RecyclerView.LayoutManager$getDecoratedTop EXP <type>android.support.v7.widget.RecyclerView.LayoutManager <type>android.view.View # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP <type>int EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$queryBroadcastReceivers <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>CustomTabsHelperFragment <type>android.support.v4.app.FragmentManager <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.gists <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$startActivityForResult @0 <type>android.support.v4.app.Fragment <type>android.content.Intent <type>int # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$startActivityForResult @0 <type>android.app.Fragment <type>android.content.Intent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>int <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin SwitchCase
android.graphics.Rect$width EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # SwitchCase
android.graphics.Rect$height EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$drawPicture @0 <type>android.graphics.Canvas EXP <type>android.graphics.Rect # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint color # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Outline$setRoundRect @0 <type>android.graphics.Outline EXP <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.lidroid.xutils.sample.R.layout.bitmap_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.LayoutInflater$getContext EXP <type>android.view.LayoutInflater # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "url" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.lidroid.xutils.sample.R.layout.bitmap_item null # begin Block
android.view.View$setTag @0 <type>android.view.View <type>ImageItemHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ImageItemHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable 500 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas FIELD FIELD # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.4f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 77 255 # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable false <type>boolean # begin MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable true <type>boolean # MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable false <type>boolean # MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable true <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View.OnClickListener$onClick @0 <type>android.view.View.OnClickListener <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View.OnClickListener$onClick @0 <type>android.view.View.OnClickListener <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_show_amination # begin MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_show_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_hide_amination # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_hide_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt EXP <type>android.widget.LinearLayout <type>int # begin Block
android.widget.LinearLayout$getChildAt EXP <type>android.widget.LinearLayout <type>int # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt EXP <type>android.widget.LinearLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_TOP 1 # begin Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.BELOW R.id.material_drawer_sticky_header # end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View R.drawable.material_drawer_shadow_bottom # begin Block
android.view.View$getLayoutParams <type>android.widget.RelativeLayout.LayoutParams <type>android.view.View # Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.BELOW R.id.material_drawer_sticky_header # Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IDrawerItem <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IDrawerItem <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM 1 # begin end Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ABOVE R.id.material_drawer_sticky_footer # begin end Block
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ABOVE R.id.material_drawer_sticky_footer # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout EXP # begin MethodDeclaration
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # MethodDeclaration
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setMinimumHeight @0 <type>android.widget.LinearLayout EXP # begin MethodDeclaration
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # MethodDeclaration
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.widget.LinearLayout <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$setPadding @0 <type>android.view.ViewGroup 0 0 0 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout.LayoutParams$setMarginEnd @0 <type>android.support.v4.widget.DrawerLayout.LayoutParams 0 # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout.LayoutParams$setMarginEnd @0 <type>android.support.v4.widget.DrawerLayout.LayoutParams EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.ActivityManager <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin MethodDeclaration
android.app.ActivityManager$isLowRamDevice EXP <type>android.app.ActivityManager # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.app.Activity # begin MethodDeclaration
android.accounts.AccountManager$getAccountsByType EXP <type>android.accounts.AccountManager com.google.android.gms.auth.GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RadioGroup$findViewById <type>android.widget.RadioButton <type>android.widget.RadioGroup <type>int # begin MethodDeclaration
android.widget.RadioButton$getText EXP <type>android.widget.RadioButton # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.welcome_account_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.RadioGroup <type>android.view.View com.google.samples.apps.iosched.R.id.welcome_account_list # begin MethodDeclaration
android.widget.RadioGroup$removeAllViews @0 <type>android.widget.RadioGroup # MethodDeclaration
android.widget.RadioGroup$setOnCheckedChangeListener @0 <type>android.widget.RadioGroup this # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri.Builder$scheme @0 <type>android.net.Uri.Builder <type>String # begin MethodDeclaration
android.net.Uri.Builder$authority @0 <type>android.net.Uri.Builder <type>String # MethodDeclaration
android.net.Uri.Builder$path @0 <type>android.net.Uri.Builder <type>String # end MethodDeclaration
android.net.Uri.Builder$build EXP <type>android.net.Uri.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBooleanArray @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putDouble @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putDoubleArray @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putIntArray @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putLongArray @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty <type>boolean this <type>String # begin MethodDeclaration
android.text.TextUtils$isEmpty <type>boolean this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.CookieSyncManager$createInstance <type>android.webkit.CookieSyncManager this <type>android.content.Context # begin MethodDeclaration
android.webkit.CookieSyncManager$sync @0 <type>android.webkit.CookieSyncManager # MethodDeclaration
android.webkit.CookieManager$getInstance <type>android.webkit.CookieManager this # MethodDeclaration
android.webkit.CookieManager$getCookie <type>String <type>android.webkit.CookieManager <type>String # end MethodDeclaration
android.webkit.CookieManager$removeExpiredCookie @0 <type>android.webkit.CookieManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin end TryBlock
<END>
<S2>
<S1>
android.view.WindowManager$getDefaultDisplay <type>android.view.Display <type>android.view.WindowManager # begin Block
android.view.Display$getMetrics @0 <type>android.view.Display <type>android.util.DisplayMetrics # end Block
<END>
<S2>
<S1>
android.content.Context$getClass EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.net.Uri$getScheme EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.provider.OpenableColumns.SIZE # begin TryBlock
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # TryBlock
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$readInt <type>int <type>android.os.Parcel # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readString EXP <type>android.os.Parcel # begin Block
android.os.Parcel$readString EXP <type>android.os.Parcel # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "id,name,first_name,middle_name,last_name,link" # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.telephony.TelephonyManager <type>android.content.Context android.content.Context.TELEPHONY_SERVICE # begin TryBlock
android.telephony.TelephonyManager$getNetworkOperatorName <type>String <type>android.telephony.TelephonyManager # end TryBlock
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageState EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>File this # begin Block
android.os.StatFs$getAvailableBlocks EXP <type>android.os.StatFs # Block
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>File this # begin Block
android.os.StatFs$getBlockCount EXP <type>android.os.StatFs # Block
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # end Block
<END>
<S2>
<S1>
android.os.Debug$stopMethodTracing @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Debug$startMethodTracing @0 this <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Debug$stopMethodTracing @0 this # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$setLayoutResource @0 <type>android.view.ViewStub EXP # begin Block
android.view.ViewStub$inflate EXP <type>android.view.ViewStub # end Block
<END>
<S2>
<S1>
android.util.SparseArray$valueAt <type>it.gmariotti.cardslib.library.cards.actions.SupplementalAction <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP <type>it.gmariotti.cardslib.library.cards.actions.BaseSupplementalAction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Dialog$show @0 <type>android.app.Dialog # begin end Block
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # begin end Block
<END>
<S2>
<S1>
android.app.Activity$runOnUiThread @0 <type>android.app.Activity EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$runOnUiThread @0 <type>android.app.Activity EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end MethodDeclaration
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin end MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteQueryBuilder <type>android.database.sqlite.SQLiteDatabase <type>String <type>String <type>String null null <type>String # begin MethodDeclaration
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder <type>String # begin end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder <type>String # begin SwitchCase
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # SwitchCase
android.database.sqlite.SQLiteQueryBuilder$appendWhere @0 <type>android.database.sqlite.SQLiteQueryBuilder EXP # end SwitchCase
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager EXP android.content.res.AssetManager.ACCESS_STREAMING # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$openFd <type>android.content.res.AssetFileDescriptor <type>android.content.res.AssetManager EXP # begin TryBlock
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$close @0 <type>android.content.res.AssetFileDescriptor # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getActionIndex <type>int <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin MethodDeclaration
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 1 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 3 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 5 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler ResourceRecyclerCallback.RECYCLE_RESOURCE <type>Resource # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getFloat <type>float <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putFloat @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$requestLayout @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getHost <type>String <type>android.net.Uri # begin end Block
android.net.Uri$getScheme <type>String <type>android.net.Uri # begin end Block
android.net.Uri$getPath <type>String <type>android.net.Uri # begin end Block
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end IfFalse
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end IfFalse
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog com.github.pockethub.R.string.title_invalid_github_url # begin MethodDeclaration
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # end MethodDeclaration
android.app.AlertDialog$setOnCancelListener @0 <type>android.app.AlertDialog EXP # begin end MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_POSITIVE EXP EXP # begin MethodDeclaration
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 1 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v7.app.AppCompatActivity # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getId <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag EXP <type>android.support.v4.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$invalidateOptionsMenu @0 <type>android.support.v7.app.AppCompatActivity # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getGroupId EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getOrder EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitleCondensed @0 <type>android.view.MenuItem <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitleCondensed EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getIcon EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setIntent @0 <type>android.view.MenuItem <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getIntent EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setShortcut @0 <type>android.view.MenuItem <type>char <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setNumericShortcut @0 <type>android.view.MenuItem <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getNumericShortcut EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setAlphabeticShortcut @0 <type>android.view.MenuItem <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getAlphabeticShortcut EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setCheckable @0 <type>android.view.MenuItem <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isCheckable EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isChecked EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isVisible EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isEnabled EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$hasSubMenu EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getSubMenu EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setOnMenuItemClickListener @0 <type>android.view.MenuItem this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getMenuInfo EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setShowAsAction @0 <type>android.view.MenuItem <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setShowAsActionFlags @0 <type>android.view.MenuItem <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setActionView @0 <type>android.view.MenuItem <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setActionView @0 <type>android.view.MenuItem <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getActionView <type>android.view.View <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setActionView @0 <type>android.view.MenuItem EXP # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getActionView <type>android.view.View <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$unwrap EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setActionProvider @0 <type>android.view.MenuItem EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getActionProvider <type>android.view.ActionProvider <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionProvider$unwrap EXP <type>android.view.ActionProvider # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$expandActionView EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$collapseActionView EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isActionViewExpanded EXP <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setOnActionExpandListener @0 <type>android.view.MenuItem <type>android.view.MenuItem.OnActionExpandListener # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_googleprogress <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_secondaryTitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ALPHA_8 # begin ClassDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ALPHA_8 # ClassDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ALPHA_8 # ClassDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ALPHA_8 # ClassDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ALPHA_8 # end ClassDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # begin MethodDeclaration
android.content.SharedPreferences.OnSharedPreferenceChangeListener$onSharedPreferenceChanged @0 <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener <type>android.content.SharedPreferences <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String "None Set" # begin MethodDeclaration
android.preference.Preference$setSummary @0 <type>android.preference.Preference EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0.5f 1 0.5f # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this EXP "rotation" 0 180 360 # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 1000 # MethodDeclaration
android.animation.ObjectAnimator$setRepeatCount @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$next <type>int <type>android.content.res.XmlResourceParser # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$next <type>int <type>android.content.res.XmlResourceParser # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeValue <type>String <type>android.content.res.XmlResourceParser null "name" # begin Block
android.content.res.XmlResourceParser$getAttributeValue <type>String <type>android.content.res.XmlResourceParser null "package" # Block
android.content.res.XmlResourceParser$getAttributeBooleanValue <type>boolean <type>android.content.res.XmlResourceParser null "release" false # Block
android.content.res.XmlResourceParser$nextText EXP <type>android.content.res.XmlResourceParser # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
android.util.Base64$encodeToString <type>String this EXP android.util.Base64.NO_WRAP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String android.content.pm.PackageManager.GET_SIGNATURES # begin end TryBlock
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.ImageView$measure @0 <type>android.widget.ImageView EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$measure @0 <type>android.widget.ImageView EXP EXP # begin MethodDeclaration
android.widget.ImageView$layout @0 <type>android.widget.ImageView 0 0 200 200 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.ImageView$measure @0 <type>android.widget.ImageView EXP EXP # MethodDeclaration
android.widget.ImageView$layout @0 <type>android.widget.ImageView 0 0 200 200 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
android.util.Log$d @0 this <type>String "Sync campaign finished" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Cancelled" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.title_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "This action provided by the TitlesFragment" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getIntent <type>android.content.Intent <type>android.support.v4.app.FragmentActivity # begin Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle NativeProtocol.WEB_DIALOG_IS_FALLBACK false # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle NativeProtocol.WEB_DIALOG_ACTION # begin Block
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle NativeProtocol.WEB_DIALOG_PARAMS # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$finish @0 <type>android.support.v4.app.FragmentActivity # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle NativeProtocol.WEB_DIALOG_URL # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$finish @0 <type>android.support.v4.app.FragmentActivity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getIntent EXP <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentActivity$setResult @0 <type>android.support.v4.app.FragmentActivity <type>int <type>android.content.Intent # MethodDeclaration
android.support.v4.app.FragmentActivity$finish @0 <type>android.support.v4.app.FragmentActivity # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtras @0 <type>android.content.Intent EXP # begin MethodDeclaration
android.support.v4.app.FragmentActivity$setResult @0 <type>android.support.v4.app.FragmentActivity android.app.Activity.RESULT_OK <type>android.content.Intent # MethodDeclaration
android.support.v4.app.FragmentActivity$finish @0 <type>android.support.v4.app.FragmentActivity # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext <type>android.content.Context <type>android.view.ViewGroup # begin MethodDeclaration
android.support.v17.leanback.widget.ImageCardView$setFocusable @0 <type>android.support.v17.leanback.widget.ImageCardView true # MethodDeclaration
android.support.v17.leanback.widget.ImageCardView$setFocusableInTouchMode @0 <type>android.support.v17.leanback.widget.ImageCardView true # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.support.v17.leanback.widget.ImageCardView$setBackgroundColor @0 <type>android.support.v17.leanback.widget.ImageCardView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaDescription$getTitle EXP <type>android.media.MediaDescription # begin MethodDeclaration
android.media.MediaDescription$getSubtitle EXP <type>android.media.MediaDescription # MethodDeclaration
android.media.MediaDescription$getIconUri <type>android.net.Uri <type>android.media.MediaDescription # end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$toString EXP <type>android.media.browse.MediaBrowser.MediaItem # begin Block
android.media.browse.MediaBrowser.MediaItem$getDescription <type>android.media.MediaDescription <type>android.media.browse.MediaBrowser.MediaItem # end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription <type>android.media.MediaDescription <type>android.media.session.MediaSession.QueueItem # begin end Block
<END>
<S2>
<S1>
android.media.MediaDescription$getIconBitmap EXP <type>android.media.MediaDescription # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.media.MediaDescription$getIconBitmap EXP <type>android.media.MediaDescription # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # begin ConstructorDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint 280f # ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.graphics.Paint$setFakeBoldText @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.CENTER # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas FIELD FIELD # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Paint$descent EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$ascent EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_flexiblespacewithimagescrollview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.fragment_root # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SCROLL_Y 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeBundle @0 <type>android.os.Parcel <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putAll @0 <type>android.os.Bundle <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.format.DateUtils$formatDateTime <type>String this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this PullToRefreshListActivity.this "End of List!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$notifyDataSetChanged @0 <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add @0 <type>android.view.Menu 0 <type>int 0 "Manual Refresh" # begin MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu 0 <type>int 1 EXP # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu 0 <type>int 0 EXP # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu 0 <type>int 0 "Demo" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ContextMenu$setHeaderTitle @0 <type>android.view.ContextMenu EXP # begin MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Item 1" # MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Item 2" # MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Item 3" # MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Item 4" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.recycler_view <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.support.v7.widget.RecyclerView <type>android.view.View R.id.recycler_view # MethodDeclaration
android.support.v7.widget.GridLayoutManager$setOrientation @0 <type>android.support.v7.widget.GridLayoutManager android.support.v7.widget.RecyclerView.HORIZONTAL # MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.GridLayoutManager # MethodDeclaration
android.support.v7.widget.RecyclerView$setHasFixedSize @0 <type>android.support.v7.widget.RecyclerView true # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>RecyclerAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.jeremyfeinstein.slidingmenu.example.R.layout.list null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$getDeclaredMethod <type>java.lang.reflect.Method this "clone" # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this <type>int 0 0 0 # begin Block
android.graphics.Paint$setShadowLayer @0 <type>android.graphics.Paint <type>float <type>float <type>float EXP # end Block
<END>
<S2>
<S1>
android.graphics.Paint$clearShadowLayer @0 <type>android.graphics.Paint # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin end MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin end MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "currentRingWidth" 0f 0f # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # end MethodDeclaration
android.animation.ObjectAnimator$addListener @0 <type>android.animation.ObjectAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet R.styleable.CircleImageView # begin Block
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_android_color android.graphics.Color.BLACK # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_progressWidthRatio <type>float # Block
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_showShadow true # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$setCrossFadeEnabled @0 <type>android.graphics.drawable.TransitionDrawable true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$resetTransition @0 <type>android.graphics.drawable.TransitionDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>int <type>int <type>float <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>int <type>int <type>int <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$setFloatValues @0 <type>android.animation.ObjectAnimator <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$setFloatValues @0 <type>android.animation.ObjectAnimator <type>int 0f # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable 500 # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "currentRingWidth" 0f 0f # begin Block
android.animation.ObjectAnimator$setFloatValues @0 <type>android.animation.ObjectAnimator 1 # Block
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # Block
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsIntent$launchUrl @0 <type>android.support.customtabs.CustomTabsIntent <type>android.app.Activity <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.app.Activity$unbindService @0 <type>android.app.Activity <type>android.support.customtabs.CustomTabsServiceConnection # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$newSession <type>android.support.customtabs.CustomTabsSession <type>android.support.customtabs.CustomTabsClient null # begin end Block
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$bindCustomTabsService @0 this <type>android.app.Activity <type>String <type>android.support.customtabs.CustomTabsServiceConnection # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsSession$mayLaunchUrl EXP <type>android.support.customtabs.CustomTabsSession <type>android.net.Uri <type>android.os.Bundle <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$warmup @0 <type>android.support.customtabs.CustomTabsClient 0L # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP <type>float EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin IfFalse
android.view.View$getParent EXP <type>android.view.View # end IfFalse
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin IfFalse
android.view.View$getParent EXP <type>android.view.View # end IfFalse
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "Hello World!" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Doing some background work." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Don't use this kind of animation in a grid" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Don't use this kind of animation in a grid" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$unregisterDataSetObserver @0 <type>android.widget.SpinnerAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getCount mItemCount <type>android.widget.SpinnerAdapter # begin Block
android.widget.SpinnerAdapter$registerDataSetObserver @0 <type>android.widget.SpinnerAdapter <type>android.database.DataSetObserver # end Block
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getView <type>android.view.View <type>android.widget.SpinnerAdapter <type>int null this # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>android.view.View <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$delete @0 <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$size <type>int <type>android.util.SparseArray # begin end MethodDeclaration
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$valueAt <type>android.view.View <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.lidroid.xutils.sample.R.layout.db_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end TryBlock
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end TryBlock
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin TryBlock
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>char <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$indexOfKey <type>int <type>android.util.SparseArray <type>int # begin end Block
android.util.SparseArray$get <type>float <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.test.TouchUtils$tapView @0 this this <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Spinner$setSelection @0 <type>android.widget.Spinner <type>int true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Spinner$setSelection @0 <type>android.widget.Spinner <type>int true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getAdapter EXP <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$smoothScrollBy @0 <type>android.support.v7.widget.RecyclerView 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SlidingUpBaseActivity.this "floating action button clicked" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setBackgroundColor @0 <type>android.support.v7.widget.Toolbar android.graphics.Color.TRANSPARENT # begin MethodDeclaration
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar "" # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$getText EXP <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setHomeButtonEnabled @0 <type>android.support.v7.app.ActionBar true # begin Block
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # Block
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar "" # end Block
<END>
<S2>
<S1>
android.widget.TextView$getWidth EXP <type>android.widget.TextView # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setBackgroundColor @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # Block
android.support.v7.widget.Toolbar$getHeight EXP <type>android.support.v7.widget.Toolbar # Block
android.view.View$requestLayout @0 <type>android.view.View # Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin TryBlock
android.net.Uri$toString EXP <type>android.net.Uri # end TryBlock
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$copyPixelsToBuffer @0 <type>android.graphics.Bitmap <type>java.nio.ByteBuffer # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$copyPixelsToBuffer @0 <type>android.graphics.Bitmap <type>java.nio.ByteBuffer # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.nostra13.universalimageloader.sample.R.id.item_pause_on_scroll # begin MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.nostra13.universalimageloader.sample.R.id.item_pause_on_fling # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX ImagePagerFragment.INDEX # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.IMAGE_POSITION <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$setOnScrollListener @0 <type>android.widget.AbsListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#ff0000" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#00ff00" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.ConnectivityManager <type>android.content.Context android.content.Context.CONNECTIVITY_SERVICE # begin MethodDeclaration
android.net.ConnectivityManager$getActiveNetworkInfo <type>android.net.NetworkInfo <type>android.net.ConnectivityManager # MethodDeclaration
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource <type>android.widget.ArrayAdapter this <type>android.content.Context R.array.locations R.layout.sherlock_spinner_item # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter R.layout.sherlock_spinner_dropdown_item # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.Button$performClick @0 <type>android.widget.Button # MethodDeclaration
android.widget.Button$performClick @0 <type>android.widget.Button # MethodDeclaration
android.widget.Button$performClick @0 <type>android.widget.Button # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.toId # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.link # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.linkName # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.linkCaption # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.linkDescription # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.picture # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.mediaSource # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$setType @0 <type>android.content.Intent <type>String # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT <type>String # end MethodDeclaration
android.content.Context$getPackageName EXP <type>android.content.Context # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin ConstructorDeclaration
android.graphics.Color$rgb EXP this 63 63 63 # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.CENTER # ConstructorDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 2f # ConstructorDeclaration
android.graphics.Color$rgb EXP this 255 187 115 # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_viewpagertabfragment_parent <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.support.v4.view.ViewPager <type>android.view.View R.id.pager # MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.SlidingTabLayout <type>android.view.View R.id.sliding_tabs # MethodDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this <type>android.support.v7.app.AppCompatActivity # MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.TouchInterceptionFrameLayout <type>android.view.View R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # Block
android.widget.TextView$setSelected @0 <type>android.widget.TextView true # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setSelected @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$setSelected @0 <type>android.widget.TextView true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setSystemUiVisibility @0 <type>android.view.View <type>int # begin Block
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.content.IntentFilter$setPriority @0 <type>android.content.IntentFilter 3 # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream EXP this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseBooleanArray$get <type>boolean <type>android.util.SparseBooleanArray <type>int # begin MethodDeclaration
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.widget_schedule_day EXP # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.start_end_time EXP # begin Block
android.widget.RemoteViews$setViewVisibility @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.live_now_badge android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.start_end_time EXP # end Block
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewResource @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.icon com.google.samples.apps.iosched.R.drawable.ic_browse # begin Block
android.content.Context$getText EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.browse_sessions # Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title EXP # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title EXP # Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room FIELD # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room EXP # Block
android.widget.RemoteViews$setOnClickFillInIntent @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.box <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewResource @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.icon EXP # begin Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title FIELD # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title EXP # Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room FIELD # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room EXP # end Block
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewResource @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.icon EXP # begin Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title FIELD # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_title EXP # Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room FIELD # Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.slot_room EXP # Block
android.widget.RemoteViews$setViewVisibility @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.live_now_badge EXP # end Block
android.widget.RemoteViews$setOnClickFillInIntent @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.box <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.widget.RemoteViews$setTextColor @0 <type>android.widget.RemoteViews com.google.samples.apps.iosched.R.id.start_end_time <type>int # end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.watch_now # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.session_now # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>CompassArrowView # begin MethodDeclaration
android.hardware.SensorManager$getDefaultSensor <type>android.hardware.Sensor <type>android.hardware.SensorManager android.hardware.Sensor.TYPE_ACCELEROMETER # MethodDeclaration
android.hardware.SensorManager$getDefaultSensor <type>android.hardware.Sensor <type>android.hardware.SensorManager android.hardware.Sensor.TYPE_MAGNETIC_FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$registerListener @0 <type>android.hardware.SensorManager this <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_NORMAL # begin MethodDeclaration
android.hardware.SensorManager$registerListener @0 <type>android.hardware.SensorManager this <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_NORMAL # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$unregisterListener @0 <type>android.hardware.SensorManager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$getRotationMatrix <type>boolean this <type>float null <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$getOrientation @0 this <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.arrow # begin ClassDeclaration
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # end ClassDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$getWidth <type>int <type>android.widget.RelativeLayout # begin MethodDeclaration
android.widget.RelativeLayout$getHeight <type>int <type>android.widget.RelativeLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas EXP <type>int <type>int # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>int <type>int null # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setFlags @0 <type>android.content.Intent <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>byte # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>short # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>double # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Parcelable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Parcelable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putParcelableArrayListExtra @0 <type>android.content.Intent <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putIntegerArrayListExtra @0 <type>android.content.Intent <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putStringArrayListExtra @0 <type>android.content.Intent <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>java.io.Serializable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>byte # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>short # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>char # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>double # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.design.widget.TabLayout$setupWithViewPager @0 <type>android.support.design.widget.TabLayout <type>android.support.v4.view.ViewPager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.about_main # begin MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.about_terms # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.about_privacy_policy # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.about_licenses # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.about_eula # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft EXP <type>android.view.View # begin Block
android.view.View$getPaddingRight EXP <type>android.view.View # Block
android.view.View$getPaddingBottom EXP <type>android.view.View # Block
android.view.View$setPadding @0 <type>android.view.View EXP <type>int EXP EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button R.string.button_delete_target_file # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.CheckBox$setText @0 <type>android.widget.CheckBox "Constructor \"append\" is true?" # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox false # MethodDeclaration
android.widget.CheckBox$setText @0 <type>android.widget.CheckBox "Constructor \"renameTargetFileIfExists\" is true?" # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # begin MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.DrawShadowFrameLayout_shadowDrawable # begin end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.DrawShadowFrameLayout_shadowVisible true # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.NinePatchDrawable$getPaint EXP <type>android.graphics.drawable.NinePatchDrawable # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$cancel @0 <type>android.animation.ObjectAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this <type>android.util.Property EXP EXP # begin Block
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 1000 # Block
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>DrawShadowFrameLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$getDecorView <type>android.view.View <type>android.view.Window # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout <type>android.view.View android.R.id.content # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext <type>android.content.Context <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarView <type>android.view.View com.actionbarsherlock.R.id.abs__action_bar # MethodDeclaration
android.view.View$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarContextView <type>android.view.View com.actionbarsherlock.R.id.abs__action_context_bar # MethodDeclaration
android.view.View$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarContainer <type>android.view.View com.actionbarsherlock.R.id.abs__action_bar_container # MethodDeclaration
android.view.View$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarContainer <type>android.view.View com.actionbarsherlock.R.id.abs__split_action_bar # end MethodDeclaration
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme <type>android.content.res.Resources.Theme <type>android.content.Context # begin Block
android.content.res.Resources.Theme$resolveAttribute @0 <type>android.content.res.Resources.Theme com.actionbarsherlock.R.attr.actionBarWidgetTheme <type>android.util.TypedValue true # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getCount EXP <type>android.widget.SpinnerAdapter # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.xxmassdeveloper.mpchartexample.R.layout.frag_simple_line <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.mikephil.charting.charts.LineChart <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.lineChart1 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Light.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap android.graphics.Color.TRANSPARENT # begin end MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 mRenderPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_4444 # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin end MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mRenderPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP EXP EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP EXP EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP EXP EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin Block
android.graphics.Path$addPath @0 <type>android.graphics.Path <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int <type>float # MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLines @0 <type>android.graphics.Canvas FIELD 0 <type>int mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$clipPath @0 <type>android.graphics.Canvas <type>android.graphics.Path # MethodDeclaration
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas <type>int # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP <type>float # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # end MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # begin MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$setDuration @0 <type>android.view.animation.AlphaAnimation <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$invalidateOptionsMenu @0 <type>android.support.v7.app.AppCompatActivity # begin end IfTrue
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText @0 this this EXP android.widget.Toast.LENGTH_SHORT # begin SwitchCase
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin ConstructorDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # MethodDeclaration
android.widget.TextView$setTag @0 <type>android.widget.TextView null # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView null # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # MethodDeclaration
android.widget.TextView$setTag @0 <type>android.widget.TextView null # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTag @0 <type>android.widget.TextView <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this EXP android.util.Base64.DEFAULT # begin end Block
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP <type>String # begin end TryBlock
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this EXP # begin end TryBlock
android.content.Context$getResources EXP <type>android.content.Context # begin TryBlock
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # TryBlock
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # TryBlock
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.mikepenz.materialdrawer.app.R.layout.fragment_sample <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.mikepenz.materialdrawer.app.R.id.title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_gplay_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.github.pockethub.ui.issue.DashboardIssueFragment.ARG_FILTER <type>java.util.Map # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_watched # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_assigned # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_created # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_mentioned # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat 100 <type>java.io.ByteArrayOutputStream # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "Activity has been resumed" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 EXP # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP EXP <type>float EXP <type>float 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 <type>int # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP <type>int <type>float EXP <type>float 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 EXP # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP EXP EXP EXP EXP 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 <type>int # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path EXP <type>int EXP EXP EXP 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setScaleX @0 this <type>android.view.View <type>float # begin Block
android.support.v4.view.ViewCompat$setScaleY @0 this <type>android.view.View <type>float # end Block
<END>
<S2>
<S1>
android.view.View$setPressed @0 <type>android.view.View <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>int # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 300 # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation this # MethodDeclaration
android.view.View$clearAnimation @0 <type>android.view.View # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 200 # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas FIELD FIELD <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View 0 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain EXP this 0 0 android.view.MotionEvent.ACTION_MOVE 0 <type>float 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.PointF$set @0 <type>android.graphics.PointF <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.PointF$set @0 <type>android.graphics.PointF <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_background # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_backgroundStacked # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_backgroundSplit # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View <type>int 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View <type>int EXP <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getRight EXP <type>android.view.View # Block
android.view.View$getBottom EXP <type>android.view.View # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_expand <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading collaborators" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View 0 0 EXP EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end TryBlock
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # Block
android.util.SparseIntArray$valueAt EXP <type>android.util.SparseIntArray <type>int # Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end Block
<END>
<S2>
<S1>
android.widget.TabHost$setup @0 <type>android.widget.TabHost # begin MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "simple" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "contacts" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "custom" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "throttle" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle "tab" # begin Block
android.widget.TabHost$setCurrentTabByTag @0 <type>android.widget.TabHost EXP # end Block
<END>
<S2>
<S1>
android.widget.TabHost$getCurrentTabTag EXP <type>android.widget.TabHost # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "tab" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setMinimumWidth @0 <type>android.view.View 0 # begin MethodDeclaration
android.view.View$setMinimumHeight @0 <type>android.view.View 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TabHost$setOnTabChangedListener @0 <type>android.widget.TabHost this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TabHost.TabSpec$setContent @0 <type>android.widget.TabHost.TabSpec EXP # begin MethodDeclaration
android.widget.TabHost.TabSpec$getTag <type>String <type>android.widget.TabHost.TabSpec # MethodDeclaration
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # end MethodDeclaration
android.widget.TabHost$addTab @0 <type>android.widget.TabHost <type>android.widget.TabHost.TabSpec # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin Block
android.support.v4.app.FragmentTransaction$detach @0 <type>android.support.v4.app.FragmentTransaction FIELD # Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin end Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin Block
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$detach @0 <type>android.support.v4.app.FragmentTransaction FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$instantiate FIELD this <type>android.support.v4.app.FragmentActivity EXP FIELD # begin Block
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction <type>int FIELD FIELD # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$attach @0 <type>android.support.v4.app.FragmentTransaction FIELD # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$openAssetFileDescriptor <type>android.content.res.AssetFileDescriptor <type>android.content.ContentResolver <type>android.net.Uri "r" # begin end MethodDeclaration
android.content.res.AssetFileDescriptor$getParcelFileDescriptor EXP <type>android.content.res.AssetFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$close @0 <type>android.os.ParcelFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.os.Parcelable # begin MethodDeclaration
android.util.SparseArray$size EXP <type>android.util.SparseArray # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt <type>int <type>android.util.SparseArray <type>int # begin Block
android.os.Bundle$putInt @0 <type>android.os.Bundle EXP <type>int # Block
android.util.SparseArray$get <type>android.support.v4.app.Fragment <type>android.util.SparseArray <type>int # Block
android.support.v4.app.FragmentManager$putFragment @0 <type>android.support.v4.app.FragmentManager <type>android.os.Bundle EXP <type>android.support.v4.app.Fragment # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle EXP # begin Block
android.support.v4.app.FragmentManager$getFragment <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager <type>android.os.Bundle EXP # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>android.support.v4.app.Fragment # end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$remove @0 <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime FIELD this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.content.ContentResolver.SYNC_EXTRAS_MANUAL true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity R.string.square_blue_name # begin MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity R.string.sample_blue_title # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.ActivityOptionsCompat$makeSceneTransitionAnimation <type>android.support.v4.app.ActivityOptionsCompat this <type>android.app.Activity <type>android.support.v4.util.Pair # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "sample" <type>Sample # MethodDeclaration
android.support.v4.app.ActivityOptionsCompat$toBundle EXP <type>android.support.v4.app.ActivityOptionsCompat # MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$bind <type>com.lgvalle.material_animations.databinding.RowSampleBinding this rootView # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ActionModes.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry.getTargetContext EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent android.app.SearchManager.QUERY # begin Block
android.provider.SearchRecentSuggestions$saveRecentQuery @0 <type>android.provider.SearchRecentSuggestions <type>String null # Block
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt <type>int <type>android.util.SparseIntArray <type>int # begin Block
android.util.SparseIntArray$valueAt <type>int <type>android.util.SparseIntArray <type>int # Block
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int 0 # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int EXP # end Block
<END>
<S2>
<S1>
android.util.SparseArray$size EXP <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$valueAt <type>Bucket <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$get <type>Bucket <type>android.util.SparseArray <type>int # begin end MethodDeclaration
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Bucket # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt <type>int <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$valueAt <type>Bucket <type>android.util.SparseArray <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_webview null # begin MethodDeclaration
android.view.View$findViewById <type>android.webkit.WebView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_web_view # end MethodDeclaration
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_web_view_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of SessionDetailModel" EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_title # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_map_room # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_share # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_detail_frag # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_speakers_block # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_tags_container # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.give_feedback_card # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.give_feedback_card # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.list_view_item null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_item_image_view # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.video_library_frag <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.CollectionView <type>android.view.View com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.empty # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.video_lib_card_container <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.card_header_with_button <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View android.R.id.title # begin MethodDeclaration
android.view.View$setContentDescription @0 <type>android.view.View EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent VideoLibraryFilteredActivity.KEY_FILTER_TOPIC VideoLibraryModel.KEYNOTES_TOPIC # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent VideoLibraryFilteredActivity.KEY_FILTER_YEAR EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent VideoLibraryFilteredActivity.KEY_FILTER_TOPIC <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.video_library_item <type>android.view.ViewGroup false # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.title # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.speakers # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.description # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>CollectionItemViewHolder # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>CollectionItemViewHolder <type>android.view.View # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # end MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin Block
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # begin MethodDeclaration
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.github.pockethub.R.string.contributions FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig <type>android.graphics.Bitmap.Config <type>android.graphics.Bitmap # begin end MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap null <type>android.graphics.RectF <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float EXP EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.mikepenz.materialdrawer.app.R.layout.fragment_simple_sample <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.mikepenz.materialdrawer.app.R.id.rootView # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.mikepenz.materialdrawer.app.R.id.title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View EXP EXP # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # Block
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP <type>long # end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.ActionMode$getMenuInflater EXP <type>android.support.v7.view.ActionMode # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.search_activity <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem EXP <type>android.view.Menu R.id.search # MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionView <type>android.widget.SearchView this EXP # MethodDeclaration
android.widget.SearchView$setSubmitButtonEnabled @0 <type>android.widget.SearchView true # MethodDeclaration
android.widget.SearchView$setIconified @0 <type>android.widget.SearchView false # MethodDeclaration
android.widget.SearchView$setOnQueryTextListener @0 <type>android.widget.SearchView this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SearchView$setQuery @0 <type>android.widget.SearchView "" false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin MethodDeclaration
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # MethodDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # MethodDeclaration
android.content.res.Resources$getDimensionPixelOffset EXP <type>android.content.res.Resources R.dimen.page_margin # MethodDeclaration
android.support.v4.view.ViewPager$setPageMargin @0 <type>android.support.v4.view.ViewPager EXP # MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # end MethodDeclaration
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources R.dimen.small_photo_side # begin MethodDeclaration
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources R.dimen.medium_photo_side # MethodDeclaration
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources R.dimen.flickr_list_item_height # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.bumptech.glide.samples.flickr.api.Query <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.bumptech.glide.samples.flickr.api.Query # begin end Block
<END>
<S2>
<S1>
android.os.HandlerThread$quit @0 <type>android.os.HandlerThread # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler <type>BackgroundThumbnailFetcher # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Search failed" <type>Exception # begin end Block
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_LOWEST # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.applinkUrl # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.previewImageUrl # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource <type>android.widget.ArrayAdapter this this R.array.planets_array R.layout.simple_spinner_item # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter android.R.layout.simple_spinner_dropdown_item # MethodDeclaration
android.widget.Spinner$setAdapter @0 <type>android.widget.Spinner <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.Spinner$setAdapter @0 <type>android.widget.Spinner <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentById <type>ShareFragment <type>android.support.v4.app.FragmentManager R.id.sharefragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu R.id.menu_item_share # begin MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionProvider <type>android.support.v7.widget.ShareActionProvider this <type>android.view.MenuItem # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "text/plain" # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT <type>String # Block
android.support.v7.widget.ShareActionProvider$setShareIntent @0 <type>android.support.v7.widget.ShareActionProvider <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.widget.AbsListView$setOnTouchListener @0 <type>android.widget.AbsListView <type>SwipeDismissTouchListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton null # begin Block
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton EXP # Block
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton <type>android.widget.CompoundButton.OnCheckedChangeListener # end Block
<END>
<S2>
<S1>
android.database.CursorWindow$getNumRows <type>int <type>android.database.CursorWindow # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getNumRows EXP <type>android.database.CursorWindow # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getBlob EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getString EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getShort EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getInt EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getLong EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getFloat EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getDouble EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$isNull EXP <type>android.database.CursorWindow <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.selection <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.facebook.login.widget.ProfilePictureView <type>android.view.View R.id.selection_profile_pic # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.announce_text # MethodDeclaration
android.view.View$findViewById <type>com.facebook.share.widget.ShareButton <type>android.view.View R.id.share_button # MethodDeclaration
android.view.View$findViewById <type>com.facebook.share.widget.SendButton <type>android.view.View R.id.message_button # MethodDeclaration
android.view.View$findViewById <type>ListView <type>android.view.View R.id.selection_list # MethodDeclaration
android.view.View$findViewById <type>ImageView <type>android.view.View R.id.selected_image # MethodDeclaration
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>InputStream null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin MethodDeclaration
android.content.Intent$setClass @0 <type>android.content.Intent EXP PickerActivity # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle EXP <type>android.app.AlertDialog.Builder <type>String # begin end MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle EXP <type>android.app.AlertDialog.Builder <type>String # begin end MethodDeclaration
android.app.AlertDialog.Builder$create <type>android.app.AlertDialog <type>android.app.AlertDialog.Builder # begin MethodDeclaration
android.app.AlertDialog$getWindow EXP <type>android.app.AlertDialog # MethodDeclaration
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getByteArray <type>byte <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setCancelable EXP <type>android.app.AlertDialog.Builder true # begin end MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.provider.MediaStore.EXTRA_OUTPUT <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "image/*" # begin MethodDeclaration
android.content.Intent$createChooser EXP this <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStoragePublicDirectory EXP this android.os.Environment.DIRECTORY_PICTURES # begin MethodDeclaration
android.net.Uri$fromFile EXP this <type>File # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.listitem null # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin Block
android.view.View$findViewById <type>ImageView <type>android.view.View R.id.icon # Block
android.view.View$findViewById <type>TextView <type>android.view.View R.id.text1 # Block
android.view.View$findViewById <type>TextView <type>android.view.View R.id.text2 # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap 0 0 EXP EXP <type>android.graphics.Matrix false # end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.haarman.listviewanimations.R.string.card_number EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.haarman.listviewanimations.R.id.activity_googlecards_card_textview # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # Block
android.view.View$findViewById FIELD <type>android.view.View com.haarman.listviewanimations.R.id.activity_googlecards_card_imageview # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end Block
<END>
<S2>
<S1>
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # begin MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # MethodDeclaration
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar <type>String # MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_wrap # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_render_markdown # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # begin Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.show_raw_markdown # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.render_markdown # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.enable_wrapping # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.disable_wrapping # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.render_markdown # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.show_raw_markdown # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem true # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.alorma.github.sdk.bean.dto.response.Repo # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem true # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Loading file contents failed" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet <type>String "background" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet <type>String "background" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#1E88E5" # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 128 <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # Block
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # end Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # begin Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 EXP # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float EXP EXP # begin MethodDeclaration
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas EXP <type>int <type>int true <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.google.samples.apps.iosched.R.styleable.ScrimInsetsView <type>int 0 # begin end MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.ScrimInsetsView_appInsetForeground # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int FIELD # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 EXP <type>int <type>int # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 FIELD FIELD EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP FIELD <type>int EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_purchase" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_purchase_about null # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_app_name_and_version # begin MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_small_layout # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_small_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_small_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_medium_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_medium_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_medium_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_large_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_large_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_large_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_xlarge_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_xlarge_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.purchase_xlarge_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.view.LayoutInflater$from EXP this this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$navigateUpFromSameTask @0 this EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "nothing selected" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_base <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$setText @0 <type>android.widget.CheckBox "I'm checked" # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setText @0 <type>android.widget.CheckBox "I'm not checked" # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.INVISIBLE # begin Block
android.widget.Button$setText @0 <type>android.widget.Button "Unhide CheckBox" # end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.VISIBLE # begin Block
android.widget.Button$setText @0 <type>android.widget.Button "Hide CheckBox" # end Block
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.comment_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.gist_header null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_gist_creation # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_gist_updated # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_gist_description # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.loading_item null # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_loading # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.footer_separator null # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.github.pockethub.ui.HeaderFooterListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.no_description_given # begin end IfFalse
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.gist_view <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$removeItem @0 <type>android.view.Menu com.github.pockethub.R.id.m_delete # begin Block
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_star # Block
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.unstar # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.star # begin end IfFalse
<END>
<S2>
<S1>
android.view.Menu$removeItem @0 <type>android.view.Menu com.github.pockethub.R.id.m_star # begin end IfFalse
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.GithubComment <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra comment <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater <type>android.view.LayoutInflater <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$loaded @0 <type>android.support.v4.app.FragmentActivity EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>Object <type>android.widget.AdapterView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.GithubComment <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_COMMENT <type>com.alorma.github.sdk.bean.dto.response.GithubComment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>com.facebook.AccessToken 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$postDelayed @0 <type>android.view.View <type>Runnable <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$postOnAnimation @0 <type>android.view.View <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_header <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenu EXP <type>android.widget.PopupMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenu EXP <type>android.widget.PopupMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Other Button" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Other Button" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.github.pockethub.core.issue.IssueFilter <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.GestureDetector$onTouchEvent EXP <type>android.view.GestureDetector <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ViewFlipper$setInAnimation @0 <type>android.widget.ViewFlipper EXP # begin MethodDeclaration
android.widget.ViewFlipper$setOutAnimation @0 <type>android.widget.ViewFlipper EXP # end MethodDeclaration
android.widget.ViewFlipper$showPrevious @0 <type>android.widget.ViewFlipper # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 500 # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 500 # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_section_gplay_title # begin end Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_section_gplay_textmore # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.app.Activity$getClass <type>Class <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setContentView @0 <type>android.app.Activity EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap <type>int <type>int # begin Block
android.graphics.Bitmap$setPixel @0 <type>android.graphics.Bitmap <type>int <type>int EXP # end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View <type>int # begin MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceActivity$findPreference EXP <type>android.preference.PreferenceActivity <type>CharSequence # begin MethodDeclaration
android.preference.PreferenceGroup$findPreference EXP <type>android.preference.PreferenceGroup <type>CharSequence # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int EXP # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setMinimumHeight @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setMinimumHeight @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityTransition2Binding this this R.layout.activity_transition2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this this # begin end Block
<END>
<S2>
<S1>
android.transition.Explode$setDuration @0 <type>android.transition.Explode EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF 5 5 <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.4f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP <type>float EXP <type>float # begin end Block
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float EXP EXP <type>float # begin end Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 2000 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 2000 # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP <type>float EXP <type>float EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP <type>float <type>float EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMethod <type>java.lang.reflect.Method this "setSystemUiVisibility" int # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getMethod <type>java.lang.reflect.Method this "setSystemUiVisibility" int # begin end TryBlock
<END>
<S2>
<S1>
android.os.Debug$getNativeHeapAllocatedSize EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources com.squareup.picasso.TestUtils.RESOURCE_ID_1 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int 3 # begin end Block
<END>
<S2>
<S1>
android.webkit.MimeTypeMap$getSingleton EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 48 <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin TryBlock
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # TryBlock
android.view.View$setClickable @0 <type>android.view.View true # end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin TryBlock
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String FIELD # Block
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String FIELD # Block
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$isLoggable <type>boolean this <type>String android.util.Log.DEBUG # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.MATRIX # begin end Block
<END>
<S2>
<S1>
android.view.GestureDetector$setOnDoubleTapListener @0 <type>android.view.GestureDetector EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end IfTrue
<END>
<S2>
<S1>
android.view.View.OnLongClickListener$onLongClick @0 <type>android.view.View.OnLongClickListener EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # begin end Block
android.widget.ImageView$setOnTouchListener @0 <type>android.widget.ImageView null # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.GestureDetector$setOnDoubleTapListener @0 <type>android.view.GestureDetector null # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin MethodDeclaration
android.widget.ImageView$getParent <type>android.view.ViewParent <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent false # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent true # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$post @0 <type>android.widget.ImageView <type>FlingRunnable # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getTop <type>int <type>android.widget.ImageView # begin Block
android.widget.ImageView$getRight <type>int <type>android.widget.ImageView # Block
android.widget.ImageView$getBottom <type>int <type>android.widget.ImageView # Block
android.widget.ImageView$getLeft <type>int <type>android.widget.ImageView # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent true # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.view.View$post @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getRight EXP <type>android.widget.ImageView # begin Block
android.widget.ImageView$getBottom EXP <type>android.widget.ImageView # end Block
<END>
<S2>
<S1>
android.widget.ImageView$post @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$height <type>float <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$width <type>float <type>android.graphics.RectF # end MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 EXP EXP # Block
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawingCache EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$getValues @0 <type>android.graphics.Matrix <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageMatrix @0 <type>android.widget.ImageView <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # begin Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # begin Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.CENTER # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.START # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.END # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.FILL # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getPaddingLeft EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getPaddingRight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getPaddingTop EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getPaddingBottom EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$height EXP <type>android.graphics.RectF # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this com.squareup.picasso.Picasso.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isClosed EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToPosition <type>boolean <type>android.database.Cursor <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.HttpResponseCache$getInstalled <type>Object this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.HttpResponseCache$install <type>Object this <type>java.io.File <type>long # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end IfFalse
<END>
<S2>
<S1>
android.support.v7.widget.PopupMenu$inflate @0 <type>android.support.v7.widget.PopupMenu com.github.pockethub.R.menu.comment_popup # begin MethodDeclaration
android.support.v7.widget.PopupMenu$getMenu EXP <type>android.support.v7.widget.PopupMenu # MethodDeclaration
android.support.v7.widget.PopupMenu$getMenu EXP <type>android.support.v7.widget.PopupMenu # end MethodDeclaration
android.support.v7.widget.PopupMenu$setOnMenuItemClickListener @0 <type>android.support.v7.widget.PopupMenu EXP # begin MethodDeclaration
android.support.v7.widget.PopupMenu$show @0 <type>android.support.v7.widget.PopupMenu # end MethodDeclaration
<END>
<S2>
<S1>
android.text.method.LinkMovementMethod$getInstance EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading commit" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.NotificationManager$cancel @0 <type>android.app.NotificationManager com.donnfelker.android.bootstrap.core.Constants.Notification.TIMER_NOTIFICATION_ID # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin Block
android.os.Message$obtain EXP this <type>android.os.Handler <type>int # Block
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler EXP 1000 # end Block
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin Block
android.os.Message$obtain EXP this this <type>int # end Block
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager com.donnfelker.android.bootstrap.core.Constants.Notification.TIMER_NOTIFICATION_ID EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this this 0 <type>android.content.Intent 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception creating Gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this "Ion" EXP # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this this.uri # begin end Block
android.net.Uri.Builder$build <type>String <type>android.net.Uri.Builder # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>String this this.uri # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.app.ProgressDialog$setProgress @0 <type>android.app.ProgressDialog <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.app.ProgressDialog$setProgress @0 <type>android.app.ProgressDialog <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.util.Base64$encodeToString EXP this EXP android.util.Base64.NO_WRAP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onDownMotionEvent" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.list_item_handletouch <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context <type>String android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$v @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getVisibility EXP <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$getText EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$inflate <type>android.widget.LinearLayout this <type>android.content.Context R.layout.default_indicator null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.ImageView <type>android.widget.LinearLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$getResources EXP <type>android.widget.ImageView # begin Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # Block
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView .36f # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this EXP # begin IfFalse
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end IfFalse
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_secondaryTitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ScrollView$setId @0 <type>android.widget.ScrollView R.id.scrollview # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this ", " <type>List # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle "tags" EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "place" EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "ref" EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "message" EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "image" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle "image" # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle EXP <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle "image" # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "message" EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "link" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "picture" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "name" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "description" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "ref" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$keySet EXP <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$get EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "object" <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.net.Uri$getPath <type>String <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager EXP 0 # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.Context$getApplicationInfo EXP <type>android.content.Context # MethodDeclaration
android.content.pm.PackageManager$getApplicationLabel EXP <type>android.content.pm.PackageManager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_dismiss_animator <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.ContactsContract.Contacts.CONTENT_URI <type>String <type>String null <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onCompleted()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "onError()" <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end TryBlock
android.app.Activity$getApplicationInfo EXP <type>android.app.Activity # begin TryBlock
android.app.Activity$createPackageContext EXP <type>android.app.Activity <type>String 0 # TryBlock
android.content.res.AssetManager$openXmlResourceParser <type>android.content.res.XmlResourceParser <type>android.content.res.AssetManager "AndroidManifest.xml" # TryBlock
android.content.res.XmlResourceParser$getEventType <type>int <type>android.content.res.XmlResourceParser # end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$nextToken <type>int <type>android.content.res.XmlResourceParser # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getName <type>String <type>android.content.res.XmlResourceParser # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Got <application>" # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName EXP <type>android.content.res.XmlResourceParser <type>int # begin IfTrue
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # IfTrue
android.util.Log$d @0 this <type>String EXP # end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeResourceValue <type>int <type>android.content.res.XmlResourceParser <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Got <activity>" # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName <type>String <type>android.content.res.XmlResourceParser <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName EXP <type>android.content.res.XmlResourceParser <type>int # begin IfTrue
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # IfTrue
android.util.Log$d @0 this <type>String EXP # end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeResourceValue <type>Integer <type>android.content.res.XmlResourceParser <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin Block
android.content.Intent$setData @0 <type>android.content.Intent EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Activity com.google.samples.apps.iosched.R.string.explore_io_video_id_not_valid android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_picasso <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "LiveWallpaper test" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "LiveWallpaper test" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent "com.android.vending" # begin MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$bindService @0 <type>android.content.Context <type>android.content.Intent <type>android.content.ServiceConnection android.content.Context.BIND_AUTO_CREATE # begin end Block
<END>
<S2>
<S1>
android.content.Context$unbindService @0 <type>android.content.Context <type>android.content.ServiceConnection # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
android.os.Bundle$getParcelable <type>android.app.PendingIntent <type>android.os.Bundle <type>String # begin TryBlock
android.app.PendingIntent$getIntentSender EXP <type>android.app.PendingIntent # TryBlock
android.app.Activity$startIntentSenderForResult @0 <type>android.app.Activity EXP <type>int EXP EXP EXP EXP # end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # Block
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # end Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin Block
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this NonTranslucentDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.demo.R.styleable.CollectionView_internalPadding 0 # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.demo.R.styleable.CollectionView_contentTopClearance 0 # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTag EXP <type>android.view.View # end MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Call to makeRow without an adapter installed" # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.HORIZONTAL # begin MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt <type>android.view.View <type>android.widget.LinearLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeViewAt @0 <type>android.widget.LinearLayout <type>int # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>int <type>android.widget.LinearLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.InstrumentationTestCase$runTestOnUiThread @0 <type>android.test.InstrumentationTestCase EXP # begin MethodDeclaration
android.test.InstrumentationTestCase$getInstrumentation EXP <type>android.test.InstrumentationTestCase # end MethodDeclaration
<END>
<S2>
<S1>
android.test.InstrumentationTestCase$getInstrumentation EXP <type>android.test.InstrumentationTestCase # begin MethodDeclaration
android.test.InstrumentationTestCase$getInstrumentation EXP <type>android.test.InstrumentationTestCase # MethodDeclaration
android.test.InstrumentationTestCase$getInstrumentation EXP <type>android.test.InstrumentationTestCase # MethodDeclaration
android.test.InstrumentationTestCase$getInstrumentation EXP <type>android.test.InstrumentationTestCase # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$getWidth <type>int <type>android.view.View # MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 8 EXP # MethodDeclaration
android.test.TouchUtils$drag @0 this <type>android.test.InstrumentationTestCase <type>float <type>float <type>float <type>float <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$getWidth <type>int <type>android.view.View # MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 8 EXP # MethodDeclaration
android.test.TouchUtils$drag @0 this <type>android.test.InstrumentationTestCase <type>float <type>float <type>float <type>float <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin Block
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.CutoutTextView_font # begin Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CutoutTextView_foregroundColor <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray io.plaidapp.R.styleable.CutoutTextView_android_text # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.text.TextPaint$measureText EXP <type>android.text.TextPaint <type>String # MethodDeclaration
android.text.TextPaint$getTextBounds @0 <type>android.text.TextPaint <type>String 0 EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height <type>float <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas <type>int # MethodDeclaration
android.text.TextPaint$setXfermode @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float <type>android.text.TextPaint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end InterfaceDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>android.support.v4.app.FragmentPagerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin MethodDeclaration
android.view.View$requestLayout @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getTypeface EXP <type>android.widget.TextView # begin MethodDeclaration
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.widget.TextView$getTextSize EXP <type>android.widget.TextView # MethodDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$measureText EXP <type>android.graphics.Paint <type>char 0 FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin MethodDeclaration
android.graphics.Typeface$createFromAsset EXP this EXP <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Back key pressed!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.WindowManager$getDefaultDisplay @0 <type>android.view.WindowManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this this 0 EXP 0 # begin MethodDeclaration
android.app.Notification$setLatestEventInfo @0 <type>android.app.Notification EXP "My notification" "Hello World!" <type>android.app.PendingIntent # MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager 1 <type>android.app.Notification # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ActivityWithExtra.MY_INT_EXTRA 42 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "MyActivity" "myTextView was touched!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 12 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end IfFalse
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this ", " <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnNames EXP <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getInt EXP <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$toString <type>String <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$toString <type>String <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin Block
android.view.View$getContext EXP <type>android.view.View # Block
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$reconfigure @0 <type>android.graphics.Bitmap <type>int <type>int EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig <type>android.graphics.Bitmap.Config <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap.Config$equals EXP <type>android.graphics.Bitmap.Config FIELD # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap.Config$hashCode EXP <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setDither @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setFilterBitmap @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible EXP <type>android.graphics.drawable.Drawable <type>boolean <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$isStateful EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState EXP <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setLevel EXP <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding EXP <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate @0 <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SectionIndexer$getPositionForSection EXP <type>android.widget.SectionIndexer <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SectionIndexer$getSectionForPosition EXP <type>android.widget.SectionIndexer <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SectionIndexer$getSections EXP <type>android.widget.SectionIndexer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getAll <type>java.util.Map <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_circle_indicator_page_color # begin ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_circle_indicator_fill_color # ConstructorDeclaration
android.content.res.Resources$getInteger <type>int <type>android.content.res.Resources R.integer.default_circle_indicator_orientation # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_circle_indicator_stroke_color # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_circle_indicator_stroke_width # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_circle_indicator_radius # ConstructorDeclaration
android.content.res.Resources$getBoolean <type>boolean <type>android.content.res.Resources R.bool.default_circle_indicator_centered # ConstructorDeclaration
android.content.res.Resources$getBoolean <type>boolean <type>android.content.res.Resources R.bool.default_circle_indicator_snap # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_centered <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_android_orientation <type>int # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_pageColor <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_strokeColor <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.content.res.TypedArray$getDimension EXP <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_strokeWidth <type>float # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_fillColor <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_radius <type>float # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_snap <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.CirclePageIndicator_android_background # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # ConstructorDeclaration
android.support.v4.view.ViewConfigurationCompat$getScaledPagingTouchSlop <type>int this <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # begin SwitchCase
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$fakeDragBy @0 <type>android.support.v4.view.ViewPager <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$endFakeDrag @0 <type>android.support.v4.view.ViewPager # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end SwitchCase
android.support.v4.view.MotionEventCompat$findPointerIndex EXP this <type>android.view.MotionEvent <type>int # begin SwitchCase
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent EXP # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getWidth <type>int <type>android.widget.ListView # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getChildCount <type>int <type>android.widget.ListView # begin Block
android.widget.ListView$getHeaderViewsCount <type>int <type>android.widget.ListView # Block
android.widget.ListView$getFooterViewsCount <type>int <type>android.widget.ListView # Block
android.widget.ListView$getLocationOnScreen @0 <type>android.widget.ListView <type>int # Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # begin Block
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # Block
android.widget.ListView$getPositionForView <type>int <type>android.widget.ListView <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.widget.ListView$requestDisallowInterceptTouchEvent @0 <type>android.widget.ListView true # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.widget.ListView$onTouchEvent @0 <type>android.widget.ListView <type>android.view.MotionEvent # Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationX @0 <type>android.view.View EXP # begin Block
android.view.View$setAlpha @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.animation.ValueAnimator$ofInt EXP this <type>int 1 # end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>long <type>long android.view.MotionEvent.ACTION_CANCEL 0 0 0 # Block
android.widget.ListView$dispatchTouchEvent @0 <type>android.widget.ListView <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent 0 # begin SwitchCase
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 EXP # SwitchCase
android.view.VelocityTracker$getYVelocity <type>float <type>android.view.VelocityTracker <type>int # SwitchCase
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker <type>int # end SwitchCase
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.graphics.PointF$set @0 <type>android.graphics.PointF EXP EXP # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float FIELD FIELD # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float 1f FIELD FIELD # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix 1f <type>float FIELD FIELD # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 0 # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 1 # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 0 # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 1 # MethodDeclaration
android.graphics.PointF$set @0 <type>android.graphics.PointF EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 0 # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 1 # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 0 # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 0 # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 0 # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "BarlineChartTouch" EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin MethodDeclaration
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>long <type>long android.view.MotionEvent.ACTION_MOVE FIELD FIELD 0 # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.ActivityManager <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin MethodDeclaration
android.app.ActivityManager$getRunningServices <type>java.util.List <type>android.app.ActivityManager Integer.MAX_VALUE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.session_detail_frag <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable SessionDetailConstants.TIME_HINT_UPDATE_INTERVAL # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnGlobalLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.google.samples.apps.iosched.R.menu.session_detail <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin MethodDeclaration
android.support.v4.view.ViewCompat$setTransitionName @0 this <type>android.widget.ImageView SessionDetailConstants.TRANSITION_NAME_PHOTO # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnGlobalLayoutListener # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.MarginLayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.MarginLayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$isChecked EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>float # begin MethodDeclaration
android.view.View$setTranslationY @0 <type>android.view.View EXP # end MethodDeclaration
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # MethodDeclaration
android.support.v4.view.ViewCompat$setElevation @0 this <type>com.google.samples.apps.iosched.ui.widget.CheckableFloatingActionButton EXP # MethodDeclaration
android.view.View$setTranslationY @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # end MethodDeclaration
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable SessionDetailConstants.TIME_HINT_UPDATE_INTERVAL # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable SessionDetailConstants.TIME_HINT_UPDATE_INTERVAL # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeViewAt @0 <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setContentDescription @0 <type>android.widget.ImageView EXP # begin end Block
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.BELOW com.google.samples.apps.iosched.R.id.speaker_abstract # begin Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM # end Block
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.widget.RelativeLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.LEFT_OF com.google.samples.apps.iosched.R.id.twitter_icon_box # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_RIGHT # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.VISIBLE # begin Block
android.widget.LinearLayout$removeAllViews @0 <type>android.widget.LinearLayout # Block
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard_cab <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end Block
<END>
<S2>
<S1>
android.view.ActionMode$getMenuInflater <type>android.view.MenuInflater <type>android.view.ActionMode # begin MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.carddemo_multichoice <type>android.view.Menu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseBooleanArray$keyAt EXP <type>android.util.SparseBooleanArray <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this mContext "Click Listener" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_news # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_code # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_commits # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_issues # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle NativeProtocol.BRIDGE_ARG_ACTION_ID_STRING <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin TryBlock
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this this # begin end MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>FeedAdapter # begin end MethodDeclaration
android.support.v7.widget.GridLayoutManager$setSpanSizeLookup @0 <type>android.support.v7.widget.GridLayoutManager EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.GridLayoutManager # end MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setHasFixedSize @0 <type>android.support.v7.widget.RecyclerView true # MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.RecyclerView.OnScrollListener # MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 4 EXP # MethodDeclaration
android.view.ViewGroup$setTranslationX @0 <type>android.view.ViewGroup <type>int # MethodDeclaration
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.support.v4.content.ContextCompat$getDrawable <type>android.graphics.drawable.AnimatedVectorDrawable this this io.plaidapp.R.drawable.avd_search_to_back # MethodDeclaration
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton <type>android.graphics.drawable.AnimatedVectorDrawable # MethodDeclaration
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # end MethodDeclaration
android.widget.ImageButton$postDelayed @0 <type>android.widget.ImageButton EXP 600L # begin MethodDeclaration
android.view.View$animate EXP <type>android.view.View # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.widget.SearchView$animate EXP <type>android.widget.SearchView # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.linear_out_slow_in # end MethodDeclaration
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup <type>android.transition.Transition # begin Block
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # Block
android.support.v7.widget.RecyclerView$setVisibility @0 <type>android.support.v7.widget.RecyclerView android.view.View.VISIBLE # Block
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # Block
android.widget.ImageButton$setAlpha @0 <type>android.widget.ImageButton 0.6f # Block
android.widget.ImageButton$setScaleX @0 <type>android.widget.ImageButton 0f # Block
android.widget.ImageButton$setScaleY @0 <type>android.widget.ImageButton 0f # Block
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # end Block
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup <type>android.transition.Transition # begin Block
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getDrawable EXP this SearchActivity.this io.plaidapp.R.drawable.ic_arrow_back_padded # begin MethodDeclaration
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SearchView$requestFocus @0 <type>android.widget.SearchView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal EXP this <type>android.view.View <type>int EXP 0 EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this SearchActivity.this io.plaidapp.R.color.scrim # MethodDeclaration
android.animation.ObjectAnimator$ofArgb EXP this <type>android.view.View io.plaidapp.util.ViewUtils.BACKGROUND_COLOR android.graphics.Color.TRANSPARENT EXP # MethodDeclaration
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet EXP EXP # MethodDeclaration
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 400L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # MethodDeclaration
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent android.app.SearchManager.QUERY # begin end Block
<END>
<S2>
<S1>
android.widget.SearchView$setQuery @0 <type>android.widget.SearchView <type>String false # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_slow_in # end MethodDeclaration
android.support.v4.content.ContextCompat$getDrawable <type>android.graphics.drawable.AnimatedVectorDrawable this this io.plaidapp.R.drawable.avd_back_to_search # begin MethodDeclaration
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton <type>android.graphics.drawable.AnimatedVectorDrawable # MethodDeclaration
android.widget.ImageButton$setBackground @0 <type>android.widget.ImageButton null # MethodDeclaration
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # MethodDeclaration
android.widget.SearchView$animate EXP <type>android.widget.SearchView # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_linear_in # MethodDeclaration
android.view.View$animate EXP <type>android.view.View # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_linear_in # end MethodDeclaration
android.view.View$animate EXP <type>android.view.View # begin MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_linear_in # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_linear_in # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # begin Block
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.ViewGroup <type>int 0 EXP 0f # Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator 500L # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # Block
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # end Block
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin Block
android.animation.Animator$start @0 <type>android.animation.Animator # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.INVISIBLE # begin MethodDeclaration
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.VISIBLE # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # MethodDeclaration
android.view.ViewGroup$getViewTreeObserver EXP <type>android.view.ViewGroup # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getViewTreeObserver EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.widget.ImageButton$getWidth EXP <type>android.widget.ImageButton # MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.ViewGroup EXP EXP EXP EXP # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator 250L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # MethodDeclaration
android.widget.ImageButton$getLeft EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$getRight EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$getTop EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$getBottom EXP <type>android.widget.ImageButton # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.View <type>int <type>int 0 EXP # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator 400L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this SearchActivity.this io.plaidapp.R.color.scrim # MethodDeclaration
android.animation.ObjectAnimator$ofArgb <type>android.animation.ObjectAnimator this <type>android.view.View io.plaidapp.util.ViewUtils.BACKGROUND_COLOR android.graphics.Color.TRANSPARENT EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 800L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # MethodDeclaration
android.widget.CheckBox$setAlpha @0 <type>android.widget.CheckBox 0.6f # MethodDeclaration
android.widget.CheckBox$getHeight EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$setTranslationY @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$animate EXP <type>android.widget.CheckBox # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # MethodDeclaration
android.widget.CheckBox$setAlpha @0 <type>android.widget.CheckBox 0.6f # MethodDeclaration
android.widget.CheckBox$getHeight EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$setTranslationY @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$animate EXP <type>android.widget.CheckBox # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.linear_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # begin Block
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # Block
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # Block
android.widget.ImageButton$getWidth EXP <type>android.widget.ImageButton # Block
android.view.ViewAnimationUtils$createCircularReveal EXP this <type>android.view.ViewGroup EXP EXP EXP EXP # Block
android.animation.ObjectAnimator$ofArgb EXP this <type>android.view.View io.plaidapp.util.ViewUtils.BACKGROUND_COLOR android.graphics.Color.TRANSPARENT # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet EXP EXP # Block
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 150L # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # Block
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # end Block
android.animation.AnimatorSet$addListener @0 <type>android.animation.AnimatorSet EXP # begin Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # MethodDeclaration
android.support.v7.widget.RecyclerView$getVisibility EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # begin MethodDeclaration
android.widget.SearchView$setSearchableInfo @0 <type>android.widget.SearchView EXP # MethodDeclaration
android.widget.SearchView$setQueryHint @0 <type>android.widget.SearchView EXP # MethodDeclaration
android.widget.SearchView$setInputType @0 <type>android.widget.SearchView android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS # MethodDeclaration
android.widget.SearchView$getImeOptions EXP <type>android.widget.SearchView # MethodDeclaration
android.widget.SearchView$setImeOptions @0 <type>android.widget.SearchView EXP # end MethodDeclaration
android.widget.SearchView$setOnQueryTextListener @0 <type>android.widget.SearchView EXP # begin end MethodDeclaration
android.widget.SearchView$setOnQueryTextFocusChangeListener @0 <type>android.widget.SearchView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup <type>android.transition.Transition # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setVisibility @0 <type>android.support.v7.widget.RecyclerView android.view.View.GONE # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # MethodDeclaration
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # MethodDeclaration
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.GONE # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SearchView$getQuery EXP <type>android.widget.SearchView # begin Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP EXP EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # end Block
<END>
<S2>
<S1>
android.widget.SearchView$setQuery @0 <type>android.widget.SearchView "" false # begin MethodDeclaration
android.widget.SearchView$requestFocus @0 <type>android.widget.SearchView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # begin MethodDeclaration
android.widget.SearchView$clearFocus @0 <type>android.widget.SearchView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.content.ContentResolver.SCHEME_CONTENT$equals EXP this EXP # MethodDeclaration
android.net.Uri$getHost EXP <type>android.net.Uri # MethodDeclaration
android.content.UriMatcher$match EXP <type>android.content.UriMatcher FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.provider.ContactsContract.Contacts.openContactPhotoInputStream EXP this <type>android.content.ContentResolver <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$openInputStream EXP <type>android.content.ContentResolver <type>android.net.Uri # begin end SwitchCase
<END>
<S2>
<S1>
android.provider.ContactsContract.Contacts.openContactPhotoInputStream EXP this <type>android.content.ContentResolver <type>android.net.Uri true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int <type>int <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin Block
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.container EXP FragmentActionBarControlListViewFragment.FRAGMENT_TAG # Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # Block
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getScopedObjectMap EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end While
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.os.Handler$post EXP <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this <type>java.io.File # begin MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$getParcelFileDescriptor EXP <type>android.content.res.AssetFileDescriptor # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat <type>android.animation.PropertyValuesHolder this "rotationX" 0 180 180 0 0 # begin MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat <type>android.animation.PropertyValuesHolder this "rotationY" 0 0 180 180 0 # MethodDeclaration
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.ObjectAnimator this EXP <type>android.animation.PropertyValuesHolder <type>android.animation.PropertyValuesHolder # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setRepeatCount @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 2500 # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX com.nostra13.universalimageloader.sample.fragment.ImageListFragment.INDEX # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX com.nostra13.universalimageloader.sample.fragment.ImageGridFragment.INDEX # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX com.nostra13.universalimageloader.sample.fragment.ImagePagerFragment.INDEX # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX com.nostra13.universalimageloader.sample.fragment.ImageGalleryFragment.INDEX # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Hello World!" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Doing some background work." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "HelloFacebook" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "HelloFacebook" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.alorma.github.sdk.bean.dto.response.Repo # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.comment_preview null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getCharSequence <type>CharSequence <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_materialcard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on Text SHARE " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on Text LEARN " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on ActionArea " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on Text SHARE " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on Text LEARN " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on ActionArea " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>com.nhaarman.listviewanimations.appearance.simple.SwingBottomInAnimationAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.chart # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "ids" EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>Sample # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.activity_sharedelement_fragment2 <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.square_blue # MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this EXP FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE "Enable redirects" # begin MethodDeclaration
android.view.Menu$add EXP <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE "Enable relative redirects" # MethodDeclaration
android.view.Menu$add EXP <type>android.view.Menu android.view.Menu.NONE <type>int android.view.Menu.NONE "Enable circular redirects" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem <type>boolean # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$isChecked EXP <type>android.view.MenuItem # begin Block
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem EXP # end Block
<END>
<S2>
<S1>
android.view.MenuItem$isChecked <type>boolean <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$isChecked <type>boolean <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$isChecked <type>boolean <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences EXP false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences EXP false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>ConferencePrefChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>ConferencePrefChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.view.LayoutInflater <type>android.app.Activity android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.issue738_spinner_dropdown_item null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View android.R.id.text1 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#4CAF50" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeBooleanValue <type>boolean <type>android.util.AttributeSet MATERIALDESIGNXML "check" false # begin MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL android.widget.RelativeLayout.TRUE # end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#B0B0B0" # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#446D6D6D" # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 70 <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin Block
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction com.google.samples.apps.iosched.R.id.welcome_content <type>WelcomeActivityContent # begin MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.AnimatedVectorDrawable # begin Block
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnScrollChangedListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnScrollChangedListener # begin end Block
<END>
<S2>
<S1>
android.view.View$getWindowToken EXP <type>android.view.View # begin Block
android.view.View$getViewTreeObserver EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnScrollChangedListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnScrollChangedListener # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnScrollChangedListener @0 <type>android.view.ViewTreeObserver <type>android.view.ViewTreeObserver.OnScrollChangedListener # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.navigationBarBackground # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.statusBarBackground # begin end Block
<END>
<S2>
<S1>
android.view.View$getTransitionName EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "roboguice.annotations.packages" "roboguice,testroboguice" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end SwitchCase
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#FDFDFD" # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # MethodDeclaration
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP 270 false <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.6f 0.5f 1 # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 750 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 180 360 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 750 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "CREATE TABLE orgs (id INTEGER PRIMARY KEY);" # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "CREATE TABLE users (id INTEGER PRIMARY KEY, name TEXT, avatarurl TEXT);" # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "CREATE TABLE repos (id INTEGER PRIMARY KEY, repoId INTEGER, orgId INTEGER, name TEXT, ownerId INTEGER, private INTEGER, fork INTEGER, description TEXT, forks INTEGER, watchers INTEGER, language TEXT, hasIssues INTEGER, mirrorUrl TEXT);" # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS orgs" # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS users" # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS repos" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>Profile # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>Profile # MethodDeclaration
android.support.v4.content.LocalBroadcastManager$sendBroadcast @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getClass EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getClass EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources <type>int # begin MethodDeclaration
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth <type>int <type>android.widget.ImageView # begin Block
android.widget.ImageView$getHeight <type>int <type>android.widget.ImageView # end Block
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$open EXP this <type>java.io.File android.os.ParcelFileDescriptor.MODE_READ_ONLY # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder "orgs JOIN users ON (orgs.id = users.id)" # begin MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query EXP <type>android.database.sqlite.SQLiteQueryBuilder <type>android.database.sqlite.SQLiteDatabase EXP null null null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getInt FIELD <type>android.database.Cursor 0 # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 1 # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor 2 # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete @0 <type>android.database.sqlite.SQLiteDatabase "orgs" null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" ACCESS_TOKEN # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "expires_in" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "code" "Something else" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "signed_request" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "expires_in" "60" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "signed_request" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "access_token" <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "expires_in" "60" # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "extra_extra" "Something unrelated" # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "signed_request" <type>String # MethodDeclaration
android.content.Intent$getExtras EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "access_token" <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "expires_in" 60L # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "extra_extra" "Something unrelated" # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "signed_request" <type>String # MethodDeclaration
android.content.Intent$getExtras EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>ScheduledFutureImpl EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>ScheduledFutureImpl EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$getLooper EXP <type>android.os.Handler # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$getLooper EXP <type>android.os.Handler # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context "code" android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 75 android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>ChartDataAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$findViewById FIELD <type>android.view.View R.id.chart # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 203 203 203 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mGridPaint # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout EXP # begin MethodDeclaration
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout EXP # begin Block
android.widget.LinearLayout$setMinimumHeight @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # Block
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.LinearLayout # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end TryBlock
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint mTextSize # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint mTextSize # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnectedOrConnecting EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnectedOrConnecting EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin MethodDeclaration
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.CONNECTIVITY_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.squareup.picasso.Dispatcher.NetworkBroadcastReceiver.EXTRA_AIRPLANE_STATE <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.CONNECTIVITY_SERVICE # begin MethodDeclaration
android.content.Context$checkCallingOrSelfPermission EXP <type>android.content.Context EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.ForegroundView_android_foregroundGravity <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray io.plaidapp.R.styleable.ForegroundView_android_foreground # end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray io.plaidapp.R.styleable.ForegroundView_android_foregroundInsidePadding true # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # Block
android.view.Gravity$apply @0 this <type>int EXP EXP <type>android.graphics.Rect <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setHotspot @0 <type>android.graphics.drawable.Drawable <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end TryBlock
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getMeasuredHeight EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ListViewActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin Block
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # Block
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item <type>android.view.ViewGroup false # end Block
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # end MethodDeclaration
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth FIELD <type>android.view.View # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_show_amination # begin MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_show_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this EXP EXP EXP # begin MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_hide_amination # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_hide_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.wifi.WifiManager <type>android.content.Context android.content.Context.WIFI_SERVICE # begin MethodDeclaration
android.net.wifi.WifiManager$addNetwork <type>int <type>android.net.wifi.WifiManager <type>android.net.wifi.WifiConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.net.wifi.WifiManager$enableNetwork @0 <type>android.net.wifi.WifiManager <type>int false # begin Block
android.net.wifi.WifiManager$saveConfiguration <type>boolean <type>android.net.wifi.WifiManager # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unknown error while calling WiFiManager.saveConfiguration()" # begin Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unknown error while calling WiFiManager.addNetwork()" # begin Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.wifi.WifiManager <type>android.content.Context android.content.Context.WIFI_SERVICE # begin MethodDeclaration
android.net.wifi.WifiManager$getConfiguredNetworks <type>java.util.List <type>android.net.wifi.WifiManager # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.wifi.WifiManager <type>android.content.Context android.content.Context.WIFI_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.wifi.WifiManager$getConfiguredNetworks <type>java.util.List <type>android.net.wifi.WifiManager # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.wifi.WifiManager <type>android.content.Context android.content.Context.WIFI_SERVICE # begin MethodDeclaration
android.net.wifi.WifiManager$isWifiEnabled EXP <type>android.net.wifi.WifiManager # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.wifi.WifiManager <type>android.content.Context android.content.Context.WIFI_SERVICE # begin MethodDeclaration
android.net.wifi.WifiManager$getConfiguredNetworks <type>java.util.List <type>android.net.wifi.WifiManager # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String null # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_wifi" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setLocation @0 <type>android.view.MotionEvent EXP EXP # Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setLocation @0 <type>android.view.MotionEvent EXP EXP # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setLocation @0 <type>android.view.MotionEvent EXP EXP # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin Block
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end Block
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # begin Block
android.view.View$dispatchTouchEvent <type>boolean <type>android.view.View <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Application EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase EXP <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getWindow <type>android.database.CursorWindow <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.CursorWindow$getNumRows EXP <type>android.database.CursorWindow # begin end Block
<END>
<S2>
<S1>
android.database.CursorWindow$getStartPosition EXP <type>android.database.CursorWindow # begin MethodDeclaration
android.database.CursorWindow$getNumRows EXP <type>android.database.CursorWindow # end MethodDeclaration
<END>
<S2>
<S1>
android.database.CursorWindow$getStartPosition EXP <type>android.database.CursorWindow # begin Block
android.database.CursorWindow$getNumRows EXP <type>android.database.CursorWindow # end Block
<END>
<S2>
<S1>
android.database.Cursor$getWindow EXP <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase EXP <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$execute @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>K # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 1 EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$execute @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement <type>int <type>K # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.DatabaseUtils$queryNumEntries EXP this <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 168 255 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getResourcePackageName EXP <type>android.content.res.Resources <type>Integer # begin TryBlock
android.content.res.Resources$getResourceTypeName EXP <type>android.content.res.Resources <type>Integer # TryBlock
android.content.res.Resources$getResourceEntryName EXP <type>android.content.res.Resources <type>Integer # TryBlock
android.net.Uri$parse EXP this EXP # end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception forking repository" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.name # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.description # MethodDeclaration
android.os.Parcel$writeSerializable @0 <type>android.os.Parcel this.privacy # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getResources EXP <type>android.support.v7.app.AppCompatActivity # begin end Block
android.widget.ImageButton$setOutlineProvider @0 <type>android.widget.ImageButton EXP # begin Block
android.widget.ImageButton$setClipToOutline @0 <type>android.widget.ImageButton true # end Block
<END>
<S2>
<S1>
android.graphics.Outline$setOval @0 <type>android.graphics.Outline 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v7.app.ActionBarDrawerToggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # begin MethodDeclaration
android.support.v7.app.AppCompatActivity$startActivity @0 <type>android.support.v7.app.AppCompatActivity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getWindow EXP <type>android.support.v7.app.AppCompatActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getWindow EXP <type>android.support.v7.app.AppCompatActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setElevation @0 <type>android.view.View <type>float # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 48 <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_flexiblespacewithimagegridview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.fragment_root # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SCROLL_Y 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.list_background # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "illegal%key" "good_value" # begin TryBlock
android.os.Bundle$putCharArray @0 <type>android.os.Bundle "legal_key" <type>char # end TryBlock
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>com.facebook.WaitForBroadcastReceiver EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>com.facebook.WaitForBroadcastReceiver # begin end Finally
<END>
<S2>
<S1>
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation ANIMATION_INTERPOLATOR # begin ConstructorDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # ConstructorDeclaration
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation android.view.animation.Animation.INFINITE # ConstructorDeclaration
android.view.animation.Animation$setRepeatMode @0 <type>android.view.animation.Animation android.view.animation.Animation.RESTART # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix <type>float <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$split <type>String this <type>String "," # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.text.TextUtils$join EXP this "," EXP # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor EXP EXP # MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor <type>String # begin MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," EXP # begin Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$encode <type>String this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.refresh <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.repo_code <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_path # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_folder_icon # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.github.pockethub.ui.HeaderFooterListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end MethodDeclaration
android.widget.ListView$setSelection @0 <type>android.widget.ListView 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.icon_tag # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.icon_fork # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>com.github.pockethub.core.code.FullTree.Entry <type>android.widget.AdapterView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$getPath EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$dropCaches @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewWithTag <type>android.view.View <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.TextView <type>android.view.LayoutInflater R.layout.picasso_sample_activity_item <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "OkHttp failed to obtain result" <type>java.io.IOException # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Exception creating issue" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "BACKGROUND" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "BACKGROUND" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "BACKGROUND" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "BACKGROUND" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Color$parseColor EXP this "#1E88E5" # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>java.util.List <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool <type>java.util.List # begin end Finally
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$copyBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 EXP EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_recyclerview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$setId @0 <type>android.webkit.WebView R.id.webview # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.FloatMath$floor <type>float this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.FloatMath$floor EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "message" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "width" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>int <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.GRAY # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin TryBlock
android.content.Context$getPackageManager EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin end Block
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor MarkerQuery.MARKER_ID # begin Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor MarkerQuery.MARKER_FLOOR # Block
android.database.Cursor$getFloat <type>float <type>android.database.Cursor MarkerQuery.MARKER_LATITUDE # Block
android.database.Cursor$getFloat <type>float <type>android.database.Cursor MarkerQuery.MARKER_LONGITUDE # Block
android.database.Cursor$getString EXP <type>android.database.Cursor MarkerQuery.MARKER_TYPE # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor MarkerQuery.MARKER_LABEL # end Block
android.database.Cursor$moveToNext @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$mutate EXP <type>android.graphics.drawable.BitmapDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setId @0 <type>android.widget.ListView android.R.id.list # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # begin Block
android.view.View$setLayerType @0 <type>android.view.View android.view.View.LAYER_TYPE_SOFTWARE EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # begin Block
android.graphics.drawable.ShapeDrawable$draw @0 <type>android.graphics.drawable.ShapeDrawable <type>Canvas # end Block
<END>
<S2>
<S1>
android.view.View$startAnimation @0 <type>android.view.View <type>Animation # begin end Block
<END>
<S2>
<S1>
android.view.View$startAnimation @0 <type>android.view.View <type>Animation # begin end Block
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$startAnimation @0 <type>android.view.View <type>Animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation EXP <type>android.view.animation.Interpolator <type>float # begin MethodDeclaration
android.view.animation.Interpolator$getInterpolation EXP <type>android.view.animation.Interpolator <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP 50 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.content.pm.ApplicationInfo$loadIcon <type>android.graphics.drawable.Drawable <type>android.content.pm.ApplicationInfo FIELD # begin end Block
<END>
<S2>
<S1>
android.content.pm.ApplicationInfo$loadIcon <type>android.graphics.drawable.Drawable <type>android.content.pm.ApplicationInfo FIELD # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin Block
android.content.pm.ApplicationInfo$loadLabel <type>CharSequence <type>android.content.pm.ApplicationInfo EXP # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getConfiguration EXP <type>android.content.res.Resources # begin MethodDeclaration
android.content.res.Configuration$updateFrom <type>int <type>android.content.res.Configuration EXP # MethodDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end Block
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.content.Intent.ACTION_PACKAGE_REMOVED # begin ConstructorDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.content.Intent.ACTION_PACKAGE_CHANGED # ConstructorDeclaration
android.content.IntentFilter$addDataScheme @0 <type>android.content.IntentFilter "package" # ConstructorDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.support.v4.content.IntentCompat.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE # ConstructorDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.support.v4.content.IntentCompat.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getInstalledApplications <type>java.util.List <type>android.content.pm.PackageManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.text # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_icon_text <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.SearchViewCompat$newSearchView <type>android.view.View this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SearchViewCompat$setOnQueryTextListener @0 this <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "LoaderCustom" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_todo_native_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ShareConstants.APPLINK_URL EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle ShareConstants.PREVIEW_IMAGE_URL EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$addURI @0 <type>android.content.UriMatcher <type>String EXP <type>int # begin Block
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int EXP # Block
android.content.UriMatcher$addURI @0 <type>android.content.UriMatcher <type>String EXP <type>int # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int EXP # end Block
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin MethodDeclaration
android.util.SparseArray$get <type>String <type>android.util.SparseArray <type>int # end MethodDeclaration
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.text.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin end Block
android.text.ClipboardManager$getText EXP <type>android.text.ClipboardManager # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.content.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin Block
android.content.ClipboardManager$getPrimaryClip <type>android.content.ClipData <type>android.content.ClipboardManager # end Block
android.content.ClipData$getItemAt EXP <type>android.content.ClipData 0 # begin end Block
<END>
<S2>
<S1>
android.content.Context$runOnUiThread @0 <type>android.content.Context EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.text.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin Block
android.text.ClipboardManager$setText @0 <type>android.text.ClipboardManager <type>String # end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.content.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin Block
android.content.ClipData$newPlainText <type>android.content.ClipData this <type>String <type>String # Block
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # end Block
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>android.os.Parcelable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable <type>android.os.Parcelable <type>android.os.Parcel null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$unregisterDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>ListSelectorHider # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>ResizePopupRunnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # begin end Block
android.view.View.MeasureSpec$makeMeasureSpec <type>int this <type>int android.view.View.MeasureSpec.AT_MOST # begin Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # Block
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.ViewGroup <type>android.widget.LinearLayout.LayoutParams # begin SwitchCase
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View # end SwitchCase
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View # begin SwitchCase
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.ViewGroup <type>android.widget.LinearLayout.LayoutParams # end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$getWindowVisibleDisplayFrame @0 <type>android.view.View <type>android.graphics.Rect # begin MethodDeclaration
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # end MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin Block
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getView <type>android.view.View <type>android.widget.ListAdapter <type>int null <type>DropDownListView # begin end Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setDrawingCacheBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.ListView.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.ViewGroup$getChildMeasureSpec <type>int this <type>int EXP FIELD # begin end MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.ListView.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this <type>int android.view.View.MeasureSpec.EXACTLY # begin end Block
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX <type>int <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY <type>int <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>ResizePopupRunnable <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>ResizePopupRunnable # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>ResizePopupRunnable # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Swipe action not enabled in this type of view" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Expand action not enabled in this type of view" # begin end Block
<END>
<S2>
<S1>
android.app.Activity$setResult @0 <type>android.app.Activity android.app.Activity.RESULT_OK # begin MethodDeclaration
android.app.Activity$finish @0 <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception deleting Gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text2 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text3 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_expand_text4 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 10 20 # MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 10 20 # MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 10 20 # MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 10 20 # MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 10 20 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ReceiverWithActions.EXTRA_ARG_NAME2 <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ReceiverWithActions.EXTRA_ARG_NAME1 <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
android.widget.GridView$setOnItemClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#2196F3" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Hi!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "NOTING SELECTED" "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager this.notificationId this.notification # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER <type>com.alorma.github.sdk.bean.dto.response.User # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.User <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.User <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin Block
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver EXP null null null null # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor <type>String # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri null <type>String <type>String null # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor <type>String # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end IfTrue
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is about to be restarted." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is about to become visible." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity has become visible (it is now \"resumed\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Another activity is taking focus (this activity is about to be \"paused\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is no longer visible (it is now \"stopped\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is about to be destroyed." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_comment_icon # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_comment_icon # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$clone <type>android.os.Bundle <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ErrorDialogManager.KEY_TITLE <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ErrorDialogManager.KEY_MESSAGE <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle ErrorDialogManager.KEY_FINISH_AFTER_DIALOG <type>boolean # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle ErrorDialogManager.KEY_EVENT_TYPE_ON_CLOSE FIELD # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ErrorDialogManager.KEY_ICON_ID FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndexOrThrow EXP <type>android.database.Cursor android.provider.MediaStore.MediaColumns.DATA # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.widget.TabHost$setup @0 <type>android.widget.TabHost # begin MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "simple" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "contacts" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "custom" # MethodDeclaration
android.widget.TabHost$newTabSpec EXP <type>android.widget.TabHost "throttle" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle "tab" # begin Block
android.widget.TabHost$setCurrentTabByTag @0 <type>android.widget.TabHost EXP # end Block
<END>
<S2>
<S1>
android.widget.TabHost$getCurrentTabTag EXP <type>android.widget.TabHost # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "tab" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setMinimumWidth @0 <type>android.view.View 0 # begin MethodDeclaration
android.view.View$setMinimumHeight @0 <type>android.view.View 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TabHost$setOnTabChangedListener @0 <type>android.widget.TabHost this # begin ConstructorDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager this # ConstructorDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TabHost.TabSpec$setContent @0 <type>android.widget.TabHost.TabSpec EXP # begin MethodDeclaration
android.widget.TabHost.TabSpec$getTag <type>String <type>android.widget.TabHost.TabSpec # MethodDeclaration
android.widget.TabHost$addTab @0 <type>android.widget.TabHost <type>android.widget.TabHost.TabSpec # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$instantiate EXP this <type>android.content.Context EXP FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TabHost$getCurrentTab <type>int <type>android.widget.TabHost # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TabHost$getTabWidget <type>android.widget.TabWidget <type>android.widget.TabHost # begin MethodDeclaration
android.widget.TabWidget$getDescendantFocusability <type>int <type>android.widget.TabWidget # MethodDeclaration
android.widget.TabWidget$setDescendantFocusability @0 <type>android.widget.TabWidget android.view.ViewGroup.FOCUS_BLOCK_DESCENDANTS # MethodDeclaration
android.widget.TabHost$setCurrentTab @0 <type>android.widget.TabHost <type>int # MethodDeclaration
android.widget.TabWidget$setDescendantFocusability @0 <type>android.widget.TabWidget <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.github.pockethub.R.drawable.list_item_background # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end Block
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.github.pockethub.R.drawable.diff_marker_background # begin SwitchCase
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.github.pockethub.R.drawable.diff_add_background # begin SwitchCase
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.github.pockethub.R.drawable.diff_remove_background # begin SwitchCase
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.github.pockethub.R.drawable.list_item_background # begin SwitchCase
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.futurice.project.R.layout.fragment_main <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.AwesomeTextView_bootstrapBrand EXP # begin TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.AwesomeTextView_fontAwesomeIcon EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.AwesomeTextView_typicon EXP # end TryBlock
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray R.styleable.AwesomeTextView_bootstrapText # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapTextView.KEY <type>BootstrapText # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapTextView.KEY # begin Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY # end Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 50 # begin MethodDeclaration
android.view.animation.Animation$setRepeatMode @0 <type>android.view.animation.Animation android.view.animation.Animation.REVERSE # MethodDeclaration
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation 0 # end MethodDeclaration
android.view.animation.Animation$setStartOffset @0 <type>android.view.animation.Animation EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation android.view.animation.Animation.INFINITE # begin end Block
<END>
<S2>
<S1>
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation android.view.animation.Animation.INFINITE # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # MethodDeclaration
android.view.animation.Animation$setStartOffset @0 <type>android.view.animation.Animation 0 # MethodDeclaration
android.view.animation.Animation$setRepeatMode @0 <type>android.view.animation.Animation android.view.animation.Animation.RESTART # MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray com.asha.library.R.styleable.ChromeLikeSwipeLayout_circleColor Config.DEFAULT # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset EXP <type>android.content.res.TypedArray com.asha.library.R.styleable.ChromeLikeSwipeLayout_gap Config.DEFAULT # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset EXP <type>android.content.res.TypedArray com.asha.library.R.styleable.ChromeLikeSwipeLayout_radius Config.DEFAULT # begin end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getAction <type>int <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 300 # begin MethodDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation EXP # MethodDeclaration
android.view.View$clearAnimation @0 <type>android.view.View # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getClass EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredHeight <type>int <type>android.view.View # MethodDeclaration
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View EXP EXP # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollVertically EXP this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "DynamicHeightPicassoCardThumbnailView" EXP <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 48 <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_thumbnail_layout_resourceID <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getByteCount EXP <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>AsyncDrawable # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>AsyncDrawableUrl # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>AsyncDrawableCustomSource # begin end Block
<END>
<S2>
<S1>
android.util.LruCache$put @0 <type>android.util.LruCache <type>String <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.util.LruCache$get EXP <type>android.util.LruCache <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource @0 this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # begin MethodDeclaration
android.graphics.BitmapFactory$decodeResource EXP this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this EXP # begin TryBlock
android.graphics.BitmapFactory$decodeStream EXP this EXP # end TryBlock
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent it.gmariotti.cardslib.library.Constants.IntentManager.INTENT_ACTION_IMAGE_DOWNLOADED # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent it.gmariotti.cardslib.library.Constants.IntentManager.INTENT_ACTION_IMAGE_DOWNLOADED_EXTRA_RESULT <type>boolean # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent it.gmariotti.cardslib.library.Constants.IntentManager.INTENT_ACTION_IMAGE_DOWNLOADED_EXTRA_ERROR_LOADING true # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent it.gmariotti.cardslib.library.Constants.IntentManager.INTENT_ACTION_IMAGE_DOWNLOADED_EXTRA_ERROR_LOADING false # begin end IfFalse
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent it.gmariotti.cardslib.library.Constants.IntentManager.INTENT_ACTION_IMAGE_DOWNLOADED_EXTRA_CARD_ID EXP # begin end IfTrue
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of SessionDetailModel" EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_title # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_map_room # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_share # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_speakers_block # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_tags_container # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.give_feedback_card # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int EXP # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int EXP # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int <type>int # begin Block
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int <type>int # Block
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # end MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>float EXP # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>float <type>int # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>float <type>int # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.GradientDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.GradientDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.GradientDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>float # begin Block
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>float # Block
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>float # end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setShape @0 <type>android.graphics.drawable.GradientDrawable android.graphics.drawable.GradientDrawable.OVAL # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setShape @0 <type>android.graphics.drawable.GradientDrawable android.graphics.drawable.GradientDrawable.RECTANGLE # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # MethodDeclaration
android.graphics.drawable.GradientDrawable$setStroke @0 <type>android.graphics.drawable.GradientDrawable <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadii @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.LayerDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>int # begin Block
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>int # Block
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadii @0 <type>android.graphics.drawable.GradientDrawable <type>float # begin Block
android.graphics.drawable.GradientDrawable$setCornerRadii @0 <type>android.graphics.drawable.GradientDrawable <type>float # Block
android.graphics.drawable.GradientDrawable$setCornerRadii @0 <type>android.graphics.drawable.GradientDrawable <type>float # end Block
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getInstrumentation <type>android.app.Instrumentation this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Instrumentation$getContext EXP <type>android.app.Instrumentation # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 5 8 # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 5 8 # MethodDeclaration
android.os.Environment$getExternalStorageDirectory EXP this # MethodDeclaration
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.JPEG 90 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 20 20 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 5 8 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap 1 1 # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin MethodDeclaration
android.util.SparseArray$size EXP <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItem EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$indexOfKey EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType EXP <type>android.widget.ListAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$hasStableIds EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.TextView <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView EXP <type>android.widget.ListAdapter EXP <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SimpleThreadingViewPostActivity.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.painter # begin end MethodDeclaration
android.widget.ImageView$post @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "id" # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Service$getSystemService <type>android.app.ActivityManager <type>android.app.Service android.content.Context.ACTIVITY_SERVICE # begin MethodDeclaration
android.app.ActivityManager$getRunningServices <type>java.util.List <type>android.app.ActivityManager Integer.MAX_VALUE # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "BindingUtils" "We've got data in data." # begin Block
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 FIELD # Block
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this "BindingUtils" "There was a problem downloading the data." # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout R.drawable.drawer_shadow android.support.v4.view.GravityCompat.START # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>CustomActionBarDrawerToggle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.main <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "carddemo_dialog" # end Block
android.app.DialogFragment$show @0 <type>android.app.DialogFragment <type>android.app.FragmentTransaction "carddemo_dialog" # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction R.id.fragment_main <type>it.gmariotti.cardslib.demo.fragment.BaseFragment # Block
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>it.gmariotti.cardslib.demo.utils.SimpleSectionedListAdapter # begin Block
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onActivityResult handled by IABUtil." # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>HeapDump # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>AnalysisResult # MethodDeclaration
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getSerializableExtra <type>HeapDump <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getSerializableExtra <type>AnalysisResult <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 150 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 240 120 124 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this this R.anim.view_animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Contributor <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Message$obtain <type>android.os.Message this null <type>int # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "Log This Message" # MethodDeclaration
android.os.Message$setData @0 <type>android.os.Message <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Messenger$send @0 <type>android.os.Messenger <type>android.os.Message # begin end TryBlock
<END>
<S2>
<S1>
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView <type>android.webkit.WebViewClient # begin ConstructorDeclaration
android.webkit.WebView$getSettings <type>android.webkit.WebSettings <type>android.webkit.WebView # ConstructorDeclaration
android.webkit.WebSettings$setJavaScriptEnabled @0 <type>android.webkit.WebSettings true # ConstructorDeclaration
android.webkit.WebView$addJavascriptInterface @0 <type>android.webkit.WebView this "SourceEditor" # end ConstructorDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$getContext EXP <type>android.webkit.WebView # begin Block
android.net.Uri$parse EXP this <type>String # end Block
<END>
<S2>
<S1>
android.webkit.WebSettings$setBuiltInZoomControls @0 <type>android.webkit.WebSettings true # begin Block
android.webkit.WebSettings$setUseWideViewPort @0 <type>android.webkit.WebSettings true # end Block
<END>
<S2>
<S1>
android.webkit.WebView$loadDataWithBaseURL @0 <type>android.webkit.WebView null <type>String "text/html" org.eclipse.egit.github.core.client.IGitHubConstants.CHARSET_UTF8 null # begin end IfTrue
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # begin end IfFalse
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # begin MethodDeclaration
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.net.wifi.WifiManager.EXTRA_BSSID <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance EXP this org.robolectric.Robolectric.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setLines @0 <type>android.widget.EditText 8 # begin MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_gplay_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_staggeredgrid_twowayview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplication EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setHomeAsUpIndicator @0 <type>android.support.v7.app.ActionBar R.drawable.ic_menu # begin MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
android.support.design.widget.FloatingActionButton$setOnClickListener @0 <type>android.support.design.widget.FloatingActionButton EXP # begin MethodDeclaration
android.support.design.widget.TabLayout$setupWithViewPager @0 <type>android.support.design.widget.TabLayout <type>android.support.v4.view.ViewPager # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.Snackbar$make EXP this <type>android.view.View "Here's a Snackbar" android.support.design.widget.Snackbar.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>Adapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$setNavigationItemSelectedListener @0 <type>android.support.design.widget.NavigationView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem true # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawers @0 <type>android.support.v4.widget.DrawerLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString <type>String <type>android.app.Activity com.facebook.R.string.com_facebook_internet_permission_error_title # begin Block
android.app.Activity$getString <type>String <type>android.app.Activity com.facebook.R.string.com_facebook_internet_permission_error_message # end Block
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this FIELD EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>com.facebook.AccessToken <type>int # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>Request <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelableArray @0 <type>android.os.Parcel <type>LoginMethodHandler <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>Request <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myQueue <type>android.os.MessageQueue this # begin Block
android.os.MessageQueue$addIdleHandler @0 <type>android.os.MessageQueue EXP # end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>DecodeJob <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>EngineJob <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Back key pressed!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.WindowManager$getDefaultDisplay @0 <type>android.view.WindowManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this this 0 EXP 0 # begin MethodDeclaration
android.app.Notification$setLatestEventInfo @0 <type>android.app.Notification EXP "My notification" "Hello World!" <type>android.app.PendingIntent # MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager 1 <type>android.app.Notification # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ActivityWithExtra.MY_INT_EXTRA 42 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "MyActivity" "myTextView was touched!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_topcolored <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_halfcolored_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "It is just an example!" # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_blackcolored_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "It is just an example!" # begin end Block
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View <type>Boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View <type>Boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0f # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # MethodDeclaration
android.view.View$getAlpha EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get EXP this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_padding 0 # begin TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_paddingLeft <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_paddingTop <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_paddingRight <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_paddingBottom <type>int # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_clipToPadding true # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_scrollbars 0x00000200 # end TryBlock
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_fadingEdgeLength EXP # begin TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_requiresFadingEdge 0 # end TryBlock
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_cacheColorHint EXP # begin end TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_drawSelectorOnTop false # begin TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_fastScrollEnabled EXP # end TryBlock
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_scrollbarStyle 0 # begin end TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_scrollingCache EXP # begin end TryBlock
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_stackFromBottom false # begin TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_dividerHeight <type>int # TryBlock
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_transcriptMode android.widget.ListView.TRANSCRIPT_MODE_DISABLED # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_hasStickyHeaders true # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_isDrawingListUnderStickyHeader true # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_overScrollMode 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_choiceMode EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_fastScrollAlwaysVisible EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable EXP <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_listSelector # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.StickyListHeadersListView_android_divider # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>MarginLayoutParams <type>android.view.View # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$hasHeader EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>Integer # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>MarginLayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>MarginLayoutParams # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # begin Block
android.view.View$getHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$dispatchTouchEvent <type>boolean <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getDownTime EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getMetaState EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this EXP EXP EXP EXP <type>float EXP # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_CANCEL # Block
android.view.View$dispatchTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener <type>android.widget.AbsListView <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas 0 <type>int EXP EXP # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "StickyListHeaders" EXP # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar$addOnMenuVisibilityListener @0 <type>android.app.ActionBar this # begin Block
android.app.ActionBar$getDisplayOptions <type>int <type>android.app.ActionBar # Block
android.app.ActionBar$setHomeButtonEnabled @0 <type>android.app.ActionBar EXP # end Block
<END>
<S2>
<S1>
android.app.ActionBar$setHomeButtonEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getThemedContext EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setCustomView @0 <type>android.app.ActionBar <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setCustomView @0 <type>android.app.ActionBar <type>android.view.View <type>android.app.ActionBar.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setCustomView @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setIcon @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setIcon @0 <type>android.app.ActionBar <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setLogo @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setLogo @0 <type>android.app.ActionBar <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setListNavigationCallbacks @0 <type>android.app.ActionBar <type>android.widget.SpinnerAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setSelectedNavigationItem @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getSelectedNavigationIndex EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getNavigationItemCount EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setTitle @0 <type>android.app.ActionBar <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setTitle @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setSubtitle @0 <type>android.app.ActionBar <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setSubtitle @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayOptions @0 <type>android.app.ActionBar <type>int # begin MethodDeclaration
android.app.ActionBar$setHomeButtonEnabled @0 <type>android.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayOptions @0 <type>android.app.ActionBar <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setHomeButtonEnabled @0 <type>android.app.ActionBar EXP # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayUseLogoEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayShowHomeEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayShowTitleEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayShowCustomEnabled @0 <type>android.app.ActionBar <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setBackgroundDrawable @0 <type>android.app.ActionBar <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setStackedBackgroundDrawable @0 <type>android.app.ActionBar <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setSplitBackgroundDrawable @0 <type>android.app.ActionBar <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getCustomView EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getTitle EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getSubtitle EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getNavigationMode EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setNavigationMode @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getDisplayOptions EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setTag @0 <type>android.app.ActionBar.Tab this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition EXP <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getIcon EXP <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getText EXP <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setIcon @0 <type>android.app.ActionBar.Tab <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setIcon @0 <type>android.app.ActionBar.Tab <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setText @0 <type>android.app.ActionBar.Tab <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setText @0 <type>android.app.ActionBar.Tab <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setCustomView @0 <type>android.app.ActionBar.Tab <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setCustomView @0 <type>android.app.ActionBar.Tab <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getCustomView EXP <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setTabListener @0 <type>android.app.ActionBar.Tab EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$select @0 <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setContentDescription @0 <type>android.app.ActionBar.Tab <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setContentDescription @0 <type>android.app.ActionBar.Tab <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getContentDescription EXP <type>android.app.ActionBar.Tab # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar$newTab EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$addTab @0 <type>android.app.ActionBar EXP <type>int <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$removeTab @0 <type>android.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$removeTabAt @0 <type>android.app.ActionBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$removeAllTabs @0 <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$selectTab @0 <type>android.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getSelectedTab <type>android.app.ActionBar.Tab <type>android.app.ActionBar # begin MethodDeclaration
android.app.ActionBar.Tab$getTag EXP <type>android.app.ActionBar.Tab # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getTabAt <type>android.app.ActionBar.Tab <type>android.app.ActionBar <type>int # begin MethodDeclaration
android.app.ActionBar.Tab$getTag EXP <type>android.app.ActionBar.Tab # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getTabCount EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getHeight EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$show @0 <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$hide @0 <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$isShowing EXP <type>android.app.ActionBar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_hour_header_default # begin ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_hour_header_finished # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_session_title_default # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_session_title_finished # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_icon_default # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_icon_finished # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_conflict # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources android.R.color.white # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.my_schedule_past_background # ConstructorDeclaration
android.content.res.Resources$getDimensionPixelOffset <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.dimen.element_spacing_normal # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray 0 0 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View com.google.samples.apps.iosched.R.id.myschedule_uri_tagkey # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin Block
android.content.Context$startActivity @0 <type>android.content.Context EXP # end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View com.google.samples.apps.iosched.R.id.myschedule_uri_tagkey <type>android.net.Uri # begin MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # MethodDeclaration
android.view.View$setBackgroundResource @0 <type>android.view.View <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View null # begin MethodDeclaration
android.view.View$setBackgroundResource @0 <type>android.view.View 0 # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.start_time # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.icon # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.slot_title # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.slot_description # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.browse_sessions # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.give_feedback_button # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.separator # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.touch_area # Block
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.live_now_badge # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.content.Context$getResources EXP <type>android.content.Context # end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View 0 <type>int 0 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View 0 0 0 <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View 0 0 0 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_mayknow_main_inner_title # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_mayknow_main_inner_subtitle # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_mayknow_main_inner_button # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setClickable @0 <type>android.widget.TextView true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup.LayoutParams$setMargins @0 <type>android.view.ViewGroup.LayoutParams 25 0 0 5 # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_mayknow_main_inner_subtitle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP <type>String 300 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP 300 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$equals EXP <type>android.net.Uri FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$hashCode EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>Action # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>Action # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>Object # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>Object # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>BitmapHunter # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>BitmapHunter # begin MethodDeclaration
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler EXP <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>BitmapHunter # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>android.net.NetworkInfo # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int EXP 0 # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>java.util.List # begin Block
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end Block
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo <type>android.net.NetworkInfo <type>android.net.ConnectivityManager # begin end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>java.util.List # begin MethodDeclaration
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessageDelayed @0 <type>android.os.Handler <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.content.Intent.ACTION_AIRPLANE_MODE_CHANGED # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.net.ConnectivityManager.CONNECTIVITY_ACTION # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getBooleanExtra EXP <type>android.content.Intent <type>String false # begin end Block
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel 0 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$readInt <type>int <type>android.os.Parcel # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readString <type>String <type>android.os.Parcel # begin Block
android.os.Parcel$readString <type>String <type>android.os.Parcel # end Block
<END>
<S2>
<S1>
android.media.AudioTrack$getMinBufferSize <type>int this samplingRate EXP android.media.AudioFormat.ENCODING_PCM_16BIT # begin ConstructorDeclaration
android.media.AudioTrack$play @0 <type>android.media.AudioTrack # end ConstructorDeclaration
<END>
<S2>
<S1>
android.media.AudioTrack$stop @0 <type>android.media.AudioTrack # begin MethodDeclaration
android.media.AudioTrack$release @0 <type>android.media.AudioTrack # end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioTrack$write <type>int <type>android.media.AudioTrack <type>short <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioTrack$write <type>int <type>android.media.AudioTrack <type>short EXP EXP # begin end While
<END>
<S2>
<S1>
android.media.AudioTrack$write <type>int <type>android.media.AudioTrack <type>short 0 <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioTrack$write <type>int <type>android.media.AudioTrack <type>short <type>int EXP # begin end While
<END>
<S2>
<S1>
android.media.AudioTrack$setStereoVolume @0 <type>android.media.AudioTrack <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.HORIZONTAL # begin MethodDeclaration
android.widget.FrameLayout$setId @0 <type>android.widget.FrameLayout 1 # MethodDeclaration
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.FrameLayout # MethodDeclaration
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # MethodDeclaration
android.widget.FrameLayout$setId @0 <type>android.widget.FrameLayout 2 # MethodDeclaration
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.FrameLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "index" 0 # begin MethodDeclaration
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "top" 0 # MethodDeclaration
android.widget.FrameLayout$findViewById EXP <type>android.widget.FrameLayout android.R.id.list # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "test" <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin MethodDeclaration
android.util.SparseArray$size EXP <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItem EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$indexOfKey EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType EXP <type>android.widget.ListAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$hasStableIds EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.TextView <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView EXP <type>android.widget.ListAdapter EXP <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getResourceTypeName <type>String <type>android.content.res.Resources <type>int # begin MethodDeclaration
android.content.res.Resources$getResourceEntryName <type>String <type>android.content.res.Resources <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getResourcePackageName <type>String <type>android.content.res.Resources <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_about_extras" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.demo_extras_dialog_about null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.app_name_and_version_extras # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.about_body_extras # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStyle <type>android.graphics.Paint.Style <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$getColor <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint this.color # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int <type>int EXP <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint <type>android.graphics.Paint.Style # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable '\n' # begin end MethodDeclaration
android.text.Editable$append EXP <type>android.text.Editable ' ' # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable ' ' # begin end For
<END>
<S2>
<S1>
android.text.Editable$append EXP <type>android.text.Editable EXP # begin end Block
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable '\u2022' # begin end IfFalse
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable '\n' # begin end IfTrue
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable '\n' # begin end IfTrue
<END>
<S2>
<S1>
android.text.Editable$append @0 <type>android.text.Editable '\n' # begin end Block
<END>
<S2>
<S1>
android.text.Editable$length EXP <type>android.text.Editable # begin end Block
android.text.Editable$length EXP <type>android.text.Editable # begin Block
android.text.Editable$getSpans <type>android.text.style.QuoteSpan <type>android.text.Editable 0 EXP android.text.style.QuoteSpan # end Block
<END>
<S2>
<S1>
android.text.Editable$delete @0 <type>android.text.Editable 0 1 # begin end While
<END>
<S2>
<S1>
android.text.Editable$delete @0 <type>android.text.Editable <type>int EXP # begin Block
android.text.Editable$length EXP <type>android.text.Editable # end Block
<END>
<S2>
<S1>
android.text.Spanned$length EXP <type>android.text.Spanned # begin MethodDeclaration
android.text.Spanned$getSpans <type>Object <type>android.text.Spanned 0 EXP <type>Class # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Editable$length <type>int <type>android.text.Editable # begin MethodDeclaration
android.text.Editable$setSpan @0 <type>android.text.Editable <type>Object <type>int <type>int android.text.Spanned.SPAN_MARK_MARK # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Editable$length <type>int <type>android.text.Editable # begin MethodDeclaration
android.text.Editable$getSpanStart <type>int <type>android.text.Editable <type>Object # MethodDeclaration
android.text.Editable$removeSpan @0 <type>android.text.Editable <type>Object # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Editable$setSpan @0 <type>android.text.Editable <type>Object <type>int <type>int android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$openRawResourceFd EXP <type>android.content.res.Resources EXP # begin MethodDeclaration
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource EXP <type>android.content.res.Resources EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource EXP <type>android.content.res.Resources EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.ViewHolder$getAdapterPosition EXP <type>android.support.v7.widget.RecyclerView.ViewHolder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_example1 # begin end Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_example2 # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$inflate <type>android.widget.ProgressBar this <type>android.content.Context R.layout.progress_indicator null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$getProgressDrawable EXP <type>android.widget.ProgressBar # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ProgressBar$getIndeterminateDrawable EXP <type>android.widget.ProgressBar # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ProgressBar$setMax @0 <type>android.widget.ProgressBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$getProgressDrawable EXP <type>android.widget.ProgressBar # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ProgressBar$getIndeterminateDrawable EXP <type>android.widget.ProgressBar # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "DEBUG" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$getHeight EXP <type>android.support.v7.widget.Toolbar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$getHeight EXP <type>android.support.v7.widget.Toolbar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$inflate <type>android.widget.TextView this <type>android.content.Context com.github.paolorotolo.appintroexample.R.layout.custom_indicator null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_listItem_card_list_item_dividerHeight 0 # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getLeft EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP <type>int EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int EXP EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 4 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 5 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 6 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 7 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 8 EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 9 EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindBlob @0 <type>android.database.sqlite.SQLiteStatement 10 <type>byte # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View GONE # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # begin MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$goBack @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver.SCHEME_CONTENT$equals EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin MethodDeclaration
android.content.ContentResolver$openInputStream EXP <type>android.content.ContentResolver FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.filter_issues_title # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView <type>android.view.View.OnClickListener # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView <type>android.view.View.OnClickListener # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView <type>android.view.View.OnClickListener # begin end MethodDeclaration
android.widget.RadioButton$setOnCheckedChangeListener @0 <type>android.widget.RadioButton EXP # begin end MethodDeclaration
android.widget.RadioButton$setOnCheckedChangeListener @0 <type>android.widget.RadioButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.github.pockethub.core.issue.IssueFilter <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE_FILTER # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RadioButton$setChecked @0 <type>android.widget.RadioButton true # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RadioButton$setChecked @0 <type>android.widget.RadioButton true # begin end IfFalse
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE_FILTER <type>com.github.pockethub.core.issue.IssueFilter # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE_FILTER <type>com.github.pockethub.core.issue.IssueFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.none # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.none # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.assignee_anyone # end Block
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityAnimations2Binding this this R.layout.activity_animations2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$go @0 this <type>android.transition.Scene # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Scene$getSceneForLayout <type>android.transition.Scene this <type>android.view.ViewGroup R.layout.activity_animations_scene0 this # begin end MethodDeclaration
android.transition.Scene$setEnterAction @0 <type>android.transition.Scene EXP # begin end MethodDeclaration
android.transition.Scene$setExitAction @0 <type>android.transition.Scene EXP # begin MethodDeclaration
android.transition.Scene$getSceneForLayout <type>android.transition.Scene this <type>android.view.ViewGroup R.layout.activity_animations_scene1 this # MethodDeclaration
android.transition.Scene$getSceneForLayout <type>android.transition.Scene this <type>android.view.ViewGroup R.layout.activity_animations_scene2 this # MethodDeclaration
android.transition.Scene$getSceneForLayout <type>android.transition.Scene this <type>android.view.ViewGroup R.layout.activity_animations_scene3 this # MethodDeclaration
android.transition.Scene$getSceneForLayout <type>android.transition.Scene this <type>android.view.ViewGroup R.layout.activity_animations_scene4 this # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Scene$getSceneRoot EXP <type>android.transition.Scene # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.transition.Scene$getSceneRoot EXP <type>android.transition.Scene # MethodDeclaration
android.view.View$setScaleX @0 <type>android.view.View 0 # MethodDeclaration
android.view.View$setScaleY @0 <type>android.view.View 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$go @0 this <type>android.transition.Scene EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this AnimationsActivity2.this # begin MethodDeclaration
android.transition.TransitionManager$go @0 this <type>android.transition.Scene EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this AnimationsActivity2.this # begin MethodDeclaration
android.transition.TransitionManager$go @0 this <type>android.transition.Scene EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this AnimationsActivity2.this # begin MethodDeclaration
android.transition.TransitionManager$go @0 this <type>android.transition.Scene EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.os.Process$myTid <type>int this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$getLayoutId EXP <type>android.widget.RemoteViews # begin end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getDefaultAdapter <type>android.bluetooth.BluetoothAdapter this # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Bluetooth not supported" # begin end Block
<END>
<S2>
<S1>
android.bluetooth.BluetoothDevice$getAddress EXP <type>android.bluetooth.BluetoothDevice # begin end Block
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getBondedDevices <type>java.util.Set <type>android.bluetooth.BluetoothAdapter # begin end MethodDeclaration
android.content.Intent$putStringArrayListExtra @0 <type>android.content.Intent "devices" <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Connecting to Server..." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button <type>boolean # begin MethodDeclaration
android.widget.Button$setEnabled @0 <type>android.widget.Button <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button EXP # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.Button$setMovementMethod @0 <type>android.widget.Button EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelExpanded" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelCollapsed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelAnchored" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelHidden" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu R.id.action_toggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_show # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_hide # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_show # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_hide # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_anchor_disable # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_anchor_enable # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$get <type>String <type>android.os.Bundle "test" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_news # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_repositories # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_followers # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_following # begin end SwitchCase
<END>
<S2>
<S1>
android.text.format.Time$parse3339 @0 <type>android.text.format.Time <type>String # begin MethodDeclaration
android.text.format.Time$toMillis EXP <type>android.text.format.Time false # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.greeting_no_user # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onDownMotionEvent" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this <type>String android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$v @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "TextAllCaps value is ignored on pre-ICS." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_fragment_native_fab <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setElevation @0 <type>android.view.View <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>int 0 <type>int EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin ConstructorDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences <type>String 0l # begin Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin Block
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String <type>long # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String 0l # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.icon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_icon # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this AndroidLiveWallpaperService.TAG " > AndroidLiveWallpaper - onPause()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this AndroidLiveWallpaperService.TAG " > AndroidLiveWallpaper - onPause() done!" # begin end IfTrue
<END>
<S2>
<S1>
android.os.Debug$getNativeHeapAllocatedSize EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setSystemUiVisibility @0 <type>android.support.v4.widget.DrawerLayout EXP # begin end MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>FeedAdapter # begin end MethodDeclaration
android.support.v7.widget.GridLayoutManager$setSpanSizeLookup @0 <type>android.support.v7.widget.GridLayoutManager EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.GridLayoutManager # MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.RecyclerView.OnScrollListener # end MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setHasFixedSize @0 <type>android.support.v7.widget.RecyclerView true # MethodDeclaration
android.support.v7.widget.RecyclerView$addItemDecoration @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setItemAnimator @0 <type>android.support.v7.widget.RecyclerView EXP # end MethodDeclaration
android.support.v4.widget.DrawerLayout$setOnApplyWindowInsetsListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>FilterAdapter # MethodDeclaration
android.support.v7.widget.helper.ItemTouchHelper$attachToRecyclerView @0 <type>android.support.v7.widget.helper.ItemTouchHelper <type>android.support.v7.widget.RecyclerView # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this HomeActivity.this io.plaidapp.R.color.background_dark # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # MethodDeclaration
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this HomeActivity.this <type>android.view.View EXP # MethodDeclaration
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toolbar$getLayoutParams <type>android.view.ViewGroup.MarginLayoutParams <type>android.widget.Toolbar # begin MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetTop FIELD <type>android.view.WindowInsets # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetRight FIELD <type>android.view.WindowInsets # MethodDeclaration
android.widget.Toolbar$setLayoutParams @0 <type>android.widget.Toolbar <type>android.view.ViewGroup.MarginLayoutParams # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingLeft EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetTop EXP <type>android.view.WindowInsets # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingRight EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetRight EXP <type>android.view.WindowInsets # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingBottom EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.support.v7.widget.RecyclerView$setPadding @0 <type>android.support.v7.widget.RecyclerView EXP EXP EXP EXP # MethodDeclaration
android.widget.ImageButton$getLayoutParams <type>android.view.ViewGroup.MarginLayoutParams <type>android.widget.ImageButton # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetBottom FIELD <type>android.view.WindowInsets # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetRight FIELD <type>android.view.WindowInsets # MethodDeclaration
android.widget.ImageButton$setLayoutParams @0 <type>android.widget.ImageButton <type>android.view.ViewGroup.MarginLayoutParams # MethodDeclaration
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetTop FIELD <type>android.view.WindowInsets # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.FrameLayout.LayoutParams # MethodDeclaration
android.support.v7.widget.RecyclerView$getLayoutDirection EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingStart EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingTop EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetTop EXP <type>android.view.WindowInsets # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingEnd EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetRight EXP <type>android.view.WindowInsets # MethodDeclaration
android.support.v7.widget.RecyclerView$getPaddingBottom EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.view.WindowInsets$getSystemWindowInsetBottom EXP <type>android.view.WindowInsets # MethodDeclaration
android.support.v7.widget.RecyclerView$setPaddingRelative @0 <type>android.support.v7.widget.RecyclerView EXP EXP EXP EXP # MethodDeclaration
android.support.v4.widget.DrawerLayout$setOnApplyWindowInsetsListener @0 <type>android.support.v4.widget.DrawerLayout null # MethodDeclaration
android.view.WindowInsets$consumeSystemWindowInsets EXP <type>android.view.WindowInsets # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toolbar$setTranslationZ @0 <type>android.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toolbar$setTranslationZ @0 <type>android.widget.Toolbar 0f # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.accent # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # Block
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this this <type>android.widget.ImageButton EXP # Block
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.accent # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # Block
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this this <type>android.widget.ImageButton EXP # Block
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end Block
<END>
<S2>
<S1>
android.widget.Toolbar$setTranslationZ @0 <type>android.widget.Toolbar 0f # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$inflate <type>android.widget.TextView <type>android.view.ViewStub # begin Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP <type>int EXP android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.text_secondary_light # Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP <type>int EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP <type>int EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>android.text.SpannableStringBuilder # end Block
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP io.plaidapp.R.mipmap.ic_launcher # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.primary # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toolbar$getChildAt <type>android.view.View <type>android.widget.Toolbar 0 # begin end MethodDeclaration
android.widget.Toolbar$getChildAt <type>android.view.View <type>android.widget.Toolbar 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setAlpha @0 <type>android.widget.TextView 0f # begin Block
android.widget.TextView$setScaleX @0 <type>android.widget.TextView 0.8f # Block
android.widget.TextView$animate EXP <type>android.widget.TextView # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.widget.ActionMenuView$getChildAt EXP <type>android.widget.ActionMenuView 0 # begin Block
android.widget.ActionMenuView$getChildAt EXP <type>android.widget.ActionMenuView 1 # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0f # begin Block
android.view.View$setScaleX @0 <type>android.view.View 0f # Block
android.view.View$setScaleY @0 <type>android.view.View 0f # Block
android.view.View$animate EXP <type>android.view.View # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.overshoot # end Block
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu io.plaidapp.R.id.menu_dribbble_login # begin end MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu io.plaidapp.R.id.menu_designer_news_login # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toolbar$findViewById <type>android.view.View <type>android.widget.Toolbar io.plaidapp.R.id.menu_search # begin SwitchCase
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # SwitchCase
android.view.View$getWidth EXP <type>android.view.View # SwitchCase
android.app.ActivityOptions$makeSceneTransitionAnimation EXP this this # SwitchCase
android.view.View$setAlpha @0 <type>android.view.View 0f # end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP io.plaidapp.R.string.dribbble_logged_out android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP io.plaidapp.R.string.designer_news_logged_out android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.app.ActivityOptions$makeSceneTransitionAnimation EXP this this # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toolbar$findViewById <type>android.view.View <type>android.widget.Toolbar io.plaidapp.R.id.menu_search # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1f # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent SearchActivity.EXTRA_QUERY # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent PostNewDesignerNewsStory.EXTRA_STORY_TITLE # begin Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent PostNewDesignerNewsStory.EXTRA_STORY_URL # Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent PostNewDesignerNewsStory.EXTRA_STORY_COMMENT # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "HomeActivity" "Failed posting story" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setAlpha @0 <type>android.widget.ImageButton 0f # begin MethodDeclaration
android.widget.ImageButton$setScaleX @0 <type>android.widget.ImageButton 0f # MethodDeclaration
android.widget.ImageButton$setScaleY @0 <type>android.widget.ImageButton 0f # MethodDeclaration
android.widget.ImageButton$getHeight EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$setTranslationY @0 <type>android.widget.ImageButton EXP # MethodDeclaration
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.linear_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # MethodDeclaration
android.support.v4.widget.DrawerLayout$postDelayed @0 <type>android.support.v4.widget.DrawerLayout <type>Runnable 2000 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$removeCallbacks @0 <type>android.support.v4.widget.DrawerLayout <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$smoothScrollToPosition @0 <type>android.support.v7.widget.RecyclerView <type>int # begin end MethodDeclaration
android.support.v7.widget.RecyclerView$setOnTouchListener @0 <type>android.support.v7.widget.RecyclerView <type>android.view.View.OnTouchListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setOnTouchListener @0 <type>android.support.v7.widget.RecyclerView null # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout null # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$removeCallbacks @0 <type>android.support.v4.widget.DrawerLayout <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end Block
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo <type>android.net.NetworkInfo <type>android.net.ConnectivityManager # begin MethodDeclaration
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin Block
android.view.ViewStub$inflate <type>android.widget.ImageView <type>android.view.ViewStub # Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.AnimatedVectorDrawable # Block
android.graphics.drawable.AnimatedVectorDrawable$start @0 <type>android.graphics.drawable.AnimatedVectorDrawable # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 5000 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$invalidate @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>int # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$invalidate @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.AnimatorSet$play EXP <type>android.animation.AnimatorSet <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.AnimatorSet$play EXP <type>android.animation.AnimatorSet <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$invalidate @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$invalidate @0 <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler EXP EXP # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.RGB_565 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_exmple_card1 # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.net.TrafficStats$setThreadStatsTag @0 this EXP # begin end Block
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_BACKGROUND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.action 0 # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.previewPropertyName # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button this # begin MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button this # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button this # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$getParentActivityIntent <type>android.content.Intent this this # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create EXP this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$navigateUpTo @0 this this <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ALPHA_8 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # MethodDeclaration
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX EXP <type>android.view.View # begin Block
android.view.View$getScrollY EXP <type>android.view.View # Block
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$getMatrix EXP <type>android.view.View # begin Block
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix EXP # end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.small_daffodils # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent org.bookdash.android.presentation.bookinfo.BookInfoActivity.BOOK_PARCEL <type>org.bookdash.android.domain.pojo.BookDetailParcelable # MethodDeclaration
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule <type>android.content.Intent # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Searching for Spring" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Rebecca Franks" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Johan Smith" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.net.Uri$getQuery EXP <type>android.net.Uri # MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle ServerProtocol.FALLBACK_DIALOG_PARAM_BRIDGE_ARGS # MethodDeclaration
android.os.Bundle$remove @0 <type>android.os.Bundle ServerProtocol.FALLBACK_DIALOG_PARAM_BRIDGE_ARGS # end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle ServerProtocol.FALLBACK_DIALOG_PARAM_METHOD_RESULTS # begin MethodDeclaration
android.os.Bundle$remove @0 <type>android.os.Bundle ServerProtocol.FALLBACK_DIALOG_PARAM_METHOD_RESULTS # end MethodDeclaration
android.os.Bundle$remove @0 <type>android.os.Bundle ServerProtocol.FALLBACK_DIALOG_PARAM_VERSION # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle NativeProtocol.EXTRA_PROTOCOL_VERSION EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle NativeProtocol.EXTRA_PROTOCOL_BRIDGE_ARGS <type>android.os.Bundle # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle NativeProtocol.EXTRA_PROTOCOL_METHOD_RESULTS <type>android.os.Bundle # begin end TryBlock
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView EXP # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$setLatitude @0 <type>android.location.Location 47.6204 # begin MethodDeclaration
android.location.Location$setLongitude @0 <type>android.location.Location EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$setLatitude @0 <type>android.location.Location 47.6204 # begin MethodDeclaration
android.location.Location$setLongitude @0 <type>android.location.Location EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "object" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "object" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 100 <type>java.io.FileOutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "name" "Foo" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this <type>java.io.File # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this <type>java.io.File # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 128 128 android.graphics.Bitmap.Config.ALPHA_8 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 128 128 android.graphics.Bitmap.Config.ALPHA_8 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShortArray @0 <type>android.os.Bundle "foo" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Invalid length" # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Invalid byte order" # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Invalid offset" # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Unsupported orientation" # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin ConstructorDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # ConstructorDeclaration
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources com.arlib.floatingsearchview.R.dimen.abc_config_prefDialogWidth # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.ListPopupWindow$setOnDismissListener @0 <type>android.support.v7.widget.ListPopupWindow this # begin MethodDeclaration
android.support.v7.widget.ListPopupWindow$setOnItemClickListener @0 <type>android.support.v7.widget.ListPopupWindow this # MethodDeclaration
android.support.v7.widget.ListPopupWindow$setAdapter @0 <type>android.support.v7.widget.ListPopupWindow <type>MenuAdapter # MethodDeclaration
android.support.v7.widget.ListPopupWindow$setModal @0 <type>android.support.v7.widget.ListPopupWindow true # end MethodDeclaration
android.support.v7.widget.ListPopupWindow$setContentWidth @0 <type>android.support.v7.widget.ListPopupWindow <type>int # begin MethodDeclaration
android.support.v7.widget.ListPopupWindow$setInputMethodMode @0 <type>android.support.v7.widget.ListPopupWindow android.widget.PopupWindow.INPUT_METHOD_NOT_NEEDED # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
android.support.v7.widget.ListPopupWindow$setVerticalOffset @0 <type>android.support.v7.widget.ListPopupWindow <type>int # begin MethodDeclaration
android.support.v7.widget.ListPopupWindow$setHorizontalOffset @0 <type>android.support.v7.widget.ListPopupWindow <type>int # MethodDeclaration
android.support.v7.widget.ListPopupWindow$show @0 <type>android.support.v7.widget.ListPopupWindow # MethodDeclaration
android.support.v7.widget.ListPopupWindow$getListView EXP <type>android.support.v7.widget.ListPopupWindow # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # begin end Block
android.support.v7.widget.ListPopupWindow$setAnchorView @0 <type>android.support.v7.widget.ListPopupWindow <type>android.view.View # begin Block
android.support.v7.widget.ListPopupWindow$setDropDownGravity @0 <type>android.support.v7.widget.ListPopupWindow <type>int # end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v7.widget.ListPopupWindow$dismiss @0 <type>android.support.v7.widget.ListPopupWindow # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$close @0 <type>android.support.v7.view.menu.MenuBuilder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.widget.ListPopupWindow$isShowing EXP <type>android.support.v7.widget.ListPopupWindow # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # begin MethodDeclaration
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # MethodDeclaration
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType <type>int <type>android.widget.ListAdapter <type>int # begin end Block
android.widget.ListAdapter$getView <type>android.view.View <type>android.widget.ListAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v7.widget.ListPopupWindow$show @0 <type>android.support.v7.widget.ListPopupWindow # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.SubMenuBuilder$size <type>int <type>android.support.v7.view.menu.SubMenuBuilder # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.SubMenuBuilder$getItem <type>android.view.MenuItem <type>android.support.v7.view.menu.SubMenuBuilder <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$getNonActionItems EXP <type>android.support.v7.view.menu.MenuBuilder # begin MethodDeclaration
android.support.v7.view.menu.MenuBuilder$getVisibleItems EXP <type>android.support.v7.view.menu.MenuBuilder # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$getNonActionItems EXP <type>android.support.v7.view.menu.MenuBuilder # begin MethodDeclaration
android.support.v7.view.menu.MenuBuilder$getVisibleItems EXP <type>android.support.v7.view.menu.MenuBuilder # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuView.ItemView$initialize @0 <type>android.support.v7.view.menu.MenuView.ItemView EXP 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$setForceShowIcon @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$getExpandedItem <type>android.support.v7.view.menu.MenuItemImpl <type>android.support.v7.view.menu.MenuBuilder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.view.menu.MenuBuilder$getNonActionItems <type>java.util.ArrayList <type>android.support.v7.view.menu.MenuBuilder # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
android.widget.GridView$setOnItemClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.grid_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.GridView <type>android.view.View R.id.gridview # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setColorSchemeResources @0 <type>android.support.v4.widget.SwipeRefreshLayout com.google.samples.apps.iosched.R.color.flat_button_text # begin end Block
android.support.v4.widget.SwipeRefreshLayout$setOnRefreshListener @0 <type>android.support.v4.widget.SwipeRefreshLayout EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setProgressViewOffset @0 <type>android.support.v4.widget.SwipeRefreshLayout false EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$findViewById <type>com.google.samples.apps.iosched.ui.widget.ScrimInsetsScrollView <type>android.support.v4.widget.DrawerLayout com.google.samples.apps.iosched.R.id.navdrawer # end MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout com.google.samples.apps.iosched.R.drawable.drawer_shadow android.support.v4.view.GravityCompat.START # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.MarginLayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.MarginLayoutParams # MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.drawable.ic_ab_drawer # begin end Block
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$isDrawerOpen EXP <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeAllViews @0 <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0 # begin Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this this # begin MethodDeclaration
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager com.google.android.gms.auth.GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.profile_cover_image # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.profile_image # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.profile_name_text # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.profile_email_text # end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end MethodDeclaration
android.view.View$setEnabled @0 <type>android.view.View true # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin Block
android.widget.ImageView$setContentDescription @0 <type>android.widget.ImageView EXP # Block
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.GONE # Block
android.view.View$setEnabled @0 <type>android.view.View false # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeAllViews @0 <type>android.widget.LinearLayout # begin MethodDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.LinearLayout$getHeight EXP <type>android.widget.LinearLayout # end MethodDeclaration
android.animation.AnimatorSet$addListener @0 <type>android.animation.AnimatorSet EXP # begin end MethodDeclaration
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setAlpha @0 <type>android.widget.LinearLayout 0 # begin Block
android.widget.LinearLayout$setTranslationY @0 <type>android.widget.LinearLayout <type>int # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup EXP # begin MethodDeclaration
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.VISIBLE # begin Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.LinearLayout android.view.View.ALPHA 1 # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.LinearLayout android.view.View.TRANSLATION_Y 0 # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet EXP EXP # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.view.ViewGroup android.view.View.ALPHA 0 # Block
android.animation.AnimatorSet$playSequentially @0 <type>android.animation.AnimatorSet EXP <type>android.animation.AnimatorSet # Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setVisibility @0 <type>android.view.ViewGroup android.view.View.VISIBLE # begin Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.LinearLayout android.view.View.ALPHA 0 # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.LinearLayout android.view.View.TRANSLATION_Y <type>int # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet EXP EXP # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.view.ViewGroup android.view.View.ALPHA 1 # Block
android.animation.AnimatorSet$playSequentially @0 <type>android.animation.AnimatorSet <type>android.animation.AnimatorSet EXP # Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create <type>android.support.v4.app.TaskStackBuilder this this # begin Block
android.support.v4.app.TaskStackBuilder$addNextIntentWithParentStack @0 <type>android.support.v4.app.TaskStackBuilder <type>android.content.Intent # Block
android.support.v4.app.TaskStackBuilder$startActivities @0 <type>android.support.v4.app.TaskStackBuilder # end Block
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$getParentActivityIntent <type>android.content.Intent this <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$getParentActivityIntent <type>android.content.Intent this <type>android.app.Activity <type>Class # begin end TryBlock
<END>
<S2>
<S1>
android.app.Activity$onBackPressed @0 <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create <type>android.support.v4.app.TaskStackBuilder this <type>android.app.Activity # begin Block
android.support.v4.app.TaskStackBuilder$addNextIntentWithParentStack @0 <type>android.support.v4.app.TaskStackBuilder <type>android.content.Intent # Block
android.support.v4.app.TaskStackBuilder$startActivities @0 <type>android.support.v4.app.TaskStackBuilder # end Block
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$navigateUpTo @0 this <type>android.app.Activity <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this BaseActivity.this # begin MethodDeclaration
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager com.google.android.gms.auth.GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.provider.Settings.EXTRA_ACCOUNT_TYPES EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.SyncStatusObserver$onStatusChanged @0 <type>android.content.SyncStatusObserver 0 # begin MethodDeclaration
android.content.ContentResolver$addStatusChangeListener <type>Object this <type>int <type>android.content.SyncStatusObserver # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$removeStatusChangeListener @0 this <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "_uri" <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin Block
android.os.Bundle$putAll @0 <type>android.os.Bundle EXP # end Block
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "_uri" <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin Block
android.os.Bundle$putAll @0 <type>android.os.Bundle EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle "_uri" # begin end MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # begin MethodDeclaration
android.content.Intent$removeExtra @0 <type>android.content.Intent "_uri" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.provider.Settings.EXTRA_ACCOUNT_TYPES EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_NAME # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationContentDescription @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setOnScrollListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getChildAt <type>android.view.View <type>android.widget.AbsListView 0 # begin end MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.widget.AbsListView$getPaddingTop EXP <type>android.widget.AbsListView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.AsyncTask$execute @0 <type>android.os.AsyncTask null null null # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.AsyncTask$cancel @0 <type>android.os.AsyncTask true # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$isSyncActive <type>boolean this <type>android.accounts.Account com.google.samples.apps.iosched.provider.ScheduleContract.CONTENT_AUTHORITY # begin MethodDeclaration
android.content.ContentResolver$isSyncPending <type>boolean this <type>android.accounts.Account com.google.samples.apps.iosched.provider.ScheduleContract.CONTENT_AUTHORITY # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setRefreshing @0 <type>android.support.v4.widget.SwipeRefreshLayout <type>boolean # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setEnabled @0 <type>android.support.v4.widget.SwipeRefreshLayout <type>boolean # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setStatusBarBackgroundColor @0 <type>android.support.v4.widget.DrawerLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofInt EXP this EXP EXP EXP EXP # begin end MethodDeclaration
android.animation.ObjectAnimator$setEvaluator @0 <type>android.animation.ObjectAnimator <type>android.animation.TypeEvaluator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$cancel @0 <type>android.animation.ObjectAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>android.support.v4.widget.DrawerLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentByTag <type>com.google.samples.apps.iosched.framework.PresenterFragmentImpl <type>android.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction <type>com.google.samples.apps.iosched.framework.PresenterFragmentImpl <type>String # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentById <type>com.google.samples.apps.iosched.framework.UpdatableView <type>android.app.FragmentManager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this NoThreadingExample.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.painter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>android.support.v4.app.FragmentPagerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin MethodDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin MethodDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP <type>float EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this EXP # end ClassDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS notes" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$addURI @0 <type>android.content.UriMatcher <type>String MainTable.TABLE_NAME <type>int # begin ConstructorDeclaration
android.content.UriMatcher$addURI @0 <type>android.content.UriMatcher <type>String EXP <type>int # end ConstructorDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder MainTable.TABLE_NAME # begin end MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteQueryBuilder <type>android.database.sqlite.SQLiteDatabase <type>String <type>String <type>String null null <type>String # begin MethodDeclaration
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setProjectionMap @0 <type>android.database.sqlite.SQLiteQueryBuilder <type>java.util.HashMap # begin end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setProjectionMap @0 <type>android.database.sqlite.SQLiteQueryBuilder <type>java.util.HashMap # begin SwitchCase
android.database.sqlite.SQLiteQueryBuilder$appendWhere @0 <type>android.database.sqlite.SQLiteQueryBuilder EXP # SwitchCase
android.support.v4.database.DatabaseUtilsCompat$appendSelectionArgs <type>String this <type>String EXP # end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>long <type>android.database.sqlite.SQLiteDatabase MainTable.TABLE_NAME null <type>android.content.ContentValues # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues MainTable.COLUMN_NAME_DATA "" # begin end Block
<END>
<S2>
<S1>
android.content.ContentUris$withAppendedId <type>android.net.Uri this MainTable.CONTENT_ID_URI_BASE <type>long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase MainTable.TABLE_NAME <type>String <type>String # begin end SwitchCase
<END>
<S2>
<S1>
android.content.ContentUris$parseId EXP this <type>android.net.Uri # begin SwitchCase
android.support.v4.database.DatabaseUtilsCompat$concatenateWhere <type>String this EXP <type>String # SwitchCase
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase MainTable.TABLE_NAME <type>String <type>String # end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$update <type>int <type>android.database.sqlite.SQLiteDatabase MainTable.TABLE_NAME <type>android.content.ContentValues <type>String <type>String # begin end SwitchCase
<END>
<S2>
<S1>
android.content.ContentUris$parseId EXP this <type>android.net.Uri # begin SwitchCase
android.support.v4.database.DatabaseUtilsCompat$concatenateWhere <type>String this EXP <type>String # SwitchCase
android.database.sqlite.SQLiteDatabase$update <type>int <type>android.database.sqlite.SQLiteDatabase MainTable.TABLE_NAME <type>android.content.ContentValues <type>String <type>String # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.os.AsyncTask$execute @0 <type>android.os.AsyncTask null # begin end SwitchCase
<END>
<S2>
<S1>
android.os.AsyncTask$cancel @0 <type>android.os.AsyncTask false # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues MainTable.COLUMN_NAME_DATA EXP # begin Block
android.content.ContentResolver$insert @0 <type>android.content.ContentResolver MainTable.CONTENT_URI <type>android.content.ContentValues # end Block
<END>
<S2>
<S1>
android.os.AsyncTask$execute @0 <type>android.os.AsyncTask null # begin end SwitchCase
<END>
<S2>
<S1>
android.os.AsyncTask$cancel @0 <type>android.os.AsyncTask false # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$delete @0 <type>android.content.ContentResolver MainTable.CONTENT_URI null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.CursorLoader$setUpdateThrottle @0 <type>android.support.v4.content.CursorLoader 2000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$swapCursor @0 <type>android.support.v4.widget.SimpleCursorAdapter <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$swapCursor @0 <type>android.support.v4.widget.SimpleCursorAdapter null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText "" # begin Block
android.widget.EditText$setText @0 <type>android.widget.EditText "" # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin ConstructorDeclaration
android.widget.ImageView$setPadding @0 <type>android.widget.ImageView <type>int <type>int <type>int <type>int # end ConstructorDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this context <type>int # begin ConstructorDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation this # ConstructorDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this context <type>int # ConstructorDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation this # ConstructorDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation <type>android.view.animation.Interpolator # ConstructorDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # ConstructorDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # ConstructorDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation <type>android.view.animation.Interpolator # ConstructorDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # ConstructorDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.MATRIX # begin SwitchCase
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # SwitchCase
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # SwitchCase
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 180f EXP EXP # SwitchCase
android.widget.ImageView$setImageMatrix @0 <type>android.widget.ImageView <type>android.graphics.Matrix # end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$clearAnimation @0 <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$clearAnimation @0 <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$offsetDescendantRectToMyCoords @0 <type>android.view.ViewGroup <type>android.view.View <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>App <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin MethodDeclaration
android.os.StrictMode$setVmPolicy @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "level" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "level" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # begin MethodDeclaration
android.support.v4.app.DialogFragment$show @0 <type>android.support.v4.app.DialogFragment <type>android.support.v4.app.FragmentTransaction "dialog" # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$remove @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_dialog <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View R.id.show # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of SessionDetailModel" EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_title # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_map_room # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_share # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_detail_frag # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_speakers_block # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_tags_container # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.give_feedback_card # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getActivityInfo <type>android.content.pm.ActivityInfo <type>android.content.pm.PackageManager <type>android.content.ComponentName android.content.pm.PackageManager.GET_ACTIVITIES # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onCreateOptionsMenu @0 <type>android.support.v4.app.Fragment <type>android.view.Menu EXP # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onOptionsItemSelected EXP <type>android.support.v4.app.Fragment <type>android.view.MenuItem # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_show_amination # begin MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_show_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_main_hide_amination # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.content.Context com.gc.materialdesign.R.anim.dialog_root_hide_amin # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 1 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 0 255 # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisibilityCallback @0 <type>android.graphics.drawable.Drawable <type>com.facebook.drawee.drawable.VisibilityCallback # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_intro <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.description # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.image # MethodDeclaration
android.view.View$findViewById <type>android.widget.LinearLayout <type>android.view.View R.id.main # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.view.View$draw @0 <type>android.view.View <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.app.Activity # begin ConstructorDeclaration
android.content.res.TypedArray$length EXP <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray <type>int android.graphics.Color.DKGRAY # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater io.plaidapp.R.layout.infinite_loading <type>android.view.ViewGroup false # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getDrawable EXP this <type>android.app.Activity io.plaidapp.R.drawable.mid_grey_ripple # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater io.plaidapp.R.layout.designer_news_story_item <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent <type>android.app.Activity DesignerNewsStory # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DesignerNewsStory.EXTRA_STORY EXP # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity io.plaidapp.R.string.transition_story_title_background # MethodDeclaration
android.util.Pair$create EXP this FIELD EXP # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity io.plaidapp.R.string.transition_story_background # MethodDeclaration
android.util.Pair$create EXP this FIELD EXP # MethodDeclaration
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this <type>android.app.Activity EXP EXP # MethodDeclaration
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater io.plaidapp.R.layout.dribbble_shot_item <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this <type>android.app.Activity io.plaidapp.R.color.background_light # begin MethodDeclaration
android.content.Intent$setClass @0 <type>android.content.Intent <type>android.app.Activity DribbbleShot # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DribbbleShot.EXTRA_SHOT EXP # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity io.plaidapp.R.string.transition_shot # MethodDeclaration
android.util.Pair$create EXP this <type>android.view.View EXP # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity io.plaidapp.R.string.transition_shot_background # MethodDeclaration
android.util.Pair$create EXP this <type>android.view.View EXP # MethodDeclaration
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this <type>android.app.Activity EXP EXP # MethodDeclaration
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$getDrawable <type>com.bumptech.glide.load.resource.gif.GifDrawable <type>android.graphics.drawable.TransitionDrawable <type>int # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this <type>io.plaidapp.util.ObservableColorMatrix io.plaidapp.util.ObservableColorMatrix.SATURATION 0f 1f # begin end Block
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator EXP # begin Block
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 2000 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this <type>android.app.Activity android.R.interpolator.fast_out_slow_in # Block
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # end Block
android.animation.ObjectAnimator$addListener @0 <type>android.animation.ObjectAnimator EXP # begin Block
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater io.plaidapp.R.layout.product_hunt_item <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this <type>android.app.Activity io.plaidapp.R.color.product_hunt # begin MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this <type>android.app.Activity io.plaidapp.R.color.product_hunt # begin MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from <type>android.transition.TransitionInflater this <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # MethodDeclaration
android.transition.TransitionInflater$inflateTransition EXP <type>android.transition.TransitionInflater io.plaidapp.R.transition.home_content_item_exit # MethodDeclaration
android.transition.TransitionInflater$inflateTransition <type>android.transition.Transition <type>android.transition.TransitionInflater io.plaidapp.R.transition.home_content_item_reenter # end MethodDeclaration
android.transition.Transition$addListener @0 <type>android.transition.Transition EXP # begin MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentByTag <type>MapFragment <type>android.app.FragmentManager "map" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.drawable.ic_up # begin end Block
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_NAME EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TITLE EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_COLOR FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this FlexibleSpaceWithImageScrollViewActivity.this "FAB is clicked" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra EXP <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin Block
android.os.Bundle$getString EXP <type>android.os.Bundle android.app.SearchManager.QUERY # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$setCustomAnimations @0 <type>android.app.FragmentTransaction com.example.android.uamp.R.animator.slide_in_from_right com.example.android.uamp.R.animator.slide_out_to_left com.example.android.uamp.R.animator.slide_in_from_left com.example.android.uamp.R.animator.slide_out_to_right # begin Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction com.example.android.uamp.R.id.container <type>MediaBrowserFragment <type>String # end Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle android.app.SearchManager.QUERY # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$hashCode EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLines @0 <type>android.graphics.Canvas <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin Block
android.view.View$findViewById FIELD <type>android.view.View R.id.photo # Block
android.view.View$findViewById FIELD <type>android.view.View R.id.url # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_SP <type>int # MethodDeclaration
android.widget.TextView$setTypeface @0 <type>android.widget.TextView android.graphics.Typeface.DEFAULT_BOLD # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setAllCaps @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.PagerAdapter$getPageTitle EXP <type>android.support.v4.view.PagerAdapter <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # Block
android.util.SparseArray$get <type>String <type>android.util.SparseArray <type>int null # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Searching for Spring" # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Why is Nita Upside Down?" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Searching for Spring" # begin MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Zulu" # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "[ZULU]isipilingi" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Searching for Spring" # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.doesNotExist EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "[ZULU]kubheke phansi" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Why is Nita Upside Down?" # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.doesNotExist EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom EXP this android.support.v7.widget.Toolbar # begin MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$getTitle EXP <type>android.support.v7.widget.Toolbar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin end MethodDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # begin Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # begin end MethodDeclaration
android.util.SparseBooleanArray$clear @0 <type>android.util.SparseBooleanArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseBooleanArray$put @0 <type>android.util.SparseBooleanArray <type>int true # begin end Block
<END>
<S2>
<S1>
android.util.SparseBooleanArray$get <type>boolean <type>android.util.SparseBooleanArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseBooleanArray$put @0 <type>android.util.SparseBooleanArray <type>int true # begin end Block
<END>
<S2>
<S1>
android.util.SparseBooleanArray$put @0 <type>android.util.SparseBooleanArray <type>int false # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_view_pager null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.view_pager_list_view # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.view_pager_fragment_list_view_header null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.view_pager_fragment_list_view_header_title # MethodDeclaration
android.widget.TextView$setBackgroundColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>in.srain.cube.views.list.ListViewDataAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getFirstVisiblePosition EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # MethodDeclaration
android.widget.ListView$getFirstVisiblePosition EXP <type>android.widget.ListView # MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$setDensity @0 <type>android.graphics.Bitmap FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getLayoutDimension EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_height 0 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View <type>boolean # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getLayoutDimension EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_height 0 # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>TabView <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__action_bar_tab null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewParent$removeView @0 <type>android.view.ViewParent <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView GONE # begin Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView null # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView GONE # begin Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView null # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setContentDescription @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$bindTab @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click listener" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_title # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_memeber # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_subtitle # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_community # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_title # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_member # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_subtitle # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_community # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_suggested_card1 # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_header # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onOptionsItemSelected EXP <type>android.support.v4.app.Fragment <type>android.view.MenuItem # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onCreateOptionsMenu @0 <type>android.support.v4.app.Fragment <type>android.view.Menu EXP # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onPrepareOptionsMenu @0 <type>android.support.v4.app.Fragment <type>android.view.Menu # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_licenses" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_eula" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>MenuView <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin Block
android.view.View$getItemData EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setPressed @0 <type>android.view.View false # begin end Block
<END>
<S2>
<S1>
android.view.View$jumpDrawablesToCurrentState @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeViewAt @0 <type>android.view.ViewGroup <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MultiSwipeRefreshLayout_foreground # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.content.Context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$bindService @0 <type>android.content.Context <type>android.content.Intent this android.content.Context.BIND_AUTO_CREATE # begin end Block
<END>
<S2>
<S1>
android.content.Context$unbindService @0 <type>android.content.Context this # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$unbindService @0 <type>android.content.Context this # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "[getSupportMenuInflater]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "[invalidateOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "[supportInvalidateOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin IfTrue
android.util.Log$d @0 this <type>String EXP # end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.quote_fragment <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>SampleListDetailActivity # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>SampleListDetailAdapter # MethodDeclaration
android.widget.ListView$setOnScrollListener @0 <type>android.widget.ListView EXP # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.app.Activity # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.url # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.photo # MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas FIELD FIELD FIELD FIELD <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String SlotManager.NO_SLOT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 50 255 255 255 # begin end Block
<END>
<S2>
<S1>
android.net.LocalServerSocket$accept <type>android.net.LocalSocket <type>android.net.LocalServerSocket # begin end TryBlock
<END>
<S2>
<S1>
android.net.LocalServerSocket$close @0 <type>android.net.LocalServerSocket # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro3_2 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOffscreenPageLimit @0 <type>android.support.v4.view.ViewPager 3 # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>PageAdapter # MethodDeclaration
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder "This is a ViewPager." # MethodDeclaration
android.app.AlertDialog.Builder$setMessage @0 <type>android.app.AlertDialog.Builder "Swipe left and right for more awesome design examples!" # end MethodDeclaration
android.app.AlertDialog.Builder$setPositiveButton @0 <type>android.app.AlertDialog.Builder "OK" EXP # begin MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setComponent @0 <type>android.content.Intent <type>android.content.ComponentName # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.ComponentName$hashCode EXP <type>android.content.ComponentName # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$toString EXP <type>android.content.pm.ResolveInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$openFileInput <type>java.io.FileInputStream <type>android.content.Context <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.util.Xml$newPullParser <type>org.xmlpull.v1.XmlPullParser this # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Xml$newSerializer <type>org.xmlpull.v1.XmlSerializer this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$openFileOutput <type>java.io.FileOutputStream <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL_AND_STROKE # begin Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 0.75f # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Rect$height EXP <type>android.graphics.Rect # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>int <type>int EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>int <type>int <type>int <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin MethodDeclaration
android.os.SystemClock$elapsedRealtime EXP this # MethodDeclaration
android.util.Log$i @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray <type>int EXP # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.GridView <type>android.view.LayoutInflater com.jeremyfeinstein.slidingmenu.example.R.layout.list_grid null # MethodDeclaration
android.widget.GridView$setBackgroundResource @0 <type>android.widget.GridView android.R.color.black # MethodDeclaration
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # end MethodDeclaration
android.widget.GridView$setOnItemClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "mPos" # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "mPos" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.jeremyfeinstein.slidingmenu.example.R.id.grid_item_img # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$postInvalidate @0 <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$isRunning <type>boolean <type>android.animation.Animator # begin end Block
<END>
<S2>
<S1>
android.animation.Animator$start @0 <type>android.animation.Animator # begin end Block
<END>
<S2>
<S1>
android.animation.Animator$end @0 <type>android.animation.Animator # begin end Block
<END>
<S2>
<S1>
android.animation.Animator$cancel @0 <type>android.animation.Animator # begin end Block
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getDefaultAdapter <type>android.bluetooth.BluetoothAdapter this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getRemoteDevice <type>android.bluetooth.BluetoothDevice <type>android.bluetooth.BluetoothAdapter deviceID # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothDevice$createRfcommSocketToServiceRecord <type>android.bluetooth.BluetoothSocket <type>android.bluetooth.BluetoothDevice DataTransferActivity.APP_UUID # begin end TryBlock
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$cancelDiscovery @0 <type>android.bluetooth.BluetoothAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothSocket$connect @0 <type>android.bluetooth.BluetoothSocket # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler DataTransferActivity.SOCKET_CONNECTED <type>ConnectionThread # begin end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothSocket$close @0 <type>android.bluetooth.BluetoothSocket # begin end TryBlock
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin MethodDeclaration
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.title_frame EXP # MethodDeclaration
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.quote_frame <type>QuotesFragment # MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.roundedCorners <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # begin Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapThumbnail_bootstrapBrand EXP # begin TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapThumbnail_bootstrapSize EXP # TryBlock
android.content.res.TypedArray$getBoolean this.hasBorder <type>android.content.res.TypedArray R.styleable.BootstrapCircleThumbnail_hasBorder true # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler this EXP # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$currentThreadTimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # end MethodDeclaration
android.widget.ImageView$getScaleType <type>android.widget.ImageView.ScaleType <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Canvas$drawARGB @0 <type>android.graphics.Canvas 0 0 0 0 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint 0xFF000000 # MethodDeclaration
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>int <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Rect <type>android.graphics.RectF <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint 0xC0000000 # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 EXP 35 # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas EXP 10 15 <type>android.graphics.Paint # end MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String 10 30 <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollview_noheader <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # MethodDeclaration
android.support.v4.app.Fragment$getView <type>android.view.ViewGroup <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup R.id.container # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ElasticDragDismissFrameLayout_dragDismissDistance 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ElasticDragDismissFrameLayout_dragDismissFraction <type>float # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ElasticDragDismissFrameLayout_dragDismissScale <type>float # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ElasticDragDismissFrameLayout_dragElasticity <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # begin end Block
<END>
<S2>
<S1>
android.view.Window$getNavigationBarColor EXP <type>android.view.Window # begin Block
android.view.Window$setNavigationBarColor @0 <type>android.view.Window EXP # end Block
<END>
<S2>
<S1>
android.view.Window$getStatusBarColor EXP <type>android.view.Window # begin Block
android.view.Window$setStatusBarColor @0 <type>android.view.Window EXP # Block
android.view.Window$getNavigationBarColor EXP <type>android.view.Window # Block
android.view.Window$setNavigationBarColor @0 <type>android.view.Window EXP # end Block
<END>
<S2>
<S1>
android.view.Window$getStatusBarColor EXP <type>android.view.Window # begin Block
android.view.Window$setStatusBarColor @0 <type>android.view.Window EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_object_id # begin MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_object_type EXP # MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_style EXP # end MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_auxiliary_view_position EXP # begin end MethodDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_horizontal_alignment EXP # begin end MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.facebook.R.styleable.com_facebook_like_view_com_facebook_foreground_color <type>int # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # begin MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>com.facebook.share.internal.LikeButton # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>com.facebook.share.internal.LikeBoxCountView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX EXP # begin MethodDeclaration
android.widget.TextView$setMaxLines @0 <type>android.widget.TextView 2 # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_LIKE_VIEW_STYLE EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_LIKE_VIEW_AUXILIARY_POSITION EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_LIKE_VIEW_HORIZONTAL_ALIGNMENT EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_LIKE_VIEW_OBJECT_ID EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_LIKE_VIEW_OBJECT_TYPE EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this EXP # begin MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter com.facebook.share.internal.LikeActionController.ACTION_LIKE_ACTION_CONTROLLER_UPDATED # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter com.facebook.share.internal.LikeActionController.ACTION_LIKE_ACTION_CONTROLLER_DID_ERROR # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter com.facebook.share.internal.LikeActionController.ACTION_LIKE_ACTION_CONTROLLER_DID_RESET # MethodDeclaration
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver <type>android.content.IntentFilter # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this EXP # begin Block
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView null # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getLayoutParams <type>LayoutParams <type>android.widget.LinearLayout # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView GONE # end MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # MethodDeclaration
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$removeView @0 <type>android.widget.LinearLayout <type>com.facebook.share.internal.LikeButton # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>com.facebook.share.internal.LikeButton # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeView @0 <type>android.widget.LinearLayout <type>android.view.View # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin MethodDeclaration
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.share.internal.LikeActionController.ACTION_OBJECT_ID_KEY # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint badgeColor # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Typeface$create EXP this TYPEFACE TYPEFACE_STYLE # MethodDeclaration
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.text.TextPaint$setColor @0 <type>android.text.TextPaint badgeTextColor # MethodDeclaration
android.graphics.Bitmap$createBitmap badge this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.text.TextPaint$getTextBounds @0 <type>android.text.TextPaint badgeText 0 EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # end MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Canvas$drawTextOnPath @0 <type>android.graphics.Canvas badgeText <type>android.graphics.Path <type>float <type>float <type>android.text.TextPaint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path 0 <type>int # begin SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int 0 # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 0 # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP 0 # begin SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int <type>int # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int 0 # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path 0 EXP # begin SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int <type>int # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 <type>int # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP <type>int # begin SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int EXP # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int <type>int # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas badge 0 0 paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle ARG_SELECTED # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.cancel # begin MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP this # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.clear # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEUTRAL EXP this # MethodDeclaration
android.app.Activity$getLayoutInflater <type>android.view.LayoutInflater <type>android.app.Activity # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.ListView <type>android.view.LayoutInflater com.github.pockethub.R.layout.dialog_list_view null # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SELECTED_CHOICE # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>UserListAdapter # end MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setSelection @0 <type>android.widget.ListView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.os.Parcel$writeBundle @0 <type>android.os.Parcel this.bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.xxmassdeveloper.mpchartexample.R.layout.frag_simple_line <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.mikephil.charting.charts.LineChart <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.lineChart1 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Light.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_crouton <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.extras.R.menu.extras_crouton <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.carddemo_extras_crouton_card null # begin MethodDeclaration
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.CardView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_card_crouton_id # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.carddemo_extras_crouton_card null # begin MethodDeclaration
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.CardView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_card_crouton_id # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_gplaycard_undo <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RadioGroup$check @0 <type>android.widget.RadioGroup EXP # begin MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getWindowToken EXP <type>android.widget.EditText # begin MethodDeclaration
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager <type>android.location.LocationListener # begin end Block
<END>
<S2>
<S1>
android.location.Criteria$setAccuracy @0 <type>android.location.Criteria android.location.Criteria.ACCURACY_COARSE # begin MethodDeclaration
android.location.LocationManager$getBestProvider <type>String <type>android.location.LocationManager <type>android.location.Criteria true # end MethodDeclaration
<END>
<S2>
<S1>
android.location.LocationManager$getLastKnownLocation <type>android.location.Location <type>android.location.LocationManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
android.location.LocationManager$requestLocationUpdates @0 <type>android.location.LocationManager <type>String <type>long <type>int <type>android.location.LocationListener # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SetUpActivity.this R.string.found_location android.widget.Toast.LENGTH_SHORT # begin Block
android.location.Location$getLatitude EXP <type>android.location.Location # Block
android.location.Location$getLongitude EXP <type>android.location.Location # Block
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager this # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.RadioGroup$getCheckedRadioButtonId EXP <type>android.widget.RadioGroup # begin MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # MethodDeclaration
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # end MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin Block
android.widget.EditText$getText EXP <type>android.widget.EditText # end Block
<END>
<S2>
<S1>
android.location.Location$getLatitude EXP <type>android.location.Location # begin Block
android.location.Location$getLongitude EXP <type>android.location.Location # end Block
<END>
<S2>
<S1>
android.view.View$findViewById this.divider <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_divider # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.util.Linkify$addLinks @0 this <type>android.widget.TextView android.text.util.Linkify.ALL # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.util.Linkify$addLinks @0 this <type>android.widget.TextView android.text.util.Linkify.ALL # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.TextView$findFocus @0 <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin Block
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar org.bookdash.android.R.string.about_heading # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this EXP io.plaidapp.R.color.background_light # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofArgb <type>android.animation.Animator this <type>io.plaidapp.ui.drawable.MorphDrawable FIELD <type>int # begin MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this <type>io.plaidapp.ui.drawable.MorphDrawable FIELD <type>int # end MethodDeclaration
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator # begin MethodDeclaration
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 300 # MethodDeclaration
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin Block
android.view.View$animate EXP <type>android.view.View # Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_linear_in # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#333333" # begin ClassDeclaration
android.graphics.Color$parseColor <type>int this "#1E88E5" # end ClassDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View.OnClickListener$onClick @0 <type>android.view.View.OnClickListener <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$dispatchTouchEvent EXP <type>android.app.Activity <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.app.Activity com.gc.materialdesign.R.anim.snackbar_show_animation # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$sendMessage @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this <type>android.app.Activity com.gc.materialdesign.R.anim.snackbar_hide_animation # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel id # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel title # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel url # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x00 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x01 # begin Block
android.os.Parcel$writeList @0 <type>android.os.Parcel <type>java.util.List # end Block
<END>
<S2>
<S1>
android.content.Context$getString <type>String <type>android.content.Context <type>Integer # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getExternalCacheDir <type>java.io.File <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # begin TryBlock
android.os.StatFs$getAvailableBlocks EXP <type>android.os.StatFs # end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler 1 <type>AsyncOperation # begin Block
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Entry added!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Entry removed!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "DataSet added!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "DataSet removed!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Empty data added!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Chart cleared!" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 240 99 99 # begin MethodDeclaration
android.graphics.Color$rgb EXP this 240 99 99 # MethodDeclaration
android.graphics.Color$rgb EXP this 190 190 190 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro_2 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "THE HEADER!" # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView "THE FOOTER!" # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onScroll lastInScreen - so load more" # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.camera2.CameraDevice$close @0 <type>android.hardware.camera2.CameraDevice # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.camera2.CameraDevice$close @0 <type>android.hardware.camera2.CameraDevice # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Size$getWidth <type>int <type>android.util.Size # begin MethodDeclaration
android.util.Size$getHeight <type>int <type>android.util.Size # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>AutoFitTextureView <type>android.view.View com.afollestad.materialcamera.R.id.texture # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # begin MethodDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$quitSafely @0 <type>android.os.HandlerThread # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$join @0 <type>android.os.HandlerThread # begin end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.hardware.camera2.CameraManager <type>android.app.Activity android.content.Context.CAMERA_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.camera2.CameraManager$getCameraCharacteristics <type>android.hardware.camera2.CameraCharacteristics <type>android.hardware.camera2.CameraManager EXP # begin TryBlock
android.hardware.camera2.CameraCharacteristics$get <type>android.hardware.camera2.params.StreamConfigurationMap <type>android.hardware.camera2.CameraCharacteristics android.hardware.camera2.CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP # end TryBlock
android.hardware.camera2.params.StreamConfigurationMap$getOutputSizes EXP <type>android.hardware.camera2.params.StreamConfigurationMap android.media.MediaRecorder # begin TryBlock
android.hardware.camera2.params.StreamConfigurationMap$getOutputSizes EXP <type>android.hardware.camera2.params.StreamConfigurationMap android.graphics.SurfaceTexture # TryBlock
android.hardware.camera2.CameraCharacteristics$get <type>int <type>android.hardware.camera2.CameraCharacteristics android.hardware.camera2.CameraCharacteristics.SENSOR_ORIENTATION # TryBlock
android.util.Log$d @0 this "Camera2Fragment" EXP # end TryBlock
android.hardware.camera2.CameraManager$openCamera @0 <type>android.hardware.camera2.CameraManager EXP <type>android.hardware.camera2.CameraDevice.StateCallback null # begin end TryBlock
<END>
<S2>
<S1>
android.util.Size$getWidth EXP <type>android.util.Size # begin Block
android.util.Size$getHeight EXP <type>android.util.Size # end Block
<END>
<S2>
<S1>
android.util.Size$getHeight EXP <type>android.util.Size # begin Block
android.util.Size$getWidth EXP <type>android.util.Size # end Block
<END>
<S2>
<S1>
android.hardware.camera2.CameraDevice$close @0 <type>android.hardware.camera2.CameraDevice # begin end Block
<END>
<S2>
<S1>
android.util.Size$getWidth EXP <type>android.util.Size # begin TryBlock
android.util.Size$getHeight EXP <type>android.util.Size # TryBlock
android.graphics.SurfaceTexture$setDefaultBufferSize @0 <type>android.graphics.SurfaceTexture EXP EXP # TryBlock
android.hardware.camera2.CameraDevice$createCaptureRequest <type>android.hardware.camera2.CaptureRequest.Builder <type>android.hardware.camera2.CameraDevice android.hardware.camera2.CameraDevice.TEMPLATE_RECORD # TryBlock
android.hardware.camera2.CaptureRequest.Builder$addTarget @0 <type>android.hardware.camera2.CaptureRequest.Builder <type>android.view.Surface # TryBlock
android.hardware.camera2.CaptureRequest.Builder$addTarget @0 <type>android.hardware.camera2.CaptureRequest.Builder <type>android.view.Surface # end TryBlock
android.hardware.camera2.CameraDevice$createCaptureSession @0 <type>android.hardware.camera2.CameraDevice <type>java.util.List EXP <type>android.os.Handler # begin end TryBlock
<END>
<S2>
<S1>
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # begin TryBlock
android.hardware.camera2.CaptureRequest.Builder$build EXP <type>android.hardware.camera2.CaptureRequest.Builder # TryBlock
android.hardware.camera2.CameraCaptureSession$setRepeatingRequest @0 <type>android.hardware.camera2.CameraCaptureSession EXP null <type>android.os.Handler # end TryBlock
<END>
<S2>
<S1>
android.hardware.camera2.CaptureRequest.Builder$set @0 <type>android.hardware.camera2.CaptureRequest.Builder android.hardware.camera2.CaptureRequest.CONTROL_MODE android.hardware.camera2.CameraMetadata.CONTROL_MODE_AUTO # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin MethodDeclaration
android.util.Size$getHeight EXP <type>android.util.Size # MethodDeclaration
android.util.Size$getWidth EXP <type>android.util.Size # MethodDeclaration
android.graphics.RectF$centerX <type>float <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$centerY <type>float <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.RectF$offset @0 <type>android.graphics.RectF EXP EXP # Block
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.FILL # Block
android.util.Size$getHeight EXP <type>android.util.Size # Block
android.util.Size$getWidth EXP <type>android.util.Size # Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float <type>float <type>float # Block
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix EXP <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix 180 <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.util.Size$getWidth EXP <type>android.util.Size # begin MethodDeclaration
android.util.Size$getHeight EXP <type>android.util.Size # end MethodDeclaration
android.net.Uri$fromFile <type>android.net.Uri this EXP # begin MethodDeclaration
android.net.Uri$toString mOutputUri <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPath EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$checkSelfPermission EXP <type>android.app.Activity android.Manifest.permission.RECORD_AUDIO # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP com.afollestad.materialcamera.R.string.mcam_no_audio_access android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.util.Size$getHeight EXP <type>android.util.Size # begin MethodDeclaration
android.util.Size$getWidth EXP <type>android.util.Size # MethodDeclaration
android.util.Size$getHeight EXP <type>android.util.Size # MethodDeclaration
android.util.Size$getWidth EXP <type>android.util.Size # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLines @0 <type>android.graphics.Canvas <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View EXP # begin end For
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View <type>CharSequence # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>CharSequence # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View <type>CharSequence # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>CharSequence # end MethodDeclaration
<END>
<S2>
<S1>
android.text.format.DateUtils$getRelativeTimeSpanString EXP this <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$clear @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP EXP EXP EXP mShadowPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float mValuePaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.card_main_inner_simple_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Wish Happy Birthday" # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER_VERTICAL # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.RoundCornersDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.RoundCornersDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_birth1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_birth2 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getDataDirectory <type>java.io.File this # begin Block
android.os.Environment$getExternalStorageDirectory <type>java.io.File this # end Block
<END>
<S2>
<S1>
android.os.StatFs$getBlockSize <type>long <type>android.os.StatFs # begin Block
android.os.StatFs$getAvailableBlocks <type>long <type>android.os.StatFs # end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StatFs$restat @0 <type>android.os.StatFs EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress <type>boolean <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.PagerAdapter$getCount <type>int <type>android.support.v4.view.PagerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.PagerAdapter$getPageTitle <type>CharSequence <type>android.support.v4.view.PagerAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View <type>boolean # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.fragment_fragmenttransition_second <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getSupportActionBar <type>android.support.v7.app.ActionBar <type>android.support.v7.app.AppCompatActivity # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getSupportActionBar <type>android.support.v7.app.ActionBar <type>android.support.v7.app.AppCompatActivity # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this WidgetActivity.this "Click accept button" 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this WidgetActivity.this "Click cancel button" 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$setArguments @0 <type>android.app.Fragment EXP # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin ConstructorDeclaration
android.content.Context$getCacheDir EXP <type>android.content.Context # end ConstructorDeclaration
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin MethodDeclaration
android.util.Log$i @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$size EXP <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_children_simple_title # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int null # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this com.squareup.picasso.Picasso.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # begin TryBlock
android.os.StatFs$getBlockCount EXP <type>android.os.StatFs # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin MethodDeclaration
android.app.ActivityManager$getMemoryClass <type>int <type>android.app.ActivityManager # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$checkCallingOrSelfPermission EXP <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getIdentifier <type>int <type>android.content.res.Resources <type>String <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$getResourcesForApplication EXP <type>android.content.pm.PackageManager <type>String # end TryBlock
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler # begin MethodDeclaration
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler EXP <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityManager$getLargeMemoryClass EXP <type>android.app.ActivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_BACKGROUND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getByteCount EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.embedded <type>android.support.v4.app.DialogFragment # begin Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.support.v4.app.DialogFragment$show @0 <type>android.support.v4.app.DialogFragment EXP "dialog" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.hello_world <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View "This is an instance of MyDialogFragment" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setNumColumns @0 <type>android.widget.GridView <type>int # begin MethodDeclaration
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>MyAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.MediaStore.Files.FileColumns.MEDIA_TYPE # begin Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor EXP # end Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.MediaStore.Files.FileColumns.DATA # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$getMinimumFlingVelocity <type>int this # begin Block
android.view.ViewConfiguration$getMaximumFlingVelocity <type>int this # Block
android.util.Log$e @0 this "MPChartLib-Utils" "Utils.init(...) PROVIDED CONTEXT OBJECT IS NULL" # end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this <type>android.content.Context # begin Block
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>int <type>android.view.ViewConfiguration # Block
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # Block
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # Block
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # begin MethodDeclaration
android.view.ViewConfiguration$getMinimumFlingVelocity <type>int this # MethodDeclaration
android.view.ViewConfiguration$getMaximumFlingVelocity <type>int this # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "MPChartLib-Utils" "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...). Otherwise conversion does not take place." # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "MPChartLib-Utils" "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...). Otherwise conversion does not take place." # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$measureText EXP <type>android.graphics.Paint <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getTextBounds @0 <type>android.graphics.Paint <type>String 0 EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getFontMetrics <type>android.graphics.Paint.FontMetrics <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getFontMetrics <type>android.graphics.Paint.FontMetrics <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getTextBounds @0 <type>android.graphics.Paint <type>String 0 EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>int # begin MethodDeclaration
android.view.MotionEvent$getActionIndex <type>int <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # MethodDeclaration
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.view.VelocityTracker$getYVelocity <type>float <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # begin Block
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker <type>int # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker <type>int # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$clear @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$postInvalidateOnAnimation @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$postInvalidateDelayed @0 <type>android.view.View 10 # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Paint$getTextBounds @0 <type>android.graphics.Paint <type>String 0 EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Paint$getTextAlign <type>android.graphics.Paint.Align <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.LEFT # end MethodDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint <type>android.graphics.Paint.Align # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # end Block
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$post @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # MethodDeclaration
android.view.View$setTouchDelegate @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_BACKGROUND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ScrollView$addView @0 <type>android.widget.ScrollView <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$post @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.util.Log$d @0 this "MicroBenchmarks" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 200 # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>int EXP # MethodDeclaration
android.graphics.Rect$exactCenterX EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$exactCenterY EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float EXP EXP # MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog <type>CharSequence # begin MethodDeclaration
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog true # MethodDeclaration
android.app.ProgressDialog$setProgressStyle @0 <type>android.app.ProgressDialog STYLE_SPINNER # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.app.ProgressDialog$setIndeterminateDrawable @0 <type>android.app.ProgressDialog EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getDrawable EXP <type>android.content.Context <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this "ObjectAnimator" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this "ObjectAnimator" EXP # begin end Block
<END>
<S2>
<S1>
android.bluetooth.BluetoothSocket$getInputStream <type>java.io.InputStream <type>android.bluetooth.BluetoothSocket # begin TryBlock
android.bluetooth.BluetoothSocket$getOutputStream <type>java.io.OutputStream <type>android.bluetooth.BluetoothSocket # end TryBlock
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler DataTransferActivity.DATA_RECEIVED <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.drawable.ic_up # begin MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationContentDescription @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.string.close_and_go_back # end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String VideoLibraryModel.ALL_TOPICS # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String VideoLibraryModel.ALL_YEARS # end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$inflateMenu @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.menu.video_library_filtered # begin MethodDeclaration
android.support.v7.widget.Toolbar$setOnMenuItemClickListener @0 <type>android.support.v7.widget.Toolbar this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Clickable card" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Content Area" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Header Area" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View false # begin Block
android.view.ActionMode$finish @0 <type>android.view.ActionMode # end Block
<END>
<S2>
<S1>
android.view.ActionMode$getMenuInflater <type>android.view.MenuInflater <type>android.view.ActionMode # begin MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.carddemo_cab_example <type>android.view.Menu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Change Text" android.widget.Toast.LENGTH_LONG # begin end SwitchCase
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent EXP com.facebook.FacebookActivity # begin MethodDeclaration
android.content.Intent$setAction @0 <type>android.content.Intent com.facebook.FacebookActivity.PASS_THROUGH_CANCEL_ACTION # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle NativeProtocol.WEB_DIALOG_ACTION <type>String # begin MethodDeclaration
android.os.Bundle$putBundle @0 <type>android.os.Bundle NativeProtocol.WEB_DIALOG_PARAMS <type>android.os.Bundle # MethodDeclaration
android.content.Intent$setClass @0 <type>android.content.Intent EXP com.facebook.FacebookActivity # MethodDeclaration
android.content.Intent$setAction @0 <type>android.content.Intent FacebookDialogFragment.TAG # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle NativeProtocol.WEB_DIALOG_URL EXP # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle NativeProtocol.WEB_DIALOG_IS_FALLBACK true # MethodDeclaration
android.content.Intent$setClass @0 <type>android.content.Intent EXP com.facebook.FacebookActivity # MethodDeclaration
android.content.Intent$setAction @0 <type>android.content.Intent FacebookDialogFragment.TAG # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getAuthority EXP <type>android.net.Uri # begin Block
android.net.Uri$getPath EXP <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle AnalyticsEvents.PARAMETER_DIALOG_OUTCOME <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$registerDataSetObserver @0 <type>android.widget.BaseAdapter EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEmpty EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getCount EXP <type>android.widget.BaseAdapter # begin MethodDeclaration
android.util.SparseArray$size EXP <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.BaseAdapter$getItem EXP <type>android.widget.BaseAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$indexOfKey EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.BaseAdapter$getItemId EXP <type>android.widget.BaseAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItemViewType EXP <type>android.widget.BaseAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEnabled EXP <type>android.widget.BaseAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getViewTypeCount EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$hasStableIds EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEmpty EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getView EXP <type>android.widget.BaseAdapter EXP <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_section_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin IfTrue
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$size <type>int <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$size <type>int <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.title_activity_flexiblespacewithimagewithviewpagertab # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View android.R.id.content # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_GIST_ID <type>String # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_GIST_ID # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar null # begin Block
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar null # Block
android.support.v7.app.ActionBar$setIcon @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.drawable.app_icon # end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.anonymous # begin Block
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar null # Block
android.support.v7.app.ActionBar$setIcon @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.drawable.app_icon # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$alpha EXP this <type>int # begin MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading repository" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#4CAF50" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeBooleanValue <type>boolean <type>android.util.AttributeSet MATERIALDESIGNXML "check" false # begin end MethodDeclaration
android.view.View$generateViewId EXP this # begin MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_IN_PARENT android.widget.RelativeLayout.TRUE # MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "text" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeValue <type>String <type>android.util.AttributeSet ANDROIDXML "text" # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout.LayoutParams$removeRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_IN_PARENT # begin Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL android.widget.RelativeLayout.TRUE # Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.RIGHT_OF EXP # Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL android.widget.RelativeLayout.TRUE # Block
android.widget.RelativeLayout.LayoutParams$setMargins @0 <type>android.widget.RelativeLayout.LayoutParams 10 0 0 0 # Block
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.RelativeLayout.LayoutParams # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#446D6D6D" # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin Block
android.graphics.Color$parseColor EXP this "#446D6D6D" # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 70 <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP com.gc.materialdesign.R.drawable.sprite_check # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin Block
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Rect <type>android.graphics.Rect null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # begin end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$recycle @0 <type>android.os.Parcel # begin end Finally
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this 140 234 255 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_storehouse_header null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_image # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.WindowManager$getDefaultDisplay EXP <type>android.view.WindowManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$setBackgroundColor @0 <type>android.widget.FrameLayout <type>int # begin MethodDeclaration
android.widget.RelativeLayout$setBackgroundColor @0 <type>android.widget.RelativeLayout <type>int # MethodDeclaration
android.gesture.GestureLibraries$fromRawResource <type>android.gesture.GestureLibrary this this R.raw.gestures # end MethodDeclaration
android.gesture.GestureOverlayView$addOnGesturePerformedListener @0 <type>android.gesture.GestureOverlayView this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.gesture.GestureLibrary$recognize <type>java.util.ArrayList <type>android.gesture.GestureLibrary <type>android.gesture.Gesture # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$setBackgroundColor @0 <type>android.widget.FrameLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setBackgroundColor @0 <type>android.widget.FrameLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setBackgroundColor @0 <type>android.widget.RelativeLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setBackgroundColor @0 <type>android.widget.RelativeLayout <type>int # begin Block
android.widget.FrameLayout$setBackgroundColor @0 <type>android.widget.FrameLayout <type>int # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this FIELD android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "No prediction" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_native_mix <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_text # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image_title1 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image_title2 # end MethodDeclaration
android.widget.TextView$getBackground <type>android.graphics.drawable.GradientDrawable <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Detail............" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "xxxx xxx xxxx xxxxx" # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this LinearActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this GridActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this StaggeredGridActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "500" # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 500 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.VIDEO_ID # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TITLE # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_IN_MY_SCHEDULE # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TAGS # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_COLOR # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor EXP # end MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_LIVESTREAM_ID # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_YOUTUBE_URL # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.ROOM_NAME # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.ROOM_ID # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_HASHTAG # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_PHOTO_URL # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_URL # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_ABSTRACT # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_SPEAKER_NAMES # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_REQUIREMENTS # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor EXP # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin MethodDeclaration
android.net.Uri$parse EXP this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToPosition @0 <type>android.database.Cursor <type>int # begin Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_NAME # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_IMAGE_URL # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_COMPANY # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_URL # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_PLUSONE_URL # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_TWITTER_URL # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_ABSTRACT # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent <type>android.content.Context com.google.samples.apps.iosched.service.SessionCalendarService # begin Block
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_START <type>long # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_END <type>long # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_ROOM <type>String # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_TITLE <type>String # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_START <type>long # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_END <type>long # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionCalendarService.EXTRA_SESSION_TITLE <type>String # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_START <type>long # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_END <type>long # Block
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_ID <type>String # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_START <type>long # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_END <type>long # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_TITLE <type>String # Block
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray <type>int false # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin Block
android.view.View$measure @0 <type>android.view.View EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_OWNER # begin MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY_NAME # MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE_NUMBER # MethodDeclaration
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.User <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_USER # MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_IS_COLLABORATOR false # MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_IS_OWNER false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_loading # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.loading_comments # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.comment_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.issue_header null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_state # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_issue_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_issue_author # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_issue_creation_date # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.github.pockethub.R.id.iv_avatar # MethodDeclaration
android.view.View$findViewById <type>android.view.ViewGroup <type>android.view.View com.github.pockethub.R.id.ll_issue_commits # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_assignee_name # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.github.pockethub.R.id.iv_assignee_avatar # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_labels # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.github.pockethub.R.id.ll_milestone # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_milestone # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.github.pockethub.R.id.v_closed # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_issue_body # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.loading_item null # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.footer_separator null # end MethodDeclaration
android.view.ViewGroup$setOnClickListener @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.ll_assignee # end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.github.pockethub.ui.HeaderFooterListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.no_description_given # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_commit_icon # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.util.TypefaceUtils.ICON_COMMIT # Block
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_pull_request_commits # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.unassigned # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.GithubComment <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.close # begin Block
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem com.github.pockethub.R.drawable.ic_github_issue_closed_white_24dp # end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem com.github.pockethub.R.string.reopen # begin Block
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem com.github.pockethub.R.drawable.ic_github_issue_reopened_white_24dp # end Block
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_edit # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_state # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # begin Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.issue_view <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_state # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.Issue <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.GithubComment <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra comment <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_COMMENT <type>com.alorma.github.sdk.bean.dto.response.GithubComment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAuthenticatorTypes <type>android.accounts.AuthenticatorDescription <type>android.accounts.AccountManager # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAccountsByTypeAndFeatures <type>android.accounts.AccountManagerFuture <type>android.accounts.AccountManager com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE null null null # begin MethodDeclaration
android.accounts.AccountManagerFuture$getResult <type>android.accounts.Account <type>android.accounts.AccountManagerFuture # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.content.Context # begin MethodDeclaration
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$isLoggable <type>boolean this <type>String android.util.Log.DEBUG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Getting account" # begin end IfTrue
<END>
<S2>
<S1>
android.accounts.AccountManager$addAccount EXP <type>android.accounts.AccountManager com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE null null null <type>android.app.Activity null null # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_NAME # begin IfTrue
android.util.Log$d @0 this <type>String EXP # end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.authenticator_conflict_title # begin MethodDeclaration
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.authenticator_conflict_message # MethodDeclaration
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # end MethodDeclaration
android.app.AlertDialog$setOnCancelListener @0 <type>android.app.AlertDialog EXP # begin MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity android.R.string.ok # end MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_POSITIVE EXP EXP # begin MethodDeclaration
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from this.inflater this <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>TextView <type>android.view.LayoutInflater com.example.scrumptious.R.layout.picker_list_section_header null # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>ProgressBar <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_row_activity_circle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.example.scrumptious.R.layout.picker_activity_circle_row null # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater EXP null # begin MethodDeclaration
android.view.View$findViewById <type>android.view.ViewStub <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_checkbox_stub # end MethodDeclaration
android.view.View$findViewById <type>android.view.ViewStub <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_profile_pic_stub # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewStub$setVisibility @0 <type>android.view.ViewStub android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$inflate <type>CheckBox <type>android.view.ViewStub # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$setVisibility @0 <type>android.view.ViewStub android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$inflate <type>ImageView <type>android.view.ViewStub # begin end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>String # begin MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_title # end MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View com.example.scrumptious.R.id.picker_subtitle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>CheckBox <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_checkbox # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>ImageView <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_image # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>ImageView <type>android.view.View com.example.scrumptious.R.id.com_facebook_picker_image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.widget.ListView$setFastScrollEnabled @0 <type>android.widget.ListView true # begin MethodDeclaration
android.widget.ListView$setDividerHeight @0 <type>android.widget.ListView 0 # MethodDeclaration
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.donnfelker.android.bootstrap.core.News <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource <type>java.io.InputStream <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 10 # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # MethodDeclaration
android.graphics.Typeface$createFromAsset EXP this EXP "OpenSans-Light.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 14 0 # begin MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 14 EXP 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 14 EXP 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 14 EXP 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP EXP EXP 0 # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP EXP EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "PieChart" "nothing selected" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin Block
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # end Block
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getInt <type>int <type>android.database.Cursor OverlayQuery.TILE_FLOOR # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor OverlayQuery.TILE_FILE # end Block
android.database.Cursor$moveToNext @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setId @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # end MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMethod <type>java.lang.reflect.Method this "setSystemUiVisibility" int # begin end TryBlock
<END>
<S2>
<S1>
android.os.Debug$getNativeHeapAllocatedSize EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end IfTrue
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "ids" FIELD # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "name" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "installed" "true" # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "permissions" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "name" EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle "name" # begin end TryBlock
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.widget.ViewAnimator$setDisplayedChild @0 <type>android.widget.ViewAnimator 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ViewAnimator$setDisplayedChild @0 <type>android.widget.ViewAnimator 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin TryBlock
android.database.Cursor$getInt EXP <type>android.database.Cursor 0 # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.ActivityManager$getMemoryClass EXP <type>android.app.ActivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.format.Formatter$formatFileSize EXP this <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityManager$isLowRamDevice EXP <type>android.app.ActivityManager # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.ActivityManager <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin ConstructorDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$registerReceiver @0 <type>android.content.Context <type>android.content.BroadcastReceiver EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$unregisterReceiver @0 <type>android.content.Context <type>android.content.BroadcastReceiver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.net.ConnectivityManager <type>android.content.Context android.content.Context.CONNECTIVITY_SERVICE # begin MethodDeclaration
android.net.ConnectivityManager$getActiveNetworkInfo <type>android.net.NetworkInfo <type>android.net.ConnectivityManager # MethodDeclaration
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_recyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$from EXP this <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.root # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.donnfelker.android.bootstrap.R.layout.fragment_carousel <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY # begin MethodDeclaration
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY null # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY # begin MethodDeclaration
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY null # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences AccessTokenCache.CACHED_ACCESS_TOKEN_KEY # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Enabling StrictMode policy over Sample application" # begin Block
android.os.StrictMode$setThreadPolicy @0 this EXP # Block
android.os.StrictMode$setVmPolicy @0 this EXP # end Block
<END>
<S2>
<S1>
android.widget.RadioButton$setOnClickListener @0 <type>android.widget.RadioButton <type>android.view.View.OnClickListener # begin MethodDeclaration
android.widget.RadioButton$setOnClickListener @0 <type>android.widget.RadioButton <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.RadioButton$setOnClickListener @0 <type>android.widget.RadioButton <type>android.view.View.OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RadioButton$getText EXP <type>android.widget.RadioButton # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_navigationMode com.actionbarsherlock.app.ActionBar.NAVIGATION_MODE_STANDARD # begin ConstructorDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_title # ConstructorDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_subtitle # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_logo # end ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_icon # begin end ConstructorDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_homeLayout com.actionbarsherlock.R.layout.abs__action_bar_home # ConstructorDeclaration
android.view.LayoutInflater$inflate <type>HomeView <type>android.view.LayoutInflater <type>int this false # ConstructorDeclaration
android.view.LayoutInflater$inflate <type>HomeView <type>android.view.LayoutInflater <type>int this false # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_titleTextStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_subtitleTextStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_progressBarStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_indeterminateProgressStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelOffset <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_progressBarPadding 0 # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelOffset <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_itemPadding 0 # ConstructorDeclaration
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_displayOptions <type>int # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_customNavigationLayout 0 # end ConstructorDeclaration
android.content.res.TypedArray$getLayoutDimension mContentHeight <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_height 0 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getActivityLogo <type>android.graphics.drawable.Drawable <type>android.content.pm.PackageManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.pm.ApplicationInfo$loadLogo <type>android.graphics.drawable.Drawable <type>android.content.pm.ApplicationInfo <type>android.content.pm.PackageManager # begin end Block
<END>
<S2>
<S1>
android.content.pm.PackageManager$getActivityIcon <type>android.graphics.drawable.Drawable <type>android.content.pm.PackageManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.pm.ApplicationInfo$loadIcon <type>android.graphics.drawable.Drawable <type>android.content.pm.ApplicationInfo <type>android.content.pm.PackageManager # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this false # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup mMenuView # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup mMenuView # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>com.actionbarsherlock.internal.view.menu.ActionMenuView # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>com.actionbarsherlock.internal.view.menu.ActionMenuView # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin Block
android.text.TextUtils$isEmpty EXP this <type>CharSequence # Block
android.text.TextUtils$isEmpty EXP this <type>CharSequence # Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # Block
android.text.TextUtils$isEmpty EXP this <type>CharSequence # Block
android.text.TextUtils$isEmpty EXP this <type>CharSequence # Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin Block
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this mContext # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewParent$removeView @0 <type>android.view.ViewParent <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # begin Block
android.view.LayoutInflater$inflate <type>android.widget.LinearLayout <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__action_bar_title_item this false # Block
android.widget.LinearLayout$findViewById <type>android.widget.TextView <type>android.widget.LinearLayout com.actionbarsherlock.R.id.abs__action_bar_title # Block
android.widget.LinearLayout$findViewById <type>android.widget.TextView <type>android.widget.LinearLayout com.actionbarsherlock.R.id.abs__action_bar_subtitle # Block
android.widget.LinearLayout$findViewById <type>android.view.View <type>android.widget.LinearLayout com.actionbarsherlock.R.id.abs__up # Block
android.widget.LinearLayout$setOnClickListener @0 <type>android.widget.LinearLayout <type>OnClickListener # end Block
android.view.View$setVisibility @0 <type>android.view.View EXP # begin Block
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView mContext <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView mContext <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout GONE # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getVisibility EXP <type>android.widget.LinearLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end Block
android.view.View$measure @0 <type>android.view.View EXP EXP # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getMeasuredWidth EXP <type>android.widget.LinearLayout # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getVisibility EXP <type>android.widget.LinearLayout # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # end Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$getText EXP <type>android.view.accessibility.AccessibilityEvent # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getVisibility EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.widget.ImageView$getLayoutParams <type>LayoutParams <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getMeasuredWidth EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getMeasuredHeight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getLayoutParams <type>LayoutParams <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getMeasuredHeight <type>int <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getMeasuredWidth <type>int <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$layout @0 <type>android.widget.ImageView <type>int <type>int EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View 0 <type>int <type>int EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getConstantState EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout GONE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View GONE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$onActionViewExpanded @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$onActionViewCollapsed @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 0 android.view.Menu.NONE "Rotate 10° Right" # begin MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 1 android.view.Menu.NONE "Rotate 10° Left" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 2 android.view.Menu.NONE "Toggle automatic rotation" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 3 android.view.Menu.NONE "Reset to 0" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 4 android.view.Menu.NONE "Reset to 90" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 5 android.view.Menu.NONE "Reset to 180" # MethodDeclaration
android.view.Menu$add @0 <type>android.view.Menu android.view.Menu.NONE 6 android.view.Menu.NONE "Reset to 270" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP 15 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getStringSet <type>java.util.Set <type>android.content.SharedPreferences <type>String null # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # MethodDeclaration
android.content.SharedPreferences$getStringSet <type>java.util.Set <type>android.content.SharedPreferences <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putStringSet @0 <type>android.content.SharedPreferences.Editor <type>String <type>java.util.Set # MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor FIELD FIELD # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor FIELD FIELD # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # MethodDeclaration
android.content.SharedPreferences$getStringSet <type>java.util.Set <type>android.content.SharedPreferences <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putStringSet @0 <type>android.content.SharedPreferences.Editor <type>String <type>java.util.Set # MethodDeclaration
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor FIELD # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putStringSet @0 <type>android.content.SharedPreferences.Editor <type>String <type>java.util.Set # begin MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_designer_news_popular # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_designer_news_recent # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_popular # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_following # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_user_shots # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_user_likes # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_recent # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_debuts # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_animated # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_dribbble_search_material_design # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.source_product_hunt # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo <type>android.content.pm.ApplicationInfo <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getTitle EXP <type>android.app.Activity # begin end MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getRootView EXP <type>android.view.View # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getRootView <type>android.view.View <type>android.view.View # begin end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getRootView EXP <type>android.view.View # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.ViewDebug$getDeclaredMethod <type>java.lang.reflect.Method this "dispatchCommand" android.view.View String String java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_listview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.support.v7.widget.PopupMenu$getMenuInflater <type>android.view.MenuInflater <type>android.support.v7.widget.PopupMenu # MethodDeclaration
android.support.v7.widget.PopupMenu$getMenu EXP <type>android.support.v7.widget.PopupMenu # MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater <type>int EXP # MethodDeclaration
android.support.v7.widget.PopupMenu$setOnMenuItemClickListener @0 <type>android.support.v7.widget.PopupMenu <type>android.support.v7.widget.PopupMenu.OnMenuItemClickListener # MethodDeclaration
android.support.v7.widget.PopupMenu$setOnDismissListener @0 <type>android.support.v7.widget.PopupMenu <type>android.support.v7.widget.PopupMenu.OnDismissListener # MethodDeclaration
android.support.v7.widget.PopupMenu$show @0 <type>android.support.v7.widget.PopupMenu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton <type>android.view.View.OnClickListener # begin end MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.designer_news_quote_line # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.designer_news_quote # MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.LinearLayoutManager # MethodDeclaration
android.support.v7.widget.RecyclerView$setItemAnimator @0 <type>android.support.v7.widget.RecyclerView EXP # end MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.RecyclerView.OnScrollListener # begin end MethodDeclaration
android.widget.Toolbar$setNavigationOnClickListener @0 <type>android.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.Toolbar <type>android.view.View io.plaidapp.R.id.story_toolbar # begin Block
android.widget.Toolbar$findViewById <type>io.plaidapp.ui.widget.FontTextView <type>android.widget.Toolbar io.plaidapp.R.id.story_title # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>DesignerNewsCommentsAdapter # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>DesignerNewsCommentsAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setAlpha @0 <type>android.widget.ImageButton 1f # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.app.assist.AssistContent$setWebUri @0 <type>android.app.assist.AssistContent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setAction @0 <type>android.widget.Button io.plaidapp.data.api.designernews.UpvoteStoryService.ACTION_UPVOTE # begin MethodDeclaration
android.widget.Button$putExtra @0 <type>android.widget.Button io.plaidapp.data.api.designernews.UpvoteStoryService.EXTRA_STORY_ID FIELD # MethodDeclaration
android.app.PendingIntent$getService <type>android.app.PendingIntent this <type>android.content.Context 0 <type>android.widget.Button 0 # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this <type>android.content.Context io.plaidapp.R.color.designer_news # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context io.plaidapp.R.string.upvote_story # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin Block
android.support.v7.widget.RecyclerView$getPaddingTop EXP <type>android.support.v7.widget.RecyclerView # end Block
<END>
<S2>
<S1>
android.widget.EditText$isFocused <type>boolean <type>android.widget.EditText # begin MethodDeclaration
android.support.v7.widget.LinearLayoutManager$findFirstVisibleItemPosition <type>int <type>android.support.v7.widget.LinearLayoutManager # MethodDeclaration
android.support.v7.widget.LinearLayoutManager$findLastVisibleItemPosition <type>int <type>android.support.v7.widget.LinearLayoutManager # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_linear_in # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$animate EXP <type>android.widget.ImageButton # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.linear_out_slow_in # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getPaddingStart EXP <type>android.support.v7.widget.RecyclerView # begin Block
android.support.v7.widget.RecyclerView$getPaddingEnd EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getPaddingBottom EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$setPaddingRelative @0 <type>android.support.v7.widget.RecyclerView EXP EXP EXP EXP # Block
android.support.v7.widget.RecyclerView$scrollToPosition @0 <type>android.support.v7.widget.RecyclerView 0 # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$getLeft EXP <type>android.widget.ImageButton # begin MethodDeclaration
android.widget.ImageButton$getRight EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$getTop EXP <type>android.widget.ImageButton # MethodDeclaration
android.widget.ImageButton$getBottom EXP <type>android.widget.ImageButton # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$setTranslationX @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setTranslationY @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.widget.ImageButton$getWidth EXP <type>android.widget.ImageButton # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal EXP this <type>android.view.View EXP EXP EXP EXP # MethodDeclaration
android.transition.ArcMotion$setMinimumVerticalAngle @0 <type>android.transition.ArcMotion 70f # MethodDeclaration
android.transition.ArcMotion$getPath <type>android.graphics.Path <type>android.transition.ArcMotion <type>int <type>int 0 0 # MethodDeclaration
android.animation.ObjectAnimator$ofFloat EXP this <type>android.view.View android.view.View.TRANSLATION_X android.view.View.TRANSLATION_Y <type>android.graphics.Path # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.designer_news # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.background_light # MethodDeclaration
android.animation.ObjectAnimator$ofArgb EXP this <type>android.view.View io.plaidapp.util.ViewUtils.BACKGROUND_COLOR EXP EXP # MethodDeclaration
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.ImageButton android.view.View.ALPHA 0f # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this DesignerNewsStory.this android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # MethodDeclaration
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator # MethodDeclaration
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.story_comment # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View io.plaidapp.R.id.story_vote_action # begin MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View io.plaidapp.R.id.story_share_action # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View io.plaidapp.R.id.story_poster_time # MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 EXP android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # MethodDeclaration
android.text.TextUtils$isEmpty EXP this FIELD # MethodDeclaration
android.text.format.DateUtils$getRelativeTimeSpanString <type>CharSequence this EXP EXP android.text.format.DateUtils.SECOND_IN_MILLIS # MethodDeclaration
android.text.TextUtils$concat EXP this <type>android.text.SpannableString <type>CharSequence "\n" <type>CharSequence # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View io.plaidapp.R.id.story_poster_avatar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.EditText <type>android.view.View io.plaidapp.R.id.comment # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View io.plaidapp.R.id.post_comment # end MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin MethodDeclaration
android.widget.EditText$setOnFocusChangeListener @0 <type>android.widget.EditText <type>android.view.View.OnFocusChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$clearFocus @0 <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setEnabled @0 <type>android.widget.EditText false # begin Block
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # Block
android.widget.EditText$getText EXP <type>android.widget.EditText # end Block
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.widget.EditText$setEnabled @0 <type>android.widget.EditText true # MethodDeclaration
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP FIELD android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.widget.EditText$setEnabled @0 <type>android.widget.EditText true # MethodDeclaration
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setActivated @0 <type>android.widget.Button true # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setActivated @0 <type>android.widget.Button false # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this DesignerNewsStory.this io.plaidapp.R.color.background_light # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # MethodDeclaration
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this DesignerNewsStory.this <type>android.view.View EXP # MethodDeclaration
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setActivated @0 <type>android.widget.ImageButton <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.format.DateUtils$getRelativeTimeSpanString EXP this EXP EXP android.text.format.DateUtils.SECOND_IN_MILLIS # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$scrollToPosition @0 <type>android.support.v7.widget.RecyclerView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP FIELD android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this EXP android.R.interpolator.fast_out_slow_in # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this EXP android.R.interpolator.fast_out_slow_in # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this EXP android.R.interpolator.linear_out_slow_in # begin Block
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this EXP android.R.interpolator.fast_out_slow_in # Block
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this FIELD android.view.View.ALPHA 1f # Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator 400L # Block
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator <type>android.view.animation.Interpolator # Block
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this FIELD android.view.View.TRANSLATION_X 0f # Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator 400L # Block
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator <type>android.view.animation.Interpolator # end Block
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin Block
android.animation.Animator$start @0 <type>android.animation.Animator # Block
android.animation.Animator$start @0 <type>android.animation.Animator # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "addEntry" "Cannot add Entry because dataSetIndex too high or too low." # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.text.Html$fromHtml <type>CharSequence this EXP # MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "LEARN MORE" # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasAction EXP this android.content.Intent.ACTION_VIEW # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasData EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this <type>String <type>ExtractImageGetter null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin ConstructorDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # ConstructorDeclaration
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources com.actionbarsherlock.R.dimen.abs__config_prefDialogWidth # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.View$addOnAttachStateChangeListener @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$removeOnAttachStateChangeListener @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # begin MethodDeclaration
android.view.View.MeasureSpec$makeMeasureSpec <type>int this 0 android.view.View.MeasureSpec.UNSPECIFIED # MethodDeclaration
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType <type>int <type>android.widget.ListAdapter <type>int # begin end Block
android.widget.ListAdapter$getView <type>android.view.View <type>android.widget.ListAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$removeOnAttachStateChangeListener @0 <type>android.view.View this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$setForceShowIcon @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_ID # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_YEAR # Block
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_TOPIC # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_TITLE # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_DESC # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_VID # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_SPEAKERS # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_THUMBNAIL_URL # Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.VIDEO_ID # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_YEAR # begin Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_TOPIC # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin Block
android.app.Activity$getContentResolver EXP <type>android.app.Activity # Block
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.VIDEO_ID <type>String # Block
android.content.AsyncQueryHandler$startInsert @0 <type>android.content.AsyncQueryHandler EXP null <type>android.net.Uri <type>android.content.ContentValues # Block
android.app.Activity$sendBroadcast @0 <type>android.app.Activity EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_card_color_inner_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Swipe action not enabled in this type of view" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Expand action not enabled in this type of view" # begin end Block
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 100 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle AppEventsConstants.EVENT_PARAM_SOURCE_APPLICATION <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle AppEventsConstants.EVENT_NAME_SESSION_INTERRUPTIONS <type>int # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AppEventsConstants.EVENT_NAME_TIME_BETWEEN_SESSIONS EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle AppEventsConstants.EVENT_PARAM_SOURCE_APPLICATION <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.ToggleButton$setOnCheckedChangeListener @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
android.widget.ToggleButton$setOnCheckedChangeListener @0 <type>android.widget.ToggleButton EXP # begin MethodDeclaration
android.media.AudioManager$requestAudioFocus @0 <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener android.media.AudioManager.STREAM_MUSIC android.media.AudioManager.AUDIOFOCUS_GAIN # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ToggleButton$setEnabled @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ToggleButton$setEnabled @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaRecorder$setAudioSource @0 <type>android.media.MediaRecorder android.media.MediaRecorder.AudioSource.MIC # begin MethodDeclaration
android.media.MediaRecorder$setOutputFormat @0 <type>android.media.MediaRecorder android.media.MediaRecorder.OutputFormat.THREE_GPP # MethodDeclaration
android.media.MediaRecorder$setOutputFile @0 <type>android.media.MediaRecorder <type>String # MethodDeclaration
android.media.MediaRecorder$setAudioEncoder @0 <type>android.media.MediaRecorder android.media.MediaRecorder.AudioEncoder.AMR_NB # end MethodDeclaration
android.media.MediaRecorder$start @0 <type>android.media.MediaRecorder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaRecorder$prepare @0 <type>android.media.MediaRecorder # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaRecorder$stop @0 <type>android.media.MediaRecorder # begin Block
android.media.MediaRecorder$release @0 <type>android.media.MediaRecorder # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer <type>String # begin TryBlock
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # TryBlock
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.media.AudioManager$abandonAudioFocus @0 <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener # begin end Block
<END>
<S2>
<S1>
android.media.MediaRecorder$release @0 <type>android.media.MediaRecorder # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_listContainer # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_progressContainer # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "text" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeValue <type>String <type>android.util.AttributeSet ANDROIDXML "text" # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView backgroundColor # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView null android.graphics.Typeface.BOLD # Block
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_IN_PARENT android.widget.RelativeLayout.TRUE # Block
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.RelativeLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue background <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas x y radius <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#88DDDDDD" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageURI @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView null # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin TryBlock
android.graphics.drawable.Drawable$createFromStream <type>android.graphics.drawable.Drawable this <type>java.io.InputStream EXP # end TryBlock
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>int android.graphics.PorterDuff.Mode.SRC_IN # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView EXP # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$split <type>String this <type>String "," # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.text.TextUtils$join EXP this "," EXP # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor EXP EXP # MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor <type>String # begin MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," EXP # begin Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor EXP # MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.support.v4.app.FragmentManager$putFragment @0 <type>android.support.v4.app.FragmentManager <type>android.os.Bundle SettingsFragment.TAG <type>SettingsFragment # MethodDeclaration
android.support.v4.app.FragmentManager$putFragment @0 <type>android.support.v4.app.FragmentManager <type>android.os.Bundle ProfileFragment.TAG <type>ProfileFragment # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$getFragment <type>ProfileFragment <type>android.support.v4.app.FragmentManager <type>android.os.Bundle ProfileFragment.TAG # begin Block
android.support.v4.app.FragmentManager$getFragment <type>SettingsFragment <type>android.support.v4.app.FragmentManager <type>android.os.Bundle SettingsFragment.TAG # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.fragmentContainer <type>ProfileFragment ProfileFragment.TAG # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.fragmentContainer <type>SettingsFragment SettingsFragment.TAG # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide EXP <type>android.support.v4.app.FragmentTransaction <type>ProfileFragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide EXP <type>android.support.v4.app.FragmentTransaction <type>SettingsFragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray <type>int EXP # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray <type>int true # begin Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float EXP EXP # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 1 # begin MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 0 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setValues @0 <type>android.graphics.Matrix EXP # begin Block
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preSkew @0 <type>android.graphics.Matrix EXP 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preSkew @0 <type>android.graphics.Matrix 0 EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix EXP EXP # begin Block
android.graphics.Matrix$preRotate @0 <type>android.graphics.Matrix <type>float # Block
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix <type>float <type>float # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rMoveTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$close @0 <type>android.graphics.Path # begin Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Path$rLineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rLineTo @0 <type>android.graphics.Path <type>float 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rLineTo @0 <type>android.graphics.Path 0 <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.util.FloatMath$sin <type>float this <type>float # begin MethodDeclaration
android.util.FloatMath$cos <type>float this <type>float # end MethodDeclaration
android.util.FloatMath$sqrt EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.util.FloatMath$sqrt <type>float this <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP EXP EXP EXP # begin Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP EXP <type>float <type>float # begin Block
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # Block
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix <type>float # Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # Block
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # Block
android.graphics.Path$transform @0 <type>android.graphics.Path <type>android.graphics.Matrix # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float # Block
android.graphics.Path$transform @0 <type>android.graphics.Path <type>android.graphics.Matrix # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix FIELD # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.Shader # begin Block
android.graphics.Matrix$set @0 <type>android.graphics.Matrix FIELD # end Block
android.graphics.Shader$setLocalMatrix @0 <type>android.graphics.Shader <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preTranslate @0 <type>android.graphics.Matrix FIELD FIELD # begin Block
android.graphics.RectF$width EXP <type>android.graphics.RectF # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.Matrix$preScale @0 <type>android.graphics.Matrix EXP EXP # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin Block
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>Float # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeCap @0 <type>android.graphics.Paint android.graphics.Paint.Cap.ROUND # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeCap @0 <type>android.graphics.Paint android.graphics.Paint.Cap.SQUARE # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeCap @0 <type>android.graphics.Paint android.graphics.Paint.Cap.BUTT # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeJoin @0 <type>android.graphics.Paint android.graphics.Paint.Join.MITER # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeJoin @0 <type>android.graphics.Paint android.graphics.Paint.Join.ROUND # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeJoin @0 <type>android.graphics.Paint android.graphics.Paint.Join.BEVEL # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # end Block
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint null # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setPathEffect @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setPathEffect @0 <type>android.graphics.Paint null # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # Block
android.graphics.Matrix$postConcat @0 <type>android.graphics.Matrix EXP # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 255 # begin MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 255 # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 255 # end MethodDeclaration
<END>
<S2>
<S1>
android.util.FloatMath$ceil <type>float this EXP # begin Block
android.util.FloatMath$ceil <type>float this EXP # Block
android.graphics.Picture$beginRecording <type>android.graphics.Canvas <type>android.graphics.Picture <type>float <type>float # Block
android.graphics.Canvas$save <type>Integer <type>android.graphics.Canvas # Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas 0f 0f <type>float <type>float # Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>Float <type>Float # end Block
<END>
<S2>
<S1>
android.util.FloatMath$ceil <type>int this EXP # begin Block
android.util.FloatMath$ceil <type>int this EXP # Block
android.graphics.Picture$beginRecording <type>android.graphics.Canvas <type>android.graphics.Picture <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>Float <type>Float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>Float <type>Float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>Float <type>Float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>Float <type>Float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>Float <type>Float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>Float <type>Float <type>Float <type>Float # begin Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>Float <type>Float <type>Float <type>Float <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint <type>Float # begin Block
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawOval @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawOval @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin end Block
android.graphics.Path$computeBounds @0 <type>android.graphics.Path <type>android.graphics.RectF false # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$close @0 <type>android.graphics.Path # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$computeBounds @0 <type>android.graphics.Path <type>android.graphics.RectF false # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas 0 EXP # end Block
<END>
<S2>
<S1>
android.graphics.Paint$measureText <type>Float <type>android.graphics.Paint <type>String # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>Float 0 # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String this.textX this.textY <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$setMatrix @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # begin Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String 0 0 <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Picture$endRecording @0 <type>android.graphics.Picture # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>Integer # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_listview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding null # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_BASE # begin MethodDeclaration
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_loading # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.CommitComment <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.github.pockethub.R.menu.commit_view <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ClipData$newPlainText <type>android.content.ClipData this "hash" FIELD # begin MethodDeclaration
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # MethodDeclaration
android.widget.Toast$makeText EXP this EXP com.github.pockethub.R.string.toast_msg_copied android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>com.github.pockethub.ui.StyledText # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_file_details_header null # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_commit_file_summary # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.footer_separator null # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.github.pockethub.ui.HeaderFooterListAdapter # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_header null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_commit_message # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.github.pockethub.R.id.ll_author # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.github.pockethub.R.id.iv_author # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_author # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_author_date # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.github.pockethub.R.id.ll_committer # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.github.pockethub.R.id.iv_committer # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_committer # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_commit_date # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.pockethub.R.layout.loading_item null # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.commit_diff_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # begin MethodDeclaration
android.app.AlertDialog$setCanceledOnTouchOutside @0 <type>android.app.AlertDialog true # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # end MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.view.View # begin end MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP EXP # begin MethodDeclaration
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>Object <type>android.widget.AdapterView <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>Object <type>android.widget.AdapterView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase "SELECT name FROM sqlite_master WHERE type IN (?, ?)" EXP # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$close @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$close @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin MethodDeclaration
android.database.sqlite.SQLiteStatement$executeUpdateDelete <type>int <type>android.database.sqlite.SQLiteStatement # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement <type>android.database.sqlite.SQLiteStatement <type>android.database.sqlite.SQLiteDatabase <type>String # begin MethodDeclaration
android.database.sqlite.SQLiteStatement$executeInsert <type>long <type>android.database.sqlite.SQLiteStatement # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase <type>String null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getDatabasePath <type>java.io.File <type>android.content.Context <type>String # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$openDatabase EXP this EXP null android.database.sqlite.SQLiteDatabase.OPEN_READWRITE # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeList @0 <type>android.os.Parcel this.pages # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 5 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst <type>boolean <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.sample_contacts_activity_item <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View android.R.id.text1 # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View android.R.id.icon # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor com.example.picasso.SampleContactsActivity.ContactsQuery.ID # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor com.example.picasso.SampleContactsActivity.ContactsQuery.LOOKUP_KEY # MethodDeclaration
android.provider.ContactsContract.Contacts$getLookupUri <type>android.net.Uri this EXP EXP # MethodDeclaration
android.view.View$getTag <type>ViewHolder <type>android.view.View # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor com.example.picasso.SampleContactsActivity.ContactsQuery.DISPLAY_NAME # end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$connect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$disconnect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # begin MethodDeclaration
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # MethodDeclaration
android.media.session.MediaController$getMetadata <type>android.media.MediaMetadata <type>android.media.session.MediaController # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getPlaybackState EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getBaseContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getApplicationContext EXP <type>android.support.v4.app.FragmentActivity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getChildFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.Fragment # begin Block
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # end Block
<END>
<S2>
<S1>
android.app.Activity$getApplicationContext EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$getChildFragmentManager <type>android.app.FragmentManager <type>android.app.Fragment # begin Block
android.app.Fragment$getActivity EXP <type>android.app.Fragment # end Block
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentByTag <type>RequestManagerFragment <type>android.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction EXP <type>android.app.FragmentManager # begin Block
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag <type>SupportRequestManagerFragment <type>android.support.v4.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin Block
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView null # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 2000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this EXP # begin MethodDeclaration
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this EXP # MethodDeclaration
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "PropertyValuesHolder" EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getCacheDir EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getFilesDir <type>java.io.File <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getCacheDir EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay <type>android.view.Display <type>android.view.WindowManager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Display$getSize @0 <type>android.view.Display <type>android.graphics.Point # begin end Block
<END>
<S2>
<S1>
android.view.Display$getWidth <type>int <type>android.view.Display # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.haarman.listviewanimations.R.string.expandorcollapsecard EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getAdapter <type>SessionAdapter <type>android.widget.AdapterView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.map_info_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.map_info_subtitle # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.map_info_icon # MethodDeclaration
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View com.google.samples.apps.iosched.R.id.map_info_list # MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView <type>android.widget.AdapterView.OnItemClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor com.google.samples.apps.iosched.map.util.SingleSessionLoader.Query.SESSION_ABSTRACT # MethodDeclaration
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.app.LoaderManager$restartLoader @0 <type>android.app.LoaderManager <type>int <type>android.os.Bundle this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>ItemHolder # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_ID # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ItemHolder <type>android.view.View # begin end MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor com.google.samples.apps.iosched.map.util.OverviewSessionLoader.Query.SESSION_TITLE # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor com.google.samples.apps.iosched.map.util.OverviewSessionLoader.Query.SESSION_ID # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor com.google.samples.apps.iosched.map.util.OverviewSessionLoader.Query.SESSION_START # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor com.google.samples.apps.iosched.map.util.OverviewSessionLoader.Query.SESSION_END # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor com.google.samples.apps.iosched.map.util.OverviewSessionLoader.Query.SESSION_TAGS # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>ItemHolder # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.map_item_title # begin MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.map_item_text # MethodDeclaration
android.view.View$findViewById FIELD <type>android.view.View com.google.samples.apps.iosched.R.id.map_item_image # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION # begin TryBlock
android.content.Intent$setPackage @0 <type>android.content.Intent <type>String # TryBlock
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_STREAM FIELD # TryBlock
android.content.Intent$setType @0 <type>android.content.Intent FIELD # end TryBlock
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # end Block
<END>
<S2>
<S1>
android.content.Intent$getCategories <type>java.util.Set <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.app.Activity$getIntent <type>android.content.Intent <type>android.app.Activity # begin MethodDeclaration
android.content.Intent$getCategories <type>java.util.Set <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setResult @0 <type>android.app.Activity android.app.Activity.RESULT_CANCELED null # begin Block
android.app.Activity$finish @0 <type>android.app.Activity # end Block
<END>
<S2>
<S1>
android.content.Intent$setDataAndType @0 <type>android.content.Intent FIELD FIELD # begin Block
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # Block
android.app.Activity$setResult @0 <type>android.app.Activity android.app.Activity.RESULT_OK <type>android.content.Intent # Block
android.app.Activity$finish @0 <type>android.app.Activity # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String MessengerUtils.PROTOCOL_VERSION_20150314 # begin Block
android.os.Bundle$getString <type>String <type>android.os.Bundle MessengerUtils.EXTRA_THREAD_TOKEN_KEY # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # end Block
<END>
<S2>
<S1>
android.app.Activity$setResult @0 <type>android.app.Activity android.app.Activity.RESULT_CANCELED null # begin Block
android.app.Activity$finish @0 <type>android.app.Activity # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri <type>String null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor "version" # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getInt <type>int <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin Block
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createScaledBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap <type>int <type>int true # begin Block
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "clearing cache" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getScaleType <type>android.widget.ImageView.ScaleType <type>android.widget.ImageView # begin MethodDeclaration
android.util.Log$w @0 this <type>String EXP # MethodDeclaration
android.widget.ImageView.ScaleType$ordinal EXP <type>android.widget.ImageView.ScaleType # MethodDeclaration
android.util.Log$w @0 this <type>String EXP # MethodDeclaration
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView <type>android.widget.ImageView.ScaleType # MethodDeclaration
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView <type>android.widget.ImageView.ScaleType # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "reloading" # begin MethodDeclaration
android.widget.ImageView$getScaleType EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>List <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this ", " <type>Set # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin end TryBlock
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.RingtoneManager$getDefaultUri <type>android.net.Uri this android.media.RingtoneManager.TYPE_RINGTONE # begin MethodDeclaration
android.media.RingtoneManager$getRingtone EXP this EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.media.RingtoneManager$getDefaultUri <type>android.net.Uri this android.media.RingtoneManager.TYPE_NOTIFICATION # begin MethodDeclaration
android.media.RingtoneManager$getRingtone EXP this EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.media.RingtoneManager$getDefaultUri <type>android.net.Uri this android.media.RingtoneManager.TYPE_ALARM # begin MethodDeclaration
android.media.RingtoneManager$getRingtone EXP this EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.media.Ringtone$stop @0 <type>android.media.Ringtone # begin end IfTrue
<END>
<S2>
<S1>
android.media.Ringtone$play @0 <type>android.media.Ringtone # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path 0 <type>int # MethodDeclaration
android.graphics.Path$quadTo @0 <type>android.graphics.Path EXP EXP EXP <type>int # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP 0 # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "jellyHeight" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$changeCursor @0 <type>android.support.v4.widget.CursorAdapter null # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__search_view this true # begin ConstructorDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # ConstructorDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView <type>OnClickListener # ConstructorDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # ConstructorDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # end ConstructorDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSearchView_iconifiedByDefault true # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSearchView_android_maxWidth EXP # end ConstructorDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSearchView_queryHint # begin end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSearchView_android_imeOptions EXP # begin end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSearchView_android_inputType EXP # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockView_android_focusable <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # ConstructorDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_LANGUAGE_MODEL android.speech.RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH # ConstructorDeclaration
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$addOnLayoutChangeListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getHintId <type>int <type>android.app.SearchableInfo # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$setQueryRefinement @0 <type>android.support.v4.widget.CursorAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBackground EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getBackground EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$cancelLongPress @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder <type>CharSequence # begin MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # MethodDeclaration
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP 1 2 android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # end MethodDeclaration
<END>
<S2>
<S1>
android.app.SearchableInfo$getHintId <type>int <type>android.app.SearchableInfo # begin end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getSuggestThreshold EXP <type>android.app.SearchableInfo # begin MethodDeclaration
android.app.SearchableInfo$getImeOptions EXP <type>android.app.SearchableInfo # MethodDeclaration
android.app.SearchableInfo$getInputType <type>int <type>android.app.SearchableInfo # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$changeCursor @0 <type>android.support.v4.widget.CursorAdapter null # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$setQueryRefinement @0 <type>android.support.v4.widget.CursorAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View GONE # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$setClassName @0 <type>android.view.accessibility.AccessibilityEvent EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityNodeInfo$setClassName @0 <type>android.view.accessibility.AccessibilityNodeInfo EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>int <type>android.view.View # begin Block
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources com.actionbarsherlock.R.dimen.abs__dropdownitem_icon_width # Block
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources com.actionbarsherlock.R.dimen.abs__dropdownitem_text_padding_left # Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onNothingSelected()" # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$getCursor <type>android.database.Cursor <type>android.support.v4.widget.CursorAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$convertToString <type>CharSequence <type>android.support.v4.widget.CursorAdapter <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.CursorAdapter$getCursor <type>android.database.Cursor <type>android.support.v4.widget.CursorAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin end MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.USER_QUERY <type>CharSequence # begin end MethodDeclaration
android.app.SearchableInfo$getSearchActivity EXP <type>android.app.SearchableInfo # begin MethodDeclaration
android.content.Intent$setComponent @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.QUERY <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.EXTRA_DATA_KEY <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.APP_DATA <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.ACTION_KEY <type>int # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent android.app.SearchManager.ACTION_MSG <type>String # end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getSearchActivity <type>android.content.ComponentName <type>android.app.SearchableInfo # begin MethodDeclaration
android.content.ComponentName$flattenToShortString EXP <type>android.content.ComponentName # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_CALLING_PACKAGE EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.SearchableInfo$getSearchActivity <type>android.content.ComponentName <type>android.app.SearchableInfo # begin MethodDeclaration
android.content.Intent$setComponent @0 <type>android.content.Intent <type>android.content.ComponentName # MethodDeclaration
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this EXP 0 <type>android.content.Intent android.app.PendingIntent.FLAG_ONE_SHOT # end MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_LANGUAGE_MODEL <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_PROMPT <type>String # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_LANGUAGE <type>String # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_MAX_RESULTS <type>int # MethodDeclaration
android.content.ComponentName$flattenToShortString EXP <type>android.content.ComponentName # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_CALLING_PACKAGE EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT <type>android.app.PendingIntent # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.speech.RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.app.SearchableInfo$getVoiceLanguageModeId EXP <type>android.app.SearchableInfo # begin Block
android.content.res.Resources$getString <type>String <type>android.content.res.Resources EXP # end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getVoicePromptTextId EXP <type>android.app.SearchableInfo # begin Block
android.content.res.Resources$getString <type>String <type>android.content.res.Resources EXP # end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getVoiceLanguageId EXP <type>android.app.SearchableInfo # begin Block
android.content.res.Resources$getString <type>String <type>android.content.res.Resources EXP # end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getVoiceMaxResults <type>int <type>android.app.SearchableInfo # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.app.SearchableInfo$getSuggestIntentAction <type>String <type>android.app.SearchableInfo # begin end Block
<END>
<S2>
<S1>
android.app.SearchableInfo$getSuggestIntentData <type>String <type>android.app.SearchableInfo # begin end Block
<END>
<S2>
<S1>
android.net.Uri$encode EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$getDeclaredMethod <type>java.lang.reflect.Method this "doBeforeTextChanged" # begin TryBlock
android.widget.AutoCompleteTextView$getDeclaredMethod <type>java.lang.reflect.Method this "doAfterTextChanged" # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$getTrimmedLength EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.inputmethod.InputMethodManager$showSoftInput @0 <type>android.view.inputmethod.InputMethodManager this 0 # begin end Block
<END>
<S2>
<S1>
android.view.KeyEvent.DispatcherState$startTracking @0 <type>android.view.KeyEvent.DispatcherState <type>android.view.KeyEvent this # begin end Block
<END>
<S2>
<S1>
android.view.KeyEvent.DispatcherState$handleUpEvent @0 <type>android.view.KeyEvent.DispatcherState <type>android.view.KeyEvent # begin end Block
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$getMethod <type>java.lang.reflect.Method this "ensureImeVisible" boolean # begin end TryBlock
<END>
<S2>
<S1>
android.view.inputmethod.InputMethodManager$getClass EXP <type>android.view.inputmethod.InputMethodManager # begin end TryBlock
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$getMethod <type>java.lang.reflect.Method this "setText" CharSequence boolean # begin end TryBlock
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SimpleThreadingExample.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.painter # begin MethodDeclaration
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card=" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Card removed" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_googlenow_main_inner_lastupdate # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.view.View$findViewById <type>it.gmariotti.cardslib.demo.stock.StockListLayout <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_googlenow_main_inner_list # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.icon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_icon # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # ConstructorDeclaration
android.view.View$findViewById this.description <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_description # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getName EXP this # begin ConstructorDeclaration
android.support.v4.app.FragmentManager$getName EXP this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView EXP <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag EXP <type>android.support.v4.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$get EXP <type>android.support.v4.util.LruCache <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$put @0 <type>android.support.v4.util.LruCache <type>String <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$evictAll @0 <type>android.support.v4.util.LruCache # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.media.MediaMetadataRetriever$getFrameAtTime EXP <type>android.media.MediaMetadataRetriever # MethodDeclaration
android.os.ParcelFileDescriptor$getFileDescriptor EXP <type>android.os.ParcelFileDescriptor # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$animate <type>android.view.ViewPropertyAnimator <type>android.view.View # begin end ConstructorDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View EXP # begin ConstructorDeclaration
android.view.View$findViewById EXP <type>android.view.View EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin MethodDeclaration
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # MethodDeclaration
android.view.View$getResources EXP <type>android.view.View # MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable EXP # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1 # begin end Block
<END>
<S2>
<S1>
android.view.ViewPropertyAnimator$cancel @0 <type>android.view.ViewPropertyAnimator # begin Block
android.view.ViewPropertyAnimator$alpha EXP <type>android.view.ViewPropertyAnimator 1 # Block
android.view.View$getResources EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.ViewPropertyAnimator$cancel @0 <type>android.view.ViewPropertyAnimator # begin Block
android.view.ViewPropertyAnimator$alpha EXP <type>android.view.ViewPropertyAnimator 1 # Block
android.view.View$getResources EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setAlpha @0 <type>android.view.View 0 # end Block
<END>
<S2>
<S1>
android.view.ViewPropertyAnimator$cancel @0 <type>android.view.ViewPropertyAnimator # begin end Block
<END>
<S2>
<S1>
android.view.ViewPropertyAnimator$alpha EXP <type>android.view.ViewPropertyAnimator 0 # begin Block
android.view.View$getResources EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewPropertyAnimator$alpha EXP <type>android.view.ViewPropertyAnimator 0 # begin Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.View$getResources EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle "undo_message" <type>CharSequence # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "undo_token" <type>android.os.Parcelable # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getCharSequence <type>CharSequence <type>android.os.Bundle "undo_message" # begin Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle "undo_token" # end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$setTranslationY @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getQuantityString EXP <type>android.content.res.Resources it.gmariotti.cardslib.library.R.plurals.list_card_undo_items FIELD FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$get <type>java.util.List <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>java.util.List <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>java.util.List # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>int <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin SwitchCase
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getResources EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getResources EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getDeclaredField <type>java.lang.reflect.Field this "mSelectorRect" # begin end TryBlock
<END>
<S2>
<S1>
android.widget.AbsListView$getDeclaredField <type>java.lang.reflect.Field this "mSelectorPosition" # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$getClipBounds <type>android.graphics.Rect <type>android.graphics.Canvas # Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this ", " <type>String # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas 45 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP 7.5f 10 <type>android.graphics.Paint # end MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP 6.5f 9 <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth FIELD <type>android.graphics.Canvas # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$getHeight FIELD <type>android.graphics.Canvas # begin end IfTrue
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis FIELD this # begin end IfTrue
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>long # begin Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas FIELD null EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>long # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>long # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$getClipBounds <type>android.graphics.Rect <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas FIELD null EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.RED # begin Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0x80 # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas FIELD <type>android.graphics.Rect <type>android.graphics.Rect <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas FIELD null <type>android.graphics.Rect <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.RED # begin Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0x80 # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect <type>android.graphics.Paint # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getResources EXP <type>android.widget.ImageView # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.PointF$set @0 <type>android.graphics.PointF <type>android.graphics.PointF # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas EXP # Block
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>int <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin Block
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.fragment EXP FragmentTransitionDefaultFragment.FRAGMENT_TAG # Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # Block
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$height EXP <type>android.graphics.RectF # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix 1.4f 1.4f <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix 0.7f 0.7f <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$getValues @0 <type>android.graphics.Matrix <type>float # MethodDeclaration
android.graphics.Matrix$setValues @0 <type>android.graphics.Matrix <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$invalidate @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Matrix$getValues @0 <type>android.graphics.Matrix <type>float # begin end MethodDeclaration
android.graphics.Matrix$setValues @0 <type>android.graphics.Matrix <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width <type>float <type>android.graphics.RectF # begin Block
android.graphics.RectF$height <type>float <type>android.graphics.RectF # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "index" 0 # begin MethodDeclaration
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "top" 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.widget.ListView$getFirstVisiblePosition EXP <type>android.widget.ListView # MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "index" EXP # MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "top" EXP # MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "test" <type>String # MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>Sample # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.activity_sharedelement_fragment1 <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.square_blue # MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this EXP FIELD # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.sample2_button1 # end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.sample2_button2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Slide$setDuration @0 <type>android.transition.Slide EXP # begin MethodDeclaration
android.transition.ChangeBounds$setDuration @0 <type>android.transition.ChangeBounds EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.detail_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.quote_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "This action provided by the QuoteFragment" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "This action is also provided by the QuoteFragment" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBitmap EXP <type>android.graphics.drawable.BitmapDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent <type>String false # begin end Block
android.appwidget.AppWidgetManager$getInstance <type>android.appwidget.AppWidgetManager this <type>android.content.Context # begin Block
android.appwidget.AppWidgetManager$getAppWidgetIds EXP <type>android.appwidget.AppWidgetManager <type>android.content.ComponentName # Block
android.appwidget.AppWidgetManager$notifyAppWidgetViewDataChanged @0 <type>android.appwidget.AppWidgetManager EXP com.google.samples.apps.iosched.R.id.widget_schedule_list # end Block
<END>
<S2>
<S1>
android.app.Activity$getContentResolver EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.LoaderManager$initLoader @0 <type>android.app.LoaderManager EXP null this # begin end Block
<END>
<S2>
<S1>
android.content.Loader$getId EXP <type>android.content.Loader # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.app.LoaderManager$restartLoader @0 <type>android.app.LoaderManager <type>Object <type>android.os.Bundle this # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.ForegroundLinearLayout_android_foregroundGravity <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.ForegroundLinearLayout_android_foreground # end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.ForegroundLinearLayout_android_foregroundInsidePadding true # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # Block
android.view.Gravity$apply @0 this <type>int EXP EXP <type>android.graphics.Rect <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setHotspot @0 <type>android.graphics.drawable.Drawable <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP EXP <type>int <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getRight <type>int <type>android.view.View # end Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int EXP <type>int <type>int <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>byte EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$rgb EXP this <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent com.github.pockethub.Intents.EXTRA_REPOSITORY_OWNER # begin MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent com.github.pockethub.Intents.EXTRA_REPOSITORY_NAME # end MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # begin MethodDeclaration
android.content.Intent$getParcelableExtra EXP <type>android.content.Intent com.github.pockethub.Intents.EXTRA_USER # end MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText FIELD # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Issue <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>com.alorma.github.sdk.bean.dto.response.Issue <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end IfFalse
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.new_issue # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.none # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.unassigned # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView com.github.pockethub.R.string.none # begin end IfFalse
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_ISSUE <type>com.alorma.github.sdk.bean.dto.response.Issue # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end IfTrue
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>CharSequence # begin IfTrue
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # end IfTrue
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_apply # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin SwitchCase
android.widget.EditText$getText EXP <type>android.widget.EditText # end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE <type>com.alorma.github.sdk.bean.dto.response.Issue # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.Intents.EXTRA_ISSUE <type>com.alorma.github.sdk.bean.dto.response.Issue # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_2wayview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_image_ic_staggered # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_image_ic_spannable # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_image_ic_grid # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_image_ic_list # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.onClickStaggered # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.onClickList # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.onClickSpannable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin MethodDeclaration
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction it.gmariotti.cardslib.demo.extras.R.id.fragment_main_extras <type>BaseFragment # MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Change Color" # begin MethodDeclaration
android.widget.Button$setLayoutParams @0 <type>android.widget.Button EXP # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button "New Window" # MethodDeclaration
android.widget.Button$setLayoutParams @0 <type>android.widget.Button EXP # MethodDeclaration
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.Button # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.Button # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this "WindowedTest" "destroying" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "image/*" # begin MethodDeclaration
android.content.Intent$setAction @0 <type>android.content.Intent android.content.Intent.ACTION_GET_CONTENT # MethodDeclaration
android.content.Intent$addCategory @0 <type>android.content.Intent android.content.Intent.CATEGORY_OPENABLE # MethodDeclaration
android.content.Intent$createChooser <type>android.content.Intent this <type>android.content.Intent null # MethodDeclaration
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MultiDrawerActivity.this "onDrawerOpened" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MultiDrawerActivity.this "onDrawerClosed" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MultiDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MultiDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle ErrorDialogManager.KEY_TITLE # begin MethodDeclaration
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder EXP # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ErrorDialogManager.KEY_MESSAGE # MethodDeclaration
android.app.AlertDialog.Builder$setMessage @0 <type>android.app.AlertDialog.Builder EXP # end MethodDeclaration
android.app.AlertDialog.Builder$setPositiveButton @0 <type>android.app.AlertDialog.Builder android.R.string.ok <type>android.content.DialogInterface.OnClickListener # begin MethodDeclaration
android.app.AlertDialog.Builder$create EXP <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setIcon @0 <type>android.app.AlertDialog.Builder <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle ErrorDialogManager.KEY_FINISH_AFTER_DIALOG false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.widget.Checkable$setChecked @0 <type>android.widget.Checkable true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Checkable$setChecked @0 <type>android.widget.Checkable true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin Block
android.widget.Toast$makeText EXP this EXP R.string.position_locked android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin Block
android.widget.Toast$makeText EXP this EXP R.string.nothing_selected android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View R.drawable.selected_icon_background # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View R.drawable.choice_icon_background # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView R.drawable.locked_icon_background # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView R.drawable.default_icon_background # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView R.drawable.valid_icon_background # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView R.drawable.invalid_icon_background # begin end Block
<END>
<S2>
<S1>
android.view.View$inflate <type>android.widget.ImageView this <type>android.content.Context R.layout.choice_cell null # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$inflate <type>android.widget.ImageView this <type>android.content.Context R.layout.grid_cell null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this this # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # MethodDeclaration
android.content.Intent$getBooleanExtra <type>Boolean <type>android.content.Intent <type>String false # MethodDeclaration
android.widget.AutoCompleteTextView$setAdapter @0 <type>android.widget.AutoCompleteTextView EXP # end MethodDeclaration
android.widget.EditText$setOnKeyListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin MethodDeclaration
android.widget.AutoCompleteTextView$addTextChangedListener @0 <type>android.widget.AutoCompleteTextView <type>android.text.TextWatcher # MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText <type>android.text.TextWatcher # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager "com.google" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$length EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog EXP # begin MethodDeclaration
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog true # MethodDeclaration
android.app.ProgressDialog$setCancelable @0 <type>android.app.ProgressDialog true # end MethodDeclaration
android.app.ProgressDialog$setOnCancelListener @0 <type>android.app.ProgressDialog EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$getText EXP <type>android.widget.AutoCompleteTextView # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$setPassword @0 <type>android.accounts.AccountManager <type>android.accounts.Account <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_BOOLEAN_RESULT <type>boolean # MethodDeclaration
android.content.Intent$getExtras EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_NAME <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_TYPE com.donnfelker.android.bootstrap.core.Constants.Auth.BOOTSTRAP_ACCOUNT_TYPE # end MethodDeclaration
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$addAccountExplicitly @0 <type>android.accounts.AccountManager <type>android.accounts.Account <type>String null # begin Block
android.accounts.AccountManager$setAuthToken @0 <type>android.accounts.AccountManager <type>android.accounts.Account com.donnfelker.android.bootstrap.core.Constants.Auth.BOOTSTRAP_ACCOUNT_TYPE <type>String # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$setPassword @0 <type>android.accounts.AccountManager <type>android.accounts.Account <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_AUTHTOKEN <type>String # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimension <type>int <type>android.content.res.TypedArray R.styleable.card_bottomMarginTop <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>int <type>android.content.res.TypedArray R.styleable.card_yOffsetStep <type>int # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.card_left_btn # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.card_right_btn # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # begin MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setScaleX @0 <type>android.view.View <type>float # MethodDeclaration
android.view.View$setScaleY @0 <type>android.view.View <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getActionMasked <type>int <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int EXP # end Block
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin Block
android.view.View$setScaleX @0 <type>android.view.View <type>float # Block
android.view.View$setScaleY @0 <type>android.view.View <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment <type>String <type>android.net.Uri # begin MethodDeclaration
android.content.Context$getContentResolver EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment <type>String <type>android.net.Uri # begin MethodDeclaration
android.content.Context$getContentResolver EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # begin Block
android.support.v4.view.ViewPager$setLocked @0 <type>android.support.v4.view.ViewPager <type>boolean # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>uk.co.senab.photoview.PhotoView android.view.ViewGroup.LayoutParams.MATCH_PARENT android.view.ViewGroup.LayoutParams.MATCH_PARENT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu R.id.menu_lock # begin end MethodDeclaration
android.view.MenuItem$setOnMenuItemClickListener @0 <type>android.view.MenuItem EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$toggleLock @0 <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$isLocked <type>boolean <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem <type>String # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$isLocked EXP <type>android.support.v4.view.ViewPager # begin Block
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # end Block
<END>
<S2>
<S1>
android.view.View$getContext <type>android.content.Context <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.TouchUtils$touchAndCancelView @0 this this <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception creating comment on gist" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
android.database.Cursor$close @0 <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor SessionsCounterQuery.SESSION_INTERVAL_START # begin Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor SessionsCounterQuery.SESSION_INTERVAL_COUNT # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.os.AsyncTask$executeOnExecutor @0 <type>android.os.AsyncTask android.os.AsyncTask.THREAD_POOL_EXECUTOR <type>long <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor SessionsQuery.SESSION_ID # begin Block
android.database.Cursor$getString FIELD <type>android.database.Cursor SessionsQuery.SESSION_TITLE # Block
android.database.Cursor$getLong FIELD <type>android.database.Cursor SessionsQuery.SESSION_START # Block
android.database.Cursor$getLong FIELD <type>android.database.Cursor SessionsQuery.SESSION_END # end Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionsQuery.ROOM_ROOM_NAME # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionsQuery.SESSION_SPEAKER_NAMES # Block
android.database.Cursor$getString FIELD <type>android.database.Cursor SessionsQuery.ROOM_ROOM_NAME # Block
android.database.Cursor$getString FIELD <type>android.database.Cursor SessionsQuery.SESSION_PHOTO_URL # Block
android.database.Cursor$getInt FIELD <type>android.database.Cursor SessionsQuery.SESSION_COLOR # Block
android.database.Cursor$getInt EXP <type>android.database.Cursor SessionsQuery.HAS_GIVEN_FEEDBACK # Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionsQuery.SESSION_TAGS # Block
android.database.Cursor$getString FIELD <type>android.database.Cursor SessionsQuery.SESSION_MAIN_TAG # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor BlocksQuery.BLOCK_TYPE # begin Block
android.database.Cursor$getString FIELD <type>android.database.Cursor BlocksQuery.BLOCK_TITLE # Block
android.database.Cursor$getString EXP <type>android.database.Cursor BlocksQuery.BLOCK_SUBTITLE # Block
android.database.Cursor$getLong FIELD <type>android.database.Cursor BlocksQuery.BLOCK_START # Block
android.database.Cursor$getLong FIELD <type>android.database.Cursor BlocksQuery.BLOCK_END # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Activity "Your evil remote control has exploded! Now Astroboy is FREEEEEEEEEE!" android.widget.Toast.LENGTH_LONG # begin MethodDeclaration
android.app.Activity$finish @0 <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin Block
android.os.ParcelFileDescriptor$open <type>android.os.ParcelFileDescriptor this EXP android.os.ParcelFileDescriptor.MODE_READ_ONLY # Block
android.os.ParcelFileDescriptor$getStatSize <type>long <type>android.os.ParcelFileDescriptor # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String uploadContext.videoSize # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String uploadContext.sessionId # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle <type>String <type>byte # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String uploadContext.sessionId # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putAll @0 <type>android.os.Bundle uploadContext.params # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v7.app.ActionBarDrawerToggle # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v7.app.ActionBarDrawerToggle # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onConfigurationChanged @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.content.res.Configuration # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.morristaedt.mirror.R.string.dark_sky_api_key # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet R.styleable.CropView # begin MethodDeclaration
android.content.res.TypedArray$getFloat EXP <type>android.content.res.TypedArray R.styleable.CropView_cropviewViewportHeightRatio CropViewConfig.DEFAULT_VIEWPORT_HEIGHT_RATIO # MethodDeclaration
android.content.res.TypedArray$getFloat EXP <type>android.content.res.TypedArray R.styleable.CropView_cropviewMaxScale CropViewConfig.DEFAULT_MAXIMUM_SCALE # MethodDeclaration
android.content.res.TypedArray$getFloat EXP <type>android.content.res.TypedArray R.styleable.CropView_cropviewMinScale CropViewConfig.DEFAULT_MINIMUM_SCALE # MethodDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.CropView_cropviewViewportHeaderFooterColor CropViewConfig.DEFAULT_VIEWPORT_HEADER_FOOTER_COLOR # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin IfTrue
android.view.MenuItem$setEnabled @0 <type>android.view.MenuItem EXP # end IfTrue
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.Intents.EXTRA_COMMENT <type>com.alorma.github.sdk.bean.dto.response.GithubComment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_apply # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar it.gmariotti.cardslib.demo.R.drawable.ic_up21 # begin end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>android.databinding.ViewDataBinding this this org.bookdash.android.R.layout.activity_book_information # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.databinding.ViewDataBinding$setVariable @0 <type>android.databinding.ViewDataBinding org.bookdash.android.BR.download_click EXP # begin end MethodDeclaration
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Setting image height" # begin Block
android.widget.ImageView$getLayoutParams <type>android.support.design.widget.CollapsingToolbarLayout.LayoutParams <type>android.widget.ImageView # Block
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.support.design.widget.CollapsingToolbarLayout.LayoutParams # Block
android.support.design.widget.AppBarLayout$getLayoutParams <type>android.support.design.widget.CoordinatorLayout.LayoutParams <type>android.support.design.widget.AppBarLayout # Block
android.support.design.widget.AppBarLayout$setLayoutParams @0 <type>android.support.design.widget.AppBarLayout <type>android.support.design.widget.CoordinatorLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.support.v7.widget.CardView$setVisibility @0 <type>android.support.v7.widget.CardView android.view.View.VISIBLE # begin MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # MethodDeclaration
android.support.design.widget.CoordinatorLayout$setVisibility @0 <type>android.support.design.widget.CoordinatorLayout android.view.View.VISIBLE # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.Snackbar$make EXP this <type>android.view.View <type>int android.support.design.widget.Snackbar.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Download finished" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar <type>String # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.CollapsingToolbarLayout$setTitle @0 <type>android.support.design.widget.CollapsingToolbarLayout <type>String # begin end Block
<END>
<S2>
<S1>
android.databinding.ViewDataBinding$setVariable @0 <type>android.databinding.ViewDataBinding org.bookdash.android.BR.book_info <type>org.bookdash.android.domain.pojo.BookDetail # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent org.bookdash.android.presentation.readbook.BookDetailActivity.BOOK_PAGES <type>org.bookdash.android.domain.pojo.gson.BookPages # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent org.bookdash.android.presentation.readbook.BookDetailActivity.BOOK_ARG EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent org.bookdash.android.presentation.readbook.BookDetailActivity.LOCATION_BOOK <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.CardView$setVisibility @0 <type>android.support.v7.widget.CardView android.view.View.VISIBLE # begin MethodDeclaration
android.widget.LinearLayout$removeAllViews @0 <type>android.widget.LinearLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.CardView$setVisibility @0 <type>android.support.v7.widget.CardView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$addFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS # begin Block
android.view.Window$clearFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS # Block
android.view.Window$setStatusBarColor @0 <type>android.view.Window <type>int # end Block
<END>
<S2>
<S1>
android.support.design.widget.CollapsingToolbarLayout$setStatusBarScrimColor @0 <type>android.support.design.widget.CollapsingToolbarLayout <type>int # begin Block
android.support.design.widget.CollapsingToolbarLayout$setContentScrimColor @0 <type>android.support.design.widget.CollapsingToolbarLayout <type>int # end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setBackgroundDrawable @0 <type>android.support.v7.app.ActionBar EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # begin Block
android.graphics.drawable.GradientDrawable$setAlpha @0 <type>android.graphics.drawable.GradientDrawable 140 # Block
android.view.View$setBackground @0 <type>android.view.View <type>android.graphics.drawable.GradientDrawable # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View org.bookdash.android.R.id.textViewContributorName # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View org.bookdash.android.R.id.textViewRole # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View org.bookdash.android.R.id.imageViewContributorAvatar # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "We've got data in data." # begin Block
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 FIELD # Block
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "There was a problem downloading the data." # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 40 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.graphics.Color$rgb EXP this 122 242 84 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.fragment_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Very popular with..." # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar 4.7f # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getResources EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin Block
android.view.View$getLayoutParams EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_birth1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.text_birth2 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin Block
android.support.v7.app.ActionBar$setHomeButtonEnabled @0 <type>android.support.v7.app.ActionBar true # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this this # begin MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout EXP # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setAutoLinkMask @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.text.Html$fromHtml EXP this <type>String # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int EXP # MethodDeclaration
android.widget.LinearLayout.LayoutParams$setMargins @0 <type>android.widget.LinearLayout.LayoutParams 0 <type>int 0 <type>int # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.divider <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager EXP android.content.pm.PackageManager.GET_META_DATA # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "com.example.android.apis.Path" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent "com.actionbarsherlock.sample.fragments.EXAMPLE" # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel <type>CharSequence <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setClassName @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this SampleList # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "com.example.android.apis.Path" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>java.util.Map <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Signature verification failed." # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin TryBlock
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP EXP # end TryBlock
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this 237 91 91 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#FFFFFF" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeValue <type>String <type>android.util.AttributeSet ANDROIDXML "background" # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$checkCallingOrSelfPermission <type>int <type>android.content.Context "android.permission.ACCESS_NETWORK_STATE" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$centerX EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$centerY EXP <type>android.graphics.Rect # Block
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix <type>int EXP EXP # Block
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # Block
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.Rect # Block
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable FIELD FIELD FIELD FIELD # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.flickr_photo_grid <type>android.view.ViewGroup false # MethodDeclaration
android.view.View$findViewById <type>android.support.v7.widget.RecyclerView <type>android.view.View R.id.flickr_photo_grid # MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.GridLayoutManager # end MethodDeclaration
android.support.v7.widget.RecyclerView$addItemDecoration @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
android.support.v7.widget.RecyclerView$setRecyclerListener @0 <type>android.support.v7.widget.RecyclerView EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$getRecycledViewPool EXP <type>android.support.v7.widget.RecyclerView # MethodDeclaration
android.support.v7.widget.RecyclerView$setItemViewCacheSize @0 <type>android.support.v7.widget.RecyclerView 0 # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>PhotoAdapter # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.support.v7.widget.RecyclerView$scrollToPosition @0 <type>android.support.v7.widget.RecyclerView <type>int # end Block
<END>
<S2>
<S1>
android.support.v7.widget.GridLayoutManager$findFirstVisibleItemPosition <type>int <type>android.support.v7.widget.GridLayoutManager # begin Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from this.inflater this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.flickr_photo_grid_item <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent 0 <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getY <type>float <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View EXP # begin Block
android.view.View$setAlpha @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.animation.ValueAnimator$ofInt EXP this <type>int 1 # end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1f # begin MethodDeclaration
android.view.View$setTranslationY @0 <type>android.view.View 0 # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences <type>String 0L # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences <type>String 0L # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences <type>String 0L # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "creating OpenGL ES 2.0 context" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$setTitle @0 <type>android.app.ProgressDialog "Loading..." # begin MethodDeclaration
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog false # MethodDeclaration
android.app.ProgressDialog$setProgressStyle @0 <type>android.app.ProgressDialog android.app.ProgressDialog.STYLE_HORIZONTAL # MethodDeclaration
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$cancel @0 <type>android.app.ProgressDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end Block
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabListViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin MethodDeclaration
android.graphics.Color$rgb EXP this 240 240 240 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas EXP # end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG "Preparing... DATA NOT SET." # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG "Preparing..." # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin Block
android.util.Log$i @0 this LOG_TAG EXP # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this LOG_TAG "Can't select by touch. No data set." # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.ParallaxScrimageView_scrimColor <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ParallaxScrimageView_scrimAlpha <type>float # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ParallaxScrimageView_maxScrimAlpha <type>float # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.ParallaxScrimageView_parallaxFactor <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin Block
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas 0f <type>int # Block
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas 0f 0f EXP EXP # Block
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 EXP EXP <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_changevalue <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.changevalue <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_title # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_memeber # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_subtitle # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_community # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_title # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_member # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_subtitle # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_community # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "/" # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "/foo" # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "/foo/bar" # begin end TryBlock
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$close @0 <type>android.os.ParcelFileDescriptor # begin end TryBlock
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$close @0 <type>android.os.ParcelFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$equals EXP this <type>String FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.list_item_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder <type>String # begin MethodDeclaration
android.database.sqlite.SQLiteOpenHelper$getReadableDatabase EXP <type>android.database.sqlite.SQLiteOpenHelper # MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query EXP <type>android.database.sqlite.SQLiteQueryBuilder EXP <type>String <type>String <type>String null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception adding issue filter" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception removing issue filter" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_storehouse_header null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_image # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_stock_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.sharemenu <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu it.gmariotti.cardslib.demo.R.id.carddemo_menu_item_share # MethodDeclaration
android.view.MenuItem$getActionProvider <type>android.widget.ShareActionProvider <type>android.view.MenuItem # MethodDeclaration
android.widget.ShareActionProvider$setShareIntent @0 <type>android.widget.ShareActionProvider EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "image/*" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.jcodecraeer.xrecyclerview.R.styleable.AVLoadingIndicatorView_indicator <type>int # begin MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.jcodecraeer.xrecyclerview.R.styleable.AVLoadingIndicatorView_indicator_color android.graphics.Color.WHITE # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "No Initial Reading Available" # begin end Block
<END>
<S2>
<S1>
android.location.Location$getAccuracy <type>float <type>android.location.Location # begin Block
android.location.Location$getTime <type>long <type>android.location.Location # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Disconnected. Try again later." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Connection Failed. Try again later." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$getAccuracy EXP <type>android.location.Location # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getTime EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getLongitude EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getLatitude EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_search # begin MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionView <type>android.support.v7.widget.SearchView this <type>android.view.MenuItem # MethodDeclaration
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # MethodDeclaration
android.support.v7.widget.SearchView$setSearchableInfo @0 <type>android.support.v7.widget.SearchView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent android.app.SearchManager.QUERY # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag <type>SearchRepositoryListFragment <type>android.support.v4.app.FragmentManager EXP # begin Block
android.support.v4.app.FragmentManager$findFragmentByTag <type>SearchUserListFragment <type>android.support.v4.app.FragmentManager EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri "page" # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.daimajia.swipedemo.R.id.position # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_CUSTOM_ACTION_SHOW_ON_WEAR true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_CUSTOM_ACTION_SHOW_ON_WEAR # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_BACKGROUND_COLOR_FROM_THEME true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_BACKGROUND_COLOR_FROM_THEME # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_RESERVE_SLOT_SKIP_TO_PREVIOUS true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_RESERVE_SLOT_SKIP_TO_PREVIOUS # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_RESERVE_SLOT_SKIP_TO_NEXT true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle android.support.wearable.media.MediaControlConstants.EXTRA_RESERVE_SLOT_SKIP_TO_NEXT # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 <type>int <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.list_item <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.name # begin MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.ContactsContract.Contacts.DISPLAY_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.ContactsContract.Contacts.PHOTO_THUMBNAIL_URI # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end MethodDeclaration
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView <type>android.graphics.drawable.BitmapDrawable null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin TryBlock
android.net.Uri$parse EXP this <type>String # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.explore_io_frag <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.CollectionView <type>android.view.View com.google.samples.apps.iosched.R.id.explore_collection_view # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.empty # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this EXP # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this EXP # begin Block
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin end MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.ViewGroup <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.view.ViewGroup <type>android.view.ViewGroup com.google.samples.apps.iosched.R.id.explore_io_card_container_contents # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup true # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup true # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View com.google.samples.apps.iosched.R.id.explore_io_clickable_item # begin end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>Object # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.ViewGroup <type>android.view.View com.google.samples.apps.iosched.R.id.explore_io_card_container_contents # begin Block
android.view.ViewGroup$getChildAt EXP <type>android.view.ViewGroup 0 # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View android.R.id.title # Block
android.view.View$findViewById <type>android.view.View <type>android.view.View com.google.samples.apps.iosched.R.id.explore_io_card_header_layout # end Block
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.button1 # begin end Block
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View <type>Object # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setTag @0 <type>android.view.View <type>com.google.samples.apps.iosched.explore.data.SessionData # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.title # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.description # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View com.google.samples.apps.iosched.R.id.buttonStart # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View com.google.samples.apps.iosched.R.id.buttonEnd # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.icon # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.indicator_in_schedule # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin Block
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # begin MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getBounds EXP <type>android.graphics.drawable.BitmapDrawable # MethodDeclaration
android.graphics.drawable.BitmapDrawable$getPaint EXP <type>android.graphics.drawable.BitmapDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin Block
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.ViewGroup.LayoutParams$getPercentLayoutInfo <type>AutoLayoutInfo <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight <type>int <type>android.view.View # MethodDeclaration
android.view.View$getPaddingTop <type>int <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom <type>int <type>android.view.View # end MethodDeclaration
android.view.View$setPadding @0 <type>android.view.View <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setIncludeFontPadding @0 <type>android.view.View false # begin MethodDeclaration
android.view.View$setTextSize @0 <type>android.view.View android.util.TypedValue.COMPLEX_UNIT_PX <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet R.styleable.AutoLayout_Layout # begin MethodDeclaration
android.content.res.TypedArray$getInt FIELD <type>android.content.res.TypedArray R.styleable.AutoLayout_Layout_layout_auto_basewidth 0 # MethodDeclaration
android.content.res.TypedArray$getInt FIELD <type>android.content.res.TypedArray R.styleable.AutoLayout_Layout_layout_auto_baseheight 0 # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # MethodDeclaration
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet <type>int # MethodDeclaration
android.content.res.TypedArray$getIndexCount <type>int <type>android.content.res.TypedArray # end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getIndex <type>int <type>android.content.res.TypedArray <type>int # begin Block
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray <type>int # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelOffset FIELD <type>android.content.res.TypedArray <type>int 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay EXP <type>android.view.WindowManager # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "Degrees" "Unknown screen orientation. Defaulting to portrait." # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin MethodDeclaration
android.widget.RelativeLayout.LayoutParams$setMargins @0 <type>android.widget.RelativeLayout.LayoutParams 0 0 0 EXP # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_RIGHT # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.support.v7.widget.RecyclerView$findChildViewUnder <type>android.view.View <type>android.support.v7.widget.RecyclerView EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildPosition EXP <type>android.support.v7.widget.RecyclerView <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>long # MethodDeclaration
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getLongExtra EXP <type>android.content.Intent <type>String 0l # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getClassLoader EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.localUrl 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this url # begin ConstructorDeclaration
android.net.Uri$parse EXP this url # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end Block
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$getParcelFileDescriptor EXP <type>android.content.res.AssetFileDescriptor # begin MethodDeclaration
android.content.res.AssetManager$openFd EXP <type>android.content.res.AssetManager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # begin MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 1 # MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 2 # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 0 # begin MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 1 # MethodDeclaration
android.widget.ListView$getChildAt EXP <type>android.widget.ListView 2 # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$getPositionForView EXP <type>android.widget.ListView <type>android.view.View # MethodDeclaration
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.MimeTypeMap$getSingleton EXP this # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this Http401AuthSample.this # begin ConstructorDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.label_credentials # ConstructorDeclaration
android.widget.TextView$getText EXP <type>android.widget.TextView # ConstructorDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder <type>String # begin MethodDeclaration
android.app.AlertDialog.Builder$setView @0 <type>android.app.AlertDialog.Builder <type>android.view.View # MethodDeclaration
android.app.AlertDialog.Builder$setPositiveButton @0 <type>android.app.AlertDialog.Builder android.R.string.ok this # MethodDeclaration
android.app.AlertDialog.Builder$setNegativeButton @0 <type>android.app.AlertDialog.Builder android.R.string.cancel this # MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin SwitchCase
android.view.View$findViewById EXP <type>android.view.View R.id.field_username # SwitchCase
android.view.View$findViewById EXP <type>android.view.View R.id.field_password # end SwitchCase
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_webview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar FIELD # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getChildCount <type>int <type>android.support.v7.widget.RecyclerView # begin MethodDeclaration
android.support.v7.widget.GridLayoutManager$getItemCount <type>int <type>android.support.v7.widget.GridLayoutManager # MethodDeclaration
android.support.v7.widget.GridLayoutManager$findFirstVisibleItemPosition <type>int <type>android.support.v7.widget.GridLayoutManager # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setId @0 <type>android.widget.TextView 100 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin MethodDeclaration
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # MethodDeclaration
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String EXP # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSharedPreferences EXP <type>android.app.Activity <type>String android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ToggleButton$setOnClickListener @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout 0xFFF3F3F3 # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout 0xFF000000 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "File exists-  not saving again" # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_scroll_view null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ScrollView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_scroll_view # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_web_view_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$encodeToString EXP this EXP android.util.Base64.NO_WRAP # begin end TryBlock
<END>
<S2>
<S1>
android.net.LocalSocket$getInputStream EXP <type>android.net.LocalSocket # begin MethodDeclaration
android.net.LocalSocket$getOutputStream EXP <type>android.net.LocalSocket # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean this.roundedCorners <type>android.content.res.TypedArray R.styleable.BootstrapButton_roundedCorners false # begin TryBlock
android.content.res.TypedArray$getBoolean this.showOutline <type>android.content.res.TypedArray R.styleable.BootstrapButton_showOutline false # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapButton_bootstrapSize EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapButtonGroup_buttonMode EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.OutlineableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putFloat @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY <type>float # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>com.beardedhen.androidbootstrap.api.defaults.ButtonMode # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.roundedCorners <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # begin Block
android.os.Bundle$getBoolean this.showOutline <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.OutlineableView.KEY # Block
android.os.Bundle$getInt this.parentIndex <type>android.os.Bundle <type>String # Block
android.os.Bundle$getFloat this.bootstrapSize <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY # Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.view.ViewParent$onRadioToggle @0 <type>android.view.ViewParent <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.lidroid.xutils.sample.R.layout.http_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.LayoutInflater$getContext EXP <type>android.view.LayoutInflater # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "conn..." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "conn..." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "conn..." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin Block
android.graphics.drawable.Drawable$setLevel @0 <type>android.graphics.drawable.Drawable <type>int # Block
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable <type>int # Block
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable <type>boolean false # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$isStateful EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$resolveOpacity <type>int this <type>int EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setDither @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setFilterBitmap @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable <type>boolean <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$isChecked <type>boolean <type>android.view.View # begin MethodDeclaration
android.view.View$getTag <type>com.google.samples.apps.iosched.model.TagMetadata.Tag <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout com.google.samples.apps.iosched.R.drawable.drawer_shadow_flipped android.support.v4.view.GravityCompat.END # begin end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.drawable.ic_up # begin MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationContentDescription @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.string.close_and_go_back # end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>TagFilterHolder <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$inflateMenu @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.menu.explore_sessions_filtered # begin MethodDeclaration
android.support.v7.widget.Toolbar$setOnMenuItemClickListener @0 <type>android.support.v7.widget.Toolbar this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>TagFilterHolder # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ExploreSessionsFragment.EXTRA_SHOW_LIVESTREAMED_SESSIONS EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.CheckBox <type>android.view.View com.google.samples.apps.iosched.R.id.filter_checkbox # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # begin end Block
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox EXP # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.text_view # begin Block
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox EXP # Block
android.widget.CheckBox$setTag @0 <type>android.widget.CheckBox <type>com.google.samples.apps.iosched.model.TagMetadata.Tag # Block
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox <type>android.view.View.OnClickListener # end Block
<END>
<S2>
<S1>
android.widget.CheckBox$performClick @0 <type>android.widget.CheckBox # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Executing GET request on background thread" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Background thread for GET request has finished" # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Creating AsyncHttpResponseHandler on background thread" # begin end MethodDeclaration
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this AsyncBackgroundThreadSample.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Background thread for AsyncHttpResponseHandler has finished" # begin end TryBlock
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues course.examples.contentproviders.stringcontentprovider.DataContract.DATA "Record1" # begin MethodDeclaration
android.content.ContentResolver$insert <type>android.net.Uri <type>android.content.ContentResolver course.examples.contentproviders.stringcontentprovider.DataContract.CONTENT_URI <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$clear @0 <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues course.examples.contentproviders.stringcontentprovider.DataContract.DATA "Record2" # MethodDeclaration
android.content.ContentResolver$insert @0 <type>android.content.ContentResolver course.examples.contentproviders.stringcontentprovider.DataContract.CONTENT_URI <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$clear @0 <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues course.examples.contentproviders.stringcontentprovider.DataContract.DATA "Record3" # MethodDeclaration
android.content.ContentResolver$insert @0 <type>android.content.ContentResolver course.examples.contentproviders.stringcontentprovider.DataContract.CONTENT_URI <type>android.content.ContentValues # MethodDeclaration
android.content.ContentResolver$delete @0 <type>android.content.ContentResolver <type>android.net.Uri null null # MethodDeclaration
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver course.examples.contentproviders.stringcontentprovider.DataContract.CONTENT_URI null null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # MethodDeclaration
android.app.Fragment$isDetached EXP <type>android.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # MethodDeclaration
android.support.v4.app.Fragment$isDetached EXP <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getApplicationContext EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$isDestroyed EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Fragment$isDetached EXP <type>android.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Fragment$getChildFragmentManager EXP <type>android.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent TitlesListActivity.INDEX # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>T <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release EXP <type>android.support.v4.util.Pools.Pool <type>T # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$addJavascriptInterface @0 <type>android.webkit.WebView <type>JsValueCallback <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TITLE # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_SPEAKER_NAMES # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # Block
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet io.plaidapp.R.styleable.FontTextView # begin end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextView_android_textAppearance android.R.style.TextAppearance # begin end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextAppearance_font # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.FontTextView_font # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_storehouse_header null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_image # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.store_house_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$get EXP <type>android.util.SparseArray EXP # end Block
<END>
<S2>
<S1>
android.view.View$hashCode <type>int <type>android.view.View # begin MethodDeclaration
android.util.SparseArray$get <type>com.nineoldandroids.animation.Animator <type>android.util.SparseArray <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$remove @0 <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$hashCode EXP <type>android.view.View # begin MethodDeclaration
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP <type>com.nineoldandroids.animation.AnimatorSet # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_googlenow_main_inner_lastupdate # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textViewCode # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textViewValue # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textViewDelta # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.textViewPerc # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "OkHttp" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 100 <type>java.io.ByteArrayOutputStream # begin MethodDeclaration
android.os.Environment$getExternalStoragePublicDirectory <type>java.io.File this android.os.Environment.DIRECTORY_PICTURES # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "image/*" # begin MethodDeclaration
android.net.Uri$fromFile EXP this <type>java.io.File # MethodDeclaration
android.content.Intent$putExtra EXP <type>android.content.Intent android.content.Intent.EXTRA_STREAM EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # begin MethodDeclaration
android.support.v7.app.AppCompatActivity$startActivity @0 <type>android.support.v7.app.AppCompatActivity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.graphics.Typeface$create <type>android.graphics.Typeface this "sans-serif-medium" android.graphics.Typeface.NORMAL # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView android.graphics.Typeface.SANS_SERIF android.graphics.Typeface.BOLD # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getWindow EXP <type>android.support.v7.app.AppCompatActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getWindow EXP <type>android.support.v7.app.AppCompatActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.FloatingActionButton$getDrawable <type>android.graphics.drawable.Drawable <type>android.support.design.widget.FloatingActionButton # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getResources <type>android.content.res.Resources <type>android.support.v7.app.AppCompatActivity # begin Block
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources com.google.samples.apps.iosched.R.drawable.add_schedule_fab_icon_anim # Block
android.content.res.Resources$getColor EXP <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.fab_icon_color # Block
android.graphics.drawable.Drawable$setTint @0 <type>android.graphics.drawable.Drawable EXP # Block
android.support.design.widget.FloatingActionButton$setImageDrawable @0 <type>android.support.design.widget.FloatingActionButton <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin Block
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # Block
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin Block
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getTag <type>android.animation.Animator <type>android.widget.ImageView # begin Block
android.animation.Animator$end @0 <type>android.animation.Animator # Block
android.widget.ImageView$setAlpha @0 <type>android.widget.ImageView 1f # end Block
<END>
<S2>
<S1>
android.support.v7.app.AppCompatActivity$getResources EXP <type>android.support.v7.app.AppCompatActivity # begin Block
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this <type>android.widget.ImageView android.view.View.ALPHA 0f # Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator EXP # end Block
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin Block
android.animation.Animator$setDuration @0 <type>android.animation.Animator <type>int # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.ImageView android.view.View.ALPHA 1f # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.ImageView android.view.View.SCALE_X 0f 1f # Block
android.animation.ObjectAnimator$ofFloat EXP this <type>android.widget.ImageView android.view.View.SCALE_Y 0f 1f # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet EXP EXP EXP # Block
android.animation.AnimatorSet$playSequentially @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.AnimatorSet # end Block
android.animation.AnimatorSet$addListener @0 <type>android.animation.AnimatorSet EXP # begin Block
android.widget.ImageView$setTag @0 <type>android.widget.ImageView <type>android.animation.AnimatorSet # Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setTag @0 <type>android.widget.ImageView null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this 0 0 0 0f 0f 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$dispatchTouchEvent @0 <type>android.widget.Button <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.issues_filter_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.github.pockethub.core.issue.IssueFilter <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>com.github.pockethub.core.issue.IssueFilter <type>android.widget.AdapterView <type>int # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.github.pockethub.core.issue.IssueFilter # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_NAME EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TITLE EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_COLOR FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_mix <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_text # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image_title1 # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_inside_image_title2 # end MethodDeclaration
android.widget.TextView$getBackground <type>android.graphics.drawable.GradientDrawable <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Detail............" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "xxxx xxx xxxx xxxxx" # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail <type>android.graphics.Bitmap this EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutResource @0 <type>android.view.View EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getHeight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # MethodDeclaration
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>int <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getLeft EXP <type>android.view.ViewGroup # begin Block
android.view.ViewGroup$getTop EXP <type>android.view.ViewGroup # Block
android.graphics.Rect$offset @0 <type>android.graphics.Rect EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin MethodDeclaration
android.widget.ListView$getChildAt <type>android.view.View <type>android.widget.ListView <type>int # MethodDeclaration
android.widget.ListView$performItemClick @0 <type>android.widget.ListView <type>android.view.View <type>int <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$popBackStack @0 <type>android.support.v4.app.FragmentManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # MethodDeclaration
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment null # MethodDeclaration
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction "frag" # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$currentAnimationTimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.SearchViewCompat$newSearchView <type>android.view.View this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SearchViewCompat$setOnQueryTextListener @0 this <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentComplexList" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$encode EXP this <type>String # begin Block
android.net.Uri$withAppendedPath <type>android.net.Uri this android.provider.Contacts.People.CONTENT_FILTER_URI EXP # end Block
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$swapCursor @0 <type>android.support.v4.widget.SimpleCursorAdapter <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$swapCursor @0 <type>android.support.v4.widget.SimpleCursorAdapter null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_gridview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView false # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.root # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$getPassword EXP <type>android.accounts.AccountManager <type>android.accounts.Account # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAuthToken <type>android.accounts.AccountManagerFuture <type>android.accounts.AccountManager <type>android.accounts.Account com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE false null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManagerFuture$getResult <type>android.os.Bundle <type>android.accounts.AccountManagerFuture # begin TryBlock
android.os.Bundle$getString EXP <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN # end TryBlock
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_INSIDE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView FIELD # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$createFromStream EXP this EXP "bitmap.jpg" # begin end TryBlock
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getClassLoader EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>android.os.Parcelable <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # Block
android.util.SparseIntArray$valueAt EXP <type>android.util.SparseIntArray <type>int # Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.VerticalGridPresenter$setNumberOfColumns @0 <type>android.support.v17.leanback.widget.VerticalGridPresenter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$subscribe @0 <type>android.media.browse.MediaBrowser <type>String <type>android.media.browse.MediaBrowser.SubscriptionCallback # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$unsubscribe @0 <type>android.media.browse.MediaBrowser <type>String # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getRoot <type>String <type>android.media.browse.MediaBrowser # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$unsubscribe @0 <type>android.media.browse.MediaBrowser <type>String # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.ActivityOptionsCompat$makeSceneTransitionAnimation EXP this EXP EXP TvVerticalGridActivity.SHARED_ELEMENT_NAME # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$clear @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin end MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser.MediaItem$getMediaId EXP <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.media.browse.MediaBrowser.MediaItem # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Exceptions' whitelist and blacklist updated\nSee RetryRequestSample.java for details" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.recyclerview.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.recyclerview.R.styleable.card_options_list_card_layout_resourceIDs 0 # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$length EXP <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray <type>int it.gmariotti.cardslib.library.recyclerview.R.layout.list_card_layout # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin MethodDeclaration
android.support.v7.widget.RecyclerView$getLayoutManager EXP <type>android.support.v7.widget.RecyclerView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getHeight <type>int <type>android.support.v7.widget.RecyclerView # begin InstanceDeclaration
android.support.v7.widget.RecyclerView$getPaddingBottom <type>int <type>android.support.v7.widget.RecyclerView # end InstanceDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$smoothScrollBy @0 <type>android.support.v7.widget.RecyclerView 0 EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutManager EXP <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout R.drawable.drawer_shadow android.support.v4.view.GravityCompat.START # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>CustomActionBarDrawerToggle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.extras_main <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "carddemo_dialog_extras" # end Block
android.app.DialogFragment$show @0 <type>android.app.DialogFragment <type>android.app.FragmentTransaction "carddemo_dialog_extras" # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction R.id.fragment_main_extras <type>it.gmariotti.cardslib.demo.extras.fragment.BaseFragment # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin Block
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onActivityResult handled by IABUtil." # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_card_color_inner_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityRevealBinding this this R.layout.activity_reveal # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this this android.R.interpolator.linear_out_slow_in # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this this # begin end MethodDeclaration
android.transition.Transition$addListener @0 <type>android.transition.Transition EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Transition$removeListener @0 <type>android.transition.Transition this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Fade$setDuration @0 <type>android.transition.Fade EXP # begin MethodDeclaration
android.transition.Fade$setStartDelay @0 <type>android.transition.Fade EXP # end MethodDeclaration
android.transition.Fade$addListener @0 <type>android.transition.Fade EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Transition$removeListener @0 <type>android.transition.Transition this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$getWidth EXP <type>android.widget.RelativeLayout # begin end MethodDeclaration
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.reveal_body4 # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.theme_blue_background # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.transition.TransitionInflater$from EXP this this # end MethodDeclaration
android.transition.Transition$addListener @0 <type>android.transition.Transition EXP # begin MethodDeclaration
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.widget.RelativeLayout <type>android.transition.Transition # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_IN_PARENT # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.reveal_body3 # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this RevealActivity.this R.color.theme_red_background # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.reveal_body1 # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.theme_yellow_background # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.reveal_body2 # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.theme_green_background # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$getChildAt <type>android.view.View <type>android.widget.RelativeLayout <type>int # begin Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$getChildAt <type>android.view.View <type>android.widget.RelativeLayout <type>int # begin Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.View <type>int <type>int 0 <type>int # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getLeft EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$getRight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getTop EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getBottom EXP <type>android.view.ViewGroup # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.ViewGroup <type>int <type>int 0 <type>float # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this <type>int # MethodDeclaration
android.view.ViewGroup$setBackgroundColor @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # MethodDeclaration
android.view.View$getWidth <type>int <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.View <type>int <type>int <type>int 0 # end MethodDeclaration
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getFloat EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "myInt" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.MimeTypeMap$getSingleton EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setFilterBitmap @0 <type>android.graphics.Paint true # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP <type>int <type>int <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Matrix <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$getBitmap <type>android.graphics.Bitmap <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig <type>android.graphics.Bitmap.Config <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas 0 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$encodeToString <type>String this <type>byte 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelableArrayList EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin MethodDeclaration
android.os.Bundle$putBooleanArray @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBooleanArray <type>boolean <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.List # begin MethodDeclaration
android.app.Activity$getLayoutInflater <type>android.view.LayoutInflater <type>android.app.Activity # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.ListView <type>android.view.LayoutInflater com.github.pockethub.R.layout.dialog_list_view null # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>LabelListAdapter # MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView <type>LabelListAdapter # MethodDeclaration
android.app.AlertDialog$setCancelable @0 <type>android.app.AlertDialog true # MethodDeclaration
android.app.AlertDialog$setOnCancelListener @0 <type>android.app.AlertDialog this # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.cancel # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP this # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.clear # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEUTRAL EXP this # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.apply # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_POSITIVE EXP this # MethodDeclaration
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # MethodDeclaration
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBooleanArray <type>boolean <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$putParcelableArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String "" # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," EXP # begin end TryBlock
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle LoginLogger.EVENT_PARAM_LOGIN_RESULT <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle LoginLogger.EVENT_PARAM_ERROR_MESSAGE <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle LoginLogger.EVENT_PARAM_ERROR_CODE <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle LoginLogger.EVENT_PARAM_EXTRAS EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SlidingUpListViewActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.SESSION_ID # begin Block
android.database.Cursor$getString FIELD <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.MY_SCHEDULE_IN_SCHEDULE # Block
android.database.Cursor$getInt <type>Integer <type>android.database.Cursor EXP # end Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.MY_SCHEDULE_DIRTY_FLAG # begin Block
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.VIDEO_ID # begin Block
android.database.Cursor$getString FIELD <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.MY_VIEWED_VIDEOS_DIRTY_FLAG # Block
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyFeedbackSubmitted.SESSION_ID # begin Block
android.database.Cursor$getString FIELD <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.MyFeedbackSubmitted.MY_FEEDBACK_SUBMITTED_DIRTY_FLAG # Block
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ScrollViewActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "com.jakewharton.android.viewpagerindicator.sample.Path" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent "com.jakewharton.android.viewpagerindicator.sample.SAMPLE" # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel <type>CharSequence <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setClassName @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this ListSamples # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "com.jakewharton.android.viewpagerindicator.sample.Path" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>java.util.Map <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View.OnClickListener$onClick @0 <type>android.view.View.OnClickListener <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getAction EXP <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin Block
android.net.Uri$parse EXP this EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.ComponentCallbacks2$onTrimMemory @0 <type>android.content.ComponentCallbacks2 <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ComponentCallbacks2$onConfigurationChanged @0 <type>android.content.ComponentCallbacks2 <type>android.content.res.Configuration # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ComponentCallbacks2$onLowMemory @0 <type>android.content.ComponentCallbacks2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this context # begin MethodDeclaration
android.accounts.AccountManager$getPassword <type>String <type>android.accounts.AccountManager <type>android.accounts.Account # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception deleting repository" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 5 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 50 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.SeekBar$getProgress <type>int <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.SensorManager$registerListener @0 <type>android.hardware.SensorManager this <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_UI # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$unregisterListener @0 <type>android.hardware.SensorManager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.app.Dialog$setOnCancelListener @0 <type>android.app.Dialog EXP # begin SwitchCase
android.app.Dialog$show @0 <type>android.app.Dialog # end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_mine # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_starred # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_all # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.image # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.handle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.tweet # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this TwitterGson.this "Error loading tweets" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$getCount EXP <type>android.widget.ArrayAdapter # begin Block
android.widget.ArrayAdapter$getItem <type>Tweet <type>android.widget.ArrayAdapter EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this TwitterGson.this "Error loading tweets" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.list null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.row_icon # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.row_title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapRegionDecoder$newInstance <type>android.graphics.BitmapRegionDecoder this EXP false # begin TryBlock
android.graphics.BitmapRegionDecoder$decodeRegion <type>android.graphics.Bitmap <type>android.graphics.BitmapRegionDecoder EXP <type>android.graphics.BitmapFactory.Options # end TryBlock
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin end MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String true # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$setClassLoader @0 <type>android.os.Bundle EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card=" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_secondaryTitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin ConstructorDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end ConstructorDeclaration
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createScaledBitmap <type>android.graphics.Bitmap this EXP <type>int <type>int false # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setLogo @0 <type>android.support.v7.app.ActionBar <type>android.graphics.drawable.BitmapDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin TryBlock
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem <type>android.graphics.drawable.BitmapDrawable # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin MethodDeclaration
android.content.res.TypedArray$getLayoutDimension <type>int <type>android.content.res.TypedArray 0 100 # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Avatar load failed" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ALPHA_8 # begin end ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray 0 1 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$ellipsize EXP this <type>CharSequence EXP EXP android.text.TextUtils.TruncateAt.END false null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_header_layout_resourceID <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setClickable @0 <type>android.widget.ImageButton false # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.widget.PopupMenu$show @0 <type>android.widget.PopupMenu # begin Block
android.widget.ImageButton$setSelected @0 <type>android.widget.ImageButton true # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.PopupMenu$setOnMenuItemClickListener @0 <type>android.widget.PopupMenu EXP # begin end MethodDeclaration
android.widget.PopupMenu$setOnDismissListener @0 <type>android.widget.PopupMenu EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenuInflater <type>android.view.MenuInflater <type>android.widget.PopupMenu # begin Block
android.widget.PopupMenu$getMenu EXP <type>android.widget.PopupMenu # Block
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setSelected @0 <type>android.widget.ImageButton false # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText <type>CharSequence <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_event # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout R.drawable.drawer_shadow android.support.v4.view.GravityCompat.START # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>CustomActionBarDrawerToggle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.main <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setItemChecked @0 <type>android.widget.ListView <type>int true # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout <type>android.widget.ListView # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "carddemo_dialog" # end Block
android.app.DialogFragment$show @0 <type>android.app.DialogFragment <type>android.app.FragmentTransaction "carddemo_dialog" # begin end Block
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$replace @0 <type>android.app.FragmentTransaction R.id.fragment_main <type>it.gmariotti.cardslib.demo.fragment.BaseFragment # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>it.gmariotti.cardslib.demo.utils.SimpleSectionedListAdapter # begin Block
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onActivityResult handled by IABUtil." # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById mActionView <type>android.view.View mActionId # begin end Block
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this EXP android.util.Base64.DEFAULT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setImageDrawable @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$start @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.View$setImageBitmap @0 <type>android.view.View <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDeclaredField <type>java.lang.reflect.Field this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$getLayoutDimension <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_dropDownWidth android.view.ViewGroup.LayoutParams.WRAP_CONTENT # begin ConstructorDeclaration
android.content.res.TypedArray$getDrawable EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_popupBackground # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelOffset <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_dropDownVerticalOffset 0 # end ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelOffset <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_dropDownHorizontalOffset 0 # begin end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_gravity android.view.Gravity.CENTER # begin ConstructorDeclaration
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockSpinner_android_prompt # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$getBaseline <type>int <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end MethodDeclaration
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$setSelected @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.ViewGroup$getChildMeasureSpec <type>int this mHeightMeasureSpec EXP FIELD # begin MethodDeclaration
android.view.ViewGroup$getChildMeasureSpec <type>int this mWidthMeasureSpec EXP FIELD # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth <type>int <type>android.view.View # MethodDeclaration
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getCount EXP <type>android.widget.SpinnerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getItemViewType <type>int <type>android.widget.SpinnerAdapter <type>int # begin end Block
android.widget.SpinnerAdapter$getView <type>android.view.View <type>android.widget.SpinnerAdapter <type>int <type>android.view.View this # begin end Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getCount EXP <type>android.widget.SpinnerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getItem EXP <type>android.widget.SpinnerAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getItemId EXP <type>android.widget.SpinnerAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$getDropDownView EXP <type>android.widget.SpinnerAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$hasStableIds EXP <type>android.widget.SpinnerAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$registerDataSetObserver @0 <type>android.widget.SpinnerAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.SpinnerAdapter$unregisterDataSetObserver @0 <type>android.widget.SpinnerAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$areAllItemsEnabled EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity io.plaidapp.R.string.share_authority # begin MethodDeclaration
android.support.v4.content.FileProvider$getUriForFile <type>android.net.Uri this <type>android.app.Activity EXP <type>java.io.File # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_actionbarpulltorefresh <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getOverScrollMode EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray 0 EXP # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStoragePublicDirectory <type>java.io.File this android.os.Environment.DIRECTORY_DOWNLOADS # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageState <type>String this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.content.Context <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$setComponentEnabledSetting @0 <type>android.content.pm.PackageManager <type>android.content.ComponentName <type>int android.content.pm.PackageManager.DONT_KILL_APP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getSystemService <type>android.app.ActivityManager <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager EXP android.content.pm.PackageManager.GET_SERVICES # end TryBlock
<END>
<S2>
<S1>
android.content.pm.PackageManager$getServiceInfo <type>android.content.pm.ServiceInfo <type>android.content.pm.PackageManager <type>android.content.ComponentName 0 # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$e @0 this "AndroidUtils" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "AndroidUtils" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas EXP # Block
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Rect$width <type>int <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # MethodDeclaration
android.graphics.Bitmap$createScaledBitmap EXP this <type>android.graphics.Bitmap <type>int <type>int true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivityOptions <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.ComponentName <type>android.content.Intent <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setComponent @0 <type>android.content.Intent EXP # begin Block
android.content.pm.ResolveInfo$loadLabel EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # Block
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.ViewHolder$getAdapterPosition <type>int <type>android.support.v7.widget.RecyclerView.ViewHolder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.ViewHolder$getAdapterPosition <type>int <type>android.support.v7.widget.RecyclerView.ViewHolder # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin Block
android.view.View$invalidate @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.Log$v EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$getPackageManager EXP <type>android.app.Application # begin TryBlock
android.app.Application$getPackageName EXP <type>android.app.Application # TryBlock
android.os.Bundle$getString EXP <type>android.os.Bundle "roboguice.modules" # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.app.Application <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Using annotation database(s)." # begin Block
android.os.SystemClock$currentThreadTimeMillis <type>long this # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP EXP # begin TryBlock
android.os.SystemClock$currentThreadTimeMillis <type>long this # TryBlock
android.util.Log$d @0 this EXP EXP # end TryBlock
<END>
<S2>
<S1>
android.app.Application$getPackageManager EXP <type>android.app.Application # begin TryBlock
android.app.Application$getPackageName EXP <type>android.app.Application # TryBlock
android.os.Bundle$getString EXP <type>android.os.Bundle "roboguice.annotations.packages" # end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Using full reflection. Try using RoboGuice annotation processor for better performance." # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end TryBlock
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # begin MethodDeclaration
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this AndroidLiveWallpaperService.TAG " > AndroidLiveWallpaper - onDestroy() stopped GLThread managed by GLSurfaceView" # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$setCrossFadeEnabled @0 <type>android.graphics.drawable.TransitionDrawable true # begin MethodDeclaration
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable 5000 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.facebook.drawee.R.styleable.GenericDraweeView # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_fadeDuration <type>int # begin TryBlock
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_viewAspectRatio <type>float # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_placeholderImage <type>int # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_retryImage <type>int # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_failureImage <type>int # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_progressBarImage <type>int # TryBlock
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_progressBarAutoRotateInterval 0 # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_backgroundImage <type>int # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_overlayImage <type>int # TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_pressedStateOverlayImage <type>int # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundAsCircle <type>boolean # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundedCornerRadius <type>int # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundTopLeft <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundTopRight <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundBottomRight <type>boolean # TryBlock
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundBottomLeft <type>boolean # TryBlock
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundWithOverlayColor <type>int # TryBlock
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundingBorderWidth <type>int # TryBlock
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.facebook.drawee.R.styleable.GenericDraweeView_roundingBorderColor <type>int # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>com.bumptech.glide.samples.flickr.api.Photo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$unload @0 <type>android.media.SoundPool <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$play <type>int <type>android.media.SoundPool <type>int <type>float <type>float 1 0 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$stop @0 <type>android.media.SoundPool EXP # begin end For
<END>
<S2>
<S1>
android.media.SoundPool$stop @0 <type>android.media.SoundPool <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$autoPause @0 <type>android.media.SoundPool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$pause @0 <type>android.media.SoundPool <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$autoResume @0 <type>android.media.SoundPool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$resume @0 <type>android.media.SoundPool <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$setRate @0 <type>android.media.SoundPool <type>int <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$setVolume @0 <type>android.media.SoundPool <type>int <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$play <type>int <type>android.media.SoundPool <type>int <type>float <type>float 1 EXP 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$setLoop @0 <type>android.media.SoundPool <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$setVolume @0 <type>android.media.SoundPool <type>int <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$play <type>int <type>android.media.SoundPool <type>int <type>float <type>float 1 0 <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$play <type>int <type>android.media.SoundPool <type>int <type>float <type>float 1 EXP <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$setPriority @0 <type>android.media.SoundPool <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.fr_image_grid <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById listView <type>android.view.View com.nostra13.universalimageloader.sample.R.id.grid # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.item_grid_image <type>android.view.ViewGroup false # begin end Block
android.view.View$findViewById FIELD <type>android.view.View com.nostra13.universalimageloader.sample.R.id.image # begin Block
android.view.View$findViewById FIELD <type>android.view.View com.nostra13.universalimageloader.sample.R.id.progress # Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>java.util.List <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool <type>java.util.List # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "uri" <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle "uri" # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setAudioStreamType @0 <type>android.media.MediaPlayer android.media.AudioManager.STREAM_MUSIC # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$reset @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.media.MediaPlayer$setOnPreparedListener @0 <type>android.media.MediaPlayer this # begin MethodDeclaration
android.media.MediaPlayer$setOnCompletionListener @0 <type>android.media.MediaPlayer this # MethodDeclaration
android.media.MediaPlayer$setOnErrorListener @0 <type>android.media.MediaPlayer this # MethodDeclaration
android.media.MediaPlayer$setOnBufferingUpdateListener @0 <type>android.media.MediaPlayer this # MethodDeclaration
android.media.MediaPlayer$setOnVideoSizeChangedListener @0 <type>android.media.MediaPlayer this # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer <type>android.app.Activity <type>android.net.Uri # begin TryBlock
android.media.MediaPlayer$prepareAsync @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$setDisplay @0 <type>android.media.MediaPlayer EXP # begin TryBlock
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$getCurrentPosition <type>int <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$getDuration EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$isPlaying EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$pause @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.media.MediaPlayer$reset @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.media.MediaPlayer$setDisplay @0 <type>android.media.MediaPlayer <type>android.view.SurfaceHolder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$addCallback @0 <type>android.view.SurfaceHolder this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$removeCallback @0 <type>android.view.SurfaceHolder this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getWindowManager EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "VideoStreamView" "Unknown screen orientation. Defaulting to portrait." # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this "VideoStreamView" "Unknown screen orientation. Defaulting to landscape." # begin end SwitchCase
<END>
<S2>
<S1>
android.media.MediaPlayer$getVideoWidth <type>float <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$getVideoHeight <type>float <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapCircleThumbnail_bootstrapBrand EXP # begin TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapCircleThumbnail_bootstrapSize EXP # TryBlock
android.content.res.TypedArray$getBoolean this.hasBorder <type>android.content.res.TypedArray R.styleable.BootstrapCircleThumbnail_hasBorder true # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix null # begin Block
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # Block
android.graphics.BitmapShader$setLocalMatrix @0 <type>android.graphics.BitmapShader <type>android.graphics.Matrix # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Activity R.string.custom_tabs_failed android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$startActivity @0 <type>android.app.Activity EXP # begin end TryBlock
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>LoginClient <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.facebook.R.layout.com_facebook_login_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.facebook.R.id.com_facebook_login_activity_progress_bar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.facebook.R.id.com_facebook_login_activity_progress_bar # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>LoginClient.Result # begin MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>LoginClient # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getCallingActivity <type>android.content.ComponentName <type>android.app.Activity # begin end MethodDeclaration
android.content.ComponentName$getPackageName <type>String <type>android.content.ComponentName # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin MethodDeclaration
android.view.View$findViewById <type>com.daimajia.swipe.SwipeLayout <type>android.view.View EXP # end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.daimajia.swipedemo.R.id.delete # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "DoubleClick" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context "click delete" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.daimajia.swipedemo.R.id.position # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCallback EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$invalidateSelf @0 <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP 2 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP EXP EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception checking if following user" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.PaintDrawable$setShape @0 <type>android.graphics.drawable.PaintDrawable EXP # begin MethodDeclaration
android.graphics.Color$alpha <type>int this <type>int # end MethodDeclaration
android.graphics.drawable.PaintDrawable$setShaderFactory @0 <type>android.graphics.drawable.PaintDrawable EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.nhaarman.listviewanimations.appearance.simple.SwingBottomInAnimationAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_expandablelist <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>int <type>it.gmariotti.cardslib.library.internal.BaseGroupExpandableCard # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # begin MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor <type>String # begin MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this <type>String android.util.Base64.DEFAULT # begin MethodDeclaration
android.os.Parcel$obtain <type>android.os.Parcel this # MethodDeclaration
android.os.Parcel$unmarshall @0 <type>android.os.Parcel <type>byte 0 FIELD # MethodDeclaration
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # MethodDeclaration
android.os.Parcel$readValue <type>UserInfo <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$recycle @0 <type>android.os.Parcel # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>UserInfo # MethodDeclaration
android.os.Parcel$marshall <type>byte <type>android.os.Parcel # MethodDeclaration
android.os.Parcel$recycle @0 <type>android.os.Parcel # MethodDeclaration
android.util.Base64$encodeToString EXP this <type>byte android.util.Base64.DEFAULT # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.BezelImageView_maskDrawable # begin end ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.BezelImageView_borderDrawable # begin end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.BezelImageView_desaturateOnPress <type>boolean # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint 0xff000000 # ConstructorDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ARGB_8888 # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.ColorMatrix$setSaturation @0 <type>android.graphics.ColorMatrix 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>int <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # end MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap FIELD FIELD null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$saveLayer @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>android.graphics.Paint # Block
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorMatrixColorFilter # Block
android.graphics.Canvas$saveLayer @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getApplication EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getApplication EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100123 123141 android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 112341 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP 48 <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_COLOR # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context "mock_data" android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences "mock_current_time" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TITLE # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_IN_MY_SCHEDULE # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_IN_MY_SCHEDULE # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.ROOM_ID # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_HASHTAG # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 0 # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_IMAGE_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_COMPANY # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_URL # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_PLUSONE_URL # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_TWITTER_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_ABSTRACT # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 0 # MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 1 # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_IMAGE_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_COMPANY # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_ABSTRACT # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getPositionForView <type>int <type>android.widget.AbsListView <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getHeaderViewsCount <type>int <type>android.widget.AbsListView # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getChildCount <type>int <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getChildAt <type>android.view.View <type>android.widget.AbsListView <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray io.plaidapp.R.styleable.ForegroundView_android_foreground # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$jumpToCurrentState @0 <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP EXP EXP EXP # begin Block
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setHotspot @0 <type>android.graphics.drawable.Drawable <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$animate EXP <type>android.widget.TextView # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this PostNewDesignerNewsStory.this android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.widget.TextView$animate EXP <type>android.widget.TextView # begin Block
android.view.animation.AnimationUtils$loadInterpolator EXP this PostNewDesignerNewsStory.this android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.support.v4.app.ShareCompat.IntentReader$getText EXP <type>android.support.v4.app.ShareCompat.IntentReader # begin Block
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # Block
android.support.v4.app.ShareCompat.IntentReader$getSubject EXP <type>android.support.v4.app.ShareCompat.IntentReader # Block
android.widget.EditText$setText @0 <type>android.widget.EditText EXP # Block
android.view.ViewGroup$getViewTreeObserver EXP <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getViewTreeObserver EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$setTranslationY @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this PostNewDesignerNewsStory.this android.R.interpolator.linear_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$animate EXP <type>android.view.ViewGroup # begin Block
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this PostNewDesignerNewsStory.this android.R.interpolator.fast_out_linear_in # end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty <type>boolean this <type>CharSequence # begin MethodDeclaration
android.widget.EditText$setEnabled @0 <type>android.widget.EditText <type>boolean # MethodDeclaration
android.support.design.widget.TextInputLayout$setEnabled @0 <type>android.support.design.widget.TextInputLayout <type>boolean # MethodDeclaration
android.widget.EditText$setFocusableInTouchMode @0 <type>android.widget.EditText <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty <type>boolean this <type>CharSequence # begin MethodDeclaration
android.widget.EditText$setEnabled @0 <type>android.widget.EditText <type>boolean # MethodDeclaration
android.support.design.widget.TextInputLayout$setEnabled @0 <type>android.support.design.widget.TextInputLayout <type>boolean # MethodDeclaration
android.widget.EditText$setFocusableInTouchMode @0 <type>android.widget.EditText <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # Block
android.widget.EditText$getText EXP <type>android.widget.EditText # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # Block
android.widget.EditText$getText EXP <type>android.widget.EditText # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this io.plaidapp.R.color.designer_news # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_COLOR EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent io.plaidapp.ui.transitions.FabDialogMorphSetup.EXTRA_SHARED_ELEMENT_START_CORNER_RADIUS 0 # Block
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this this <type>android.widget.Button EXP # Block
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end Block
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.widget.Button$setEnabled @0 <type>android.widget.Button EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_textview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.fragment_rotate_header_with_text_view_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$createBitmap EXP this EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_4444 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 200 android.graphics.Bitmap.Config.RGB_565 # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_4444 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_grid_gplay <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getThemedContext EXP <type>android.app.ActionBar # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter android.R.layout.simple_spinner_dropdown_item # MethodDeclaration
android.app.ActionBar$setListNavigationCallbacks @0 <type>android.app.ActionBar <type>android.widget.ArrayAdapter this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$createFromResource <type>android.widget.ArrayAdapter this EXP org.androidannotations.test.R.array.planets_array org.androidannotations.test.R.layout.simple_spinner_item # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter android.R.layout.simple_spinner_dropdown_item # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>android.bluetooth.BluetoothDevice <type>android.content.Intent android.bluetooth.BluetoothDevice.EXTRA_DEVICE # begin Block
android.bluetooth.BluetoothDevice$getName EXP <type>android.bluetooth.BluetoothDevice # Block
android.bluetooth.BluetoothDevice$getAddress EXP <type>android.bluetooth.BluetoothDevice # Block
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter EXP # end Block
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getDefaultAdapter <type>android.bluetooth.BluetoothAdapter this # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Discover More Devices" # MethodDeclaration
android.widget.ListView$setFooterDividersEnabled @0 <type>android.widget.ListView true # MethodDeclaration
android.widget.ListView$addFooterView @0 <type>android.widget.ListView <type>android.widget.TextView null true # end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$startDiscovery @0 <type>android.bluetooth.BluetoothAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>String <type>android.widget.AdapterView <type>int # begin Block
android.bluetooth.BluetoothAdapter$getRemoteDevice <type>android.bluetooth.BluetoothDevice <type>android.bluetooth.BluetoothAdapter EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent android.bluetooth.BluetoothDevice.EXTRA_DEVICE <type>android.bluetooth.BluetoothDevice # end Block
<END>
<S2>
<S1>
android.view.View$generateViewId EXP this # begin MethodDeclaration
android.support.v4.view.ViewPager$setId @0 <type>android.support.v4.view.ViewPager EXP # MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin TryBlock
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # TryBlock
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor de.greenrobot.daotest.TestEntityDao.Properties.SimpleInteger.columnName # TryBlock
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # TryBlock
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # TryBlock
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # TryBlock
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # TryBlock
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # TryBlock
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # MethodDeclaration
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Matrix$setTranslate @0 <type>android.graphics.Matrix EXP EXP # begin Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix 1.0f EXP # end Block
<END>
<S2>
<S1>
android.graphics.Path$transform @0 <type>android.graphics.Path <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Path$transform @0 <type>android.graphics.Path EXP # MethodDeclaration
android.graphics.Path$transform @0 <type>android.graphics.Path <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float # begin MethodDeclaration
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix EXP # begin end For
<END>
<S2>
<S1>
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float # MethodDeclaration
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float # MethodDeclaration
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # MethodDeclaration
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$postConcat @0 <type>android.graphics.Matrix FIELD # MethodDeclaration
android.graphics.Matrix$postConcat @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 32 2 # begin MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 64 1 # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 128 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "location" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "width" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_thumbnail <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.5f 1 0.5f 1 # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1600 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 180 360 EXP EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1600 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float EXP EXP <type>float <type>float # begin end Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1600 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float EXP EXP <type>float # end Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1600 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP <type>float <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP <type>float <type>float EXP # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ActionBarActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.BadgedImageView_badgeGravity EXP # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.BadgedImageView_badgePadding 0 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>int android.graphics.PorterDuff.Mode.SRC_IN # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds <type>android.graphics.Rect <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.view.Gravity$apply @0 this <type>int EXP EXP EXP <type>int <type>int <type>android.graphics.Rect # MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$create EXP this <type>String <type>int # begin Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # Block
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # Block
android.text.TextPaint$getTextBounds @0 <type>android.text.TextPaint <type>String 0 EXP <type>android.graphics.Rect # Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # Block
android.graphics.Rect$width EXP <type>android.graphics.Rect # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # Block
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # Block
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>float <type>float <type>android.graphics.Paint # Block
android.text.TextPaint$setXfermode @0 <type>android.text.TextPaint EXP # Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float EXP <type>android.text.TextPaint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap EXP EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.ViewGroup <type>android.view.LayoutInflater R.layout.image_slide_view <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.ImageView <type>android.view.ViewGroup R.id.share_image # begin Block
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # begin Block
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # Block
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_1 # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # MethodDeclaration
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_1 # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance this.broadcastManager this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>Profile <type>android.content.Intent ProfileManager.EXTRA_OLD_PROFILE # begin Block
android.content.Intent$getParcelableExtra <type>Profile <type>android.content.Intent ProfileManager.EXTRA_NEW_PROFILE # end Block
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter ProfileManager.ACTION_CURRENT_PROFILE_CHANGED # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver <type>android.content.IntentFilter # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[getActionBar]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[initActionBar]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.view.ViewStub <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__action_mode_bar_stub # begin end Block
<END>
<S2>
<S1>
android.view.ViewStub$inflate <type>com.actionbarsherlock.internal.widget.ActionBarContextView <type>android.view.ViewStub # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchPostResume]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchPause]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchStop]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchInvalidateOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchOpenOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchCloseOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchOnPostCreate]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin Block
android.util.Log$d @0 this TAG "[dispatchCreateOptionsMenu] returning true" # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.KeyEvent$getKeyCode <type>int <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.KeyEvent$getAction <type>int <type>android.view.KeyEvent # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchKeyEvent] returning true" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchKeyEvent] returning true" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchKeyEvent] returning false" # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.os.Bundle <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyCharacterMap$load <type>android.view.KeyCharacterMap this android.view.KeyCharacterMap.VIRTUAL_KEYBOARD # begin MethodDeclaration
android.view.KeyCharacterMap$getKeyboardType EXP <type>android.view.KeyCharacterMap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getTheme <type>android.content.res.Resources.Theme <type>android.content.Context # begin Block
android.content.res.Resources.Theme$resolveAttribute @0 <type>android.content.res.Resources.Theme com.actionbarsherlock.R.attr.actionBarWidgetTheme <type>android.util.TypedValue true # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this TAG EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this mActivity android.R.anim.fade_out # begin MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation 1000 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>com.actionbarsherlock.internal.widget.IcsProgressBar <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__progress_circular # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>com.actionbarsherlock.internal.widget.IcsProgressBar <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__progress_horizontal # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$removeAllViews @0 <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.Window.Callback$onContentChanged @0 <type>android.view.Window.Callback # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$removeAllViews @0 <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.Window.Callback$onContentChanged @0 <type>android.view.Window.Callback # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[installDecor]" # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarView <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__action_bar # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup 0 # begin Block
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarContainer <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__split_action_bar # begin end Block
android.view.ViewGroup$post @0 <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>com.actionbarsherlock.internal.widget.ActionBarContextView <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__action_context_bar # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this TAG "Requested split action bar with incompatible window decor! Ignoring request." # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View EXP # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.view.ViewGroup <type>android.view.ViewGroup com.actionbarsherlock.R.id.abs__content # end MethodDeclaration
android.view.ViewGroup$setId @0 <type>android.view.ViewGroup android.view.View.NO_ID # begin MethodDeclaration
android.view.ViewGroup$setId @0 <type>android.view.ViewGroup android.R.id.content # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[generateLayout]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end TryBlock
android.app.Activity$getApplicationInfo EXP <type>android.app.Activity # begin TryBlock
android.app.Activity$createPackageContext EXP <type>android.app.Activity <type>String 0 # TryBlock
android.content.res.AssetManager$openXmlResourceParser <type>android.content.res.XmlResourceParser <type>android.content.res.AssetManager "AndroidManifest.xml" # TryBlock
android.content.res.XmlResourceParser$getEventType <type>int <type>android.content.res.XmlResourceParser # end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$nextToken <type>int <type>android.content.res.XmlResourceParser # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getName <type>String <type>android.content.res.XmlResourceParser # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "Got <application>" # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName EXP <type>android.content.res.XmlResourceParser <type>int # begin IfTrue
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # IfTrue
android.util.Log$d @0 this TAG EXP # end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeIntValue <type>int <type>android.content.res.XmlResourceParser <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "Got <activity>" # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName <type>String <type>android.content.res.XmlResourceParser <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeName EXP <type>android.content.res.XmlResourceParser <type>int # begin IfTrue
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # IfTrue
android.util.Log$d @0 this TAG EXP # end IfTrue
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeIntValue <type>Integer <type>android.content.res.XmlResourceParser <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$getAttributeValue EXP <type>android.content.res.XmlResourceParser <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[ensureActionBar]" # begin end IfTrue
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getInstrumentation EXP this # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$registerOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$unregisterOnSharedPreferenceChangeListener @0 <type>android.content.SharedPreferences <type>android.content.SharedPreferences.OnSharedPreferenceChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin TryBlock
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewBitmap @0 <type>android.widget.RemoteViews com.nostra13.universalimageloader.sample.R.id.image_left <type>android.graphics.Bitmap # begin MethodDeclaration
android.appwidget.AppWidgetManager$updateAppWidget @0 <type>android.appwidget.AppWidgetManager <type>int <type>android.widget.RemoteViews # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewBitmap @0 <type>android.widget.RemoteViews com.nostra13.universalimageloader.sample.R.id.image_right <type>android.graphics.Bitmap # begin MethodDeclaration
android.appwidget.AppWidgetManager$updateAppWidget @0 <type>android.appwidget.AppWidgetManager <type>int <type>android.widget.RemoteViews # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin MethodDeclaration
android.widget.AutoCompleteTextView$addTextChangedListener @0 <type>android.widget.AutoCompleteTextView <type>android.text.TextWatcher # end MethodDeclaration
android.widget.AutoCompleteTextView$setOnEditorActionListener @0 <type>android.widget.AutoCompleteTextView EXP # begin MethodDeclaration
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText <type>android.text.TextWatcher # end MethodDeclaration
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$requestFocus @0 <type>android.widget.EditText # begin end Block
<END>
<S2>
<S1>
android.widget.Button$performClick @0 <type>android.widget.Button # begin end Block
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$requestFocus @0 <type>android.widget.AutoCompleteTextView # begin Block
android.widget.AutoCompleteTextView$showDropDown @0 <type>android.widget.AutoCompleteTextView # end Block
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin Block
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$setOnFocusChangeListener @0 <type>android.widget.AutoCompleteTextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$showDropDown @0 <type>android.widget.AutoCompleteTextView # begin end Block
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$length EXP <type>android.widget.AutoCompleteTextView # begin MethodDeclaration
android.widget.EditText$length EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # MethodDeclaration
android.support.design.widget.TextInputLayout$setVisibility @0 <type>android.support.design.widget.TextInputLayout android.view.View.GONE # MethodDeclaration
android.support.design.widget.TextInputLayout$setVisibility @0 <type>android.support.design.widget.TextInputLayout android.view.View.GONE # MethodDeclaration
android.widget.FrameLayout$setVisibility @0 <type>android.widget.FrameLayout android.view.View.GONE # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # MethodDeclaration
android.support.design.widget.TextInputLayout$setVisibility @0 <type>android.support.design.widget.TextInputLayout android.view.View.VISIBLE # MethodDeclaration
android.support.design.widget.TextInputLayout$setVisibility @0 <type>android.support.design.widget.TextInputLayout android.view.View.VISIBLE # MethodDeclaration
android.widget.FrameLayout$setVisibility @0 <type>android.widget.FrameLayout android.view.View.VISIBLE # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$getText EXP <type>android.widget.AutoCompleteTextView # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this EXP EXP <type>retrofit.RetrofitError # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP "Log in failed" android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.EditText$requestFocus @0 <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this DesignerNewsLogin.this # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.name # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.avatar # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.scrim # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this DesignerNewsLogin.this io.plaidapp.R.color.scrim # MethodDeclaration
android.widget.Toast$setView @0 <type>android.widget.Toast <type>android.view.View # MethodDeclaration
android.widget.Toast$setGravity @0 <type>android.widget.Toast EXP 0 0 # MethodDeclaration
android.widget.Toast$setDuration @0 <type>android.widget.Toast android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this EXP EXP <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.GONE # begin Block
android.accounts.AccountManager$get EXP this this # end Block
android.widget.AutoCompleteTextView$setAdapter @0 <type>android.widget.AutoCompleteTextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox false # begin MethodDeclaration
android.widget.CheckBox$setVisibility @0 <type>android.widget.CheckBox android.view.View.VISIBLE # end MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.appwidget.AppWidgetManager$getInstance EXP this org.robolectric.RuntimeEnvironment.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 200 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # begin MethodDeclaration
android.graphics.drawable.ShapeDrawable$setIntrinsicHeight @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.graphics.drawable.ShapeDrawable$setIntrinsicWidth @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.graphics.drawable.ShapeDrawable$setAlpha @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.ShapeDrawable # MethodDeclaration
android.widget.ImageView$setPadding @0 <type>android.widget.ImageView <type>int <type>int <type>int <type>int # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_LEFT # MethodDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.widget.RelativeLayout.LayoutParams # MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>android.widget.ImageView # MethodDeclaration
android.graphics.drawable.ShapeDrawable$getPaint EXP <type>android.graphics.drawable.ShapeDrawable # MethodDeclaration
android.graphics.drawable.ShapeDrawable$setIntrinsicHeight @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.graphics.drawable.ShapeDrawable$setIntrinsicWidth @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.graphics.drawable.ShapeDrawable$setAlpha @0 <type>android.graphics.drawable.ShapeDrawable <type>int # MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.ShapeDrawable # MethodDeclaration
android.widget.ImageView$setPadding @0 <type>android.widget.ImageView <type>int <type>int <type>int <type>int # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.ALIGN_PARENT_RIGHT # MethodDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.widget.RelativeLayout.LayoutParams # MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 5 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 6 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindDouble @0 <type>android.database.sqlite.SQLiteStatement 7 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindDouble @0 <type>android.database.sqlite.SQLiteStatement 8 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 9 EXP # MethodDeclaration
android.database.sqlite.SQLiteStatement$bindBlob @0 <type>android.database.sqlite.SQLiteStatement 10 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getFloat EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getDouble EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getFloat EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getDouble EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain EXP this <type>long <type>long <type>int 1 <type>int <type>android.view.MotionEvent.PointerCoords 0 1.0f 1.0f 0 0 0 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$obtain EXP this <type>long <type>long <type>int 2 <type>int <type>android.view.MotionEvent.PointerCoords 0 1.0f 1.0f 0 0 0 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_native_fragment_picasso <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#2196F3" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#3F51B5" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#2196F3" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getByteCount EXP <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.SynchronizedPool$acquire <type>java.nio.ByteBuffer <type>android.support.v4.util.Pools.SynchronizedPool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.util.Pools.SynchronizedPool$release @0 <type>android.support.v4.util.Pools.SynchronizedPool <type>java.nio.ByteBuffer # begin end Finally
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading commit compare" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # MethodDeclaration
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # MethodDeclaration
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intending EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent EXP this EXP # MethodDeclaration
android.support.test.espresso.intent.Intents.intended @0 this EXP # MethodDeclaration
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this <type>android.support.test.espresso.IdlingResource # end MethodDeclaration
<END>
<S2>
<S1>
android.util.ArrayMap$put @0 <type>android.util.ArrayMap <type>AnimatorListener <type>AnimatorListener # begin Block
android.animation.Animator$addListener @0 <type>android.animation.Animator <type>AnimatorListener # end Block
<END>
<S2>
<S1>
android.animation.Animator$cancel @0 <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$end @0 <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$getDuration EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$getInterpolator EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator <type>android.animation.TimeInterpolator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.ArrayMap$keySet EXP <type>android.util.ArrayMap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$getStartDelay EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$setStartDelay @0 <type>android.animation.Animator <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$isPaused EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$isRunning EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$isStarted EXP <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.ArrayMap$clear @0 <type>android.util.ArrayMap # begin MethodDeclaration
android.animation.Animator$removeAllListeners @0 <type>android.animation.Animator # end MethodDeclaration
<END>
<S2>
<S1>
android.util.ArrayMap$get <type>AnimatorListener <type>android.util.ArrayMap <type>AnimatorListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.ArrayMap$remove @0 <type>android.util.ArrayMap <type>AnimatorListener # begin Block
android.animation.Animator$removeListener @0 <type>android.animation.Animator <type>AnimatorListener # end Block
<END>
<S2>
<S1>
android.animation.Animator$setDuration @0 <type>android.animation.Animator <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$setTarget @0 <type>android.animation.Animator <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$setupEndValues @0 <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$setupStartValues @0 <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator$start @0 <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator.AnimatorListener$onAnimationStart @0 <type>android.animation.Animator.AnimatorListener <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator.AnimatorListener$onAnimationEnd @0 <type>android.animation.Animator.AnimatorListener <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator.AnimatorListener$onAnimationCancel @0 <type>android.animation.Animator.AnimatorListener <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.Animator.AnimatorListener$onAnimationRepeat @0 <type>android.animation.Animator.AnimatorListener <type>android.animation.Animator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$getThumbnail <type>byte <type>android.media.ExifInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$getAttribute EXP <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri null null null null # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.provider.MediaStore.Images.ImageColumns.DATA # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor <type>int # Block
android.database.Cursor$close @0 <type>android.database.Cursor # end Block
<END>
<S2>
<S1>
android.net.Uri$getPath <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.extra.twoway.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin TryBlock
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.extra.twoway.R.styleable.card_options_list_card_layout_resourceIDs 0 # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$length EXP <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId EXP <type>android.content.res.TypedArray <type>int it.gmariotti.cardslib.library.extra.twoway.R.layout.list_card_layout # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getView <type>android.view.View <type>android.widget.ListAdapter <type>int null this # begin Block
android.view.View$measure @0 <type>android.view.View EXP EXP # Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.cards.R.id.card_main_inner_simple_subtitle # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Color$alpha <type>int this <type>int # begin MethodDeclaration
android.graphics.Color$red <type>int this <type>int # MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getPixels @0 <type>android.graphics.Bitmap <type>int 0 EXP 0 0 EXP EXP # end MethodDeclaration
android.graphics.Bitmap$copy <type>android.graphics.Bitmap <type>android.graphics.Bitmap android.graphics.Bitmap.Config.ARGB_8888 true # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$setPixels @0 <type>android.graphics.Bitmap <type>int 0 EXP 0 0 EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$alpha <type>int this <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this EXP <type>int <type>int <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Color$alpha <type>int this <type>int # MethodDeclaration
android.graphics.Color$red <type>int this <type>int # MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # MethodDeclaration
android.graphics.Bitmap$getPixels @0 <type>android.graphics.Bitmap <type>int 0 <type>int 0 0 <type>int <type>int # end MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$setPixels @0 <type>android.graphics.Bitmap <type>int 0 EXP 0 0 EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$registerListener @0 <type>android.hardware.SensorManager this <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_UI # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$unregisterListener @0 <type>android.hardware.SensorManager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "One" # begin MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Two" # MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Three" # MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu "Four" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$toString EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.TabLayout$setupWithViewPager @0 <type>android.support.design.widget.TabLayout <type>ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.toolbar # begin MethodDeclaration
android.view.View$findViewById <type>ViewPager <type>android.view.View com.github.pockethub.R.id.vp_pages # MethodDeclaration
android.view.View$findViewById <type>android.support.design.widget.TabLayout <type>android.view.View com.github.pockethub.R.id.sliding_tabs_layout # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Loader$getId EXP <type>android.content.Loader # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Loader$getId EXP <type>android.content.Loader # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.content.pm.PackageManager$resolveActivity <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent android.content.pm.PackageManager.GET_RESOLVED_FILTER # end TryBlock
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>PicassoSampleAdapter # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ToggleButton$setOnCheckedChangeListener @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setVisibility @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ToggleButton$setChecked @0 <type>android.widget.ToggleButton false # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Cancel" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ProgressBarDownload.this "File upload complete" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ProgressBarDownload.this "Error downloading file" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Download" # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView null # MethodDeclaration
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_gplaycard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$get EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "You're toast!" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setFastScrollEnabled @0 <type>android.widget.ListView true # begin MethodDeclaration
android.widget.ListView$setDividerHeight @0 <type>android.widget.ListView 0 # MethodDeclaration
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.donnfelker.android.bootstrap.core.User <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception checking starring repository status" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.welcome_conduct_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.3f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 750 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>FragmentViewPagerAdapter # begin end MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.view_pager_indicator_item null # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.view_pager_indicator_name # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View in.srain.cube.views.ptr.demo.R.id.view_pager_indicator_tab_current # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$append @0 <type>android.util.SparseIntArray EXP EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # begin MethodDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this this # MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int EXP # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver3" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBounds EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP # MethodDeclaration
android.graphics.drawable.Drawable$getChangingConfigurations EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$setChangingConfigurations @0 <type>android.graphics.drawable.Drawable EXP # MethodDeclaration
android.graphics.drawable.Drawable$getLevel EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$setLevel @0 <type>android.graphics.drawable.Drawable EXP # MethodDeclaration
android.graphics.drawable.Drawable$isVisible EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$setVisible @0 <type>android.graphics.drawable.Drawable EXP false # MethodDeclaration
android.graphics.drawable.Drawable$getState EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable.Callback # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setTransformCallback @0 <type>android.graphics.drawable.Drawable <type>TransformCallback # begin end Block
<END>
<S2>
<S1>
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.os.Message$obtain EXP this <type>android.os.Handler <type>int <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 32 2 # begin MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 64 1 # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray 128 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_recyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#FFFFFF" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>Integer <type>android.util.AttributeSet MATERIALDESIGNXML "rippleColor" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeFloatValue <type>float <type>android.util.AttributeSet MATERIALDESIGNXML "rippleSpeed" 20f # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "rippleColor" EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Canvas$drawARGB @0 <type>android.graphics.Canvas 0 0 0 0 # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>Integer # begin MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP <type>android.graphics.Rect <type>android.graphics.Rect null # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception creating comment on commit" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float EXP <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat <type>android.animation.PropertyValuesHolder this "rotationX" 0 360 # begin MethodDeclaration
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.ObjectAnimator this EXP <type>android.animation.PropertyValuesHolder # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setRepeatCount @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 1500 # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$dispatchMessage @0 <type>android.os.Handler <type>android.os.Message # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onDownMotionEvent" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this "/bees.gif" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap <type>int <type>int # begin Block
android.graphics.Bitmap$getPixel EXP <type>android.graphics.Bitmap <type>int <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.RED # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.RED # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_listContainer # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_progressContainer # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_sticky <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.apod_list_item <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$setTag @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin MethodDeclaration
android.database.Cursor$getPosition <type>int <type>android.database.Cursor # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor APODPostsQuery.LARGE_IMAGE_URL_INDEX # MethodDeclaration
android.database.Cursor$copyStringToBuffer @0 <type>android.database.Cursor APODPostsQuery.TITLE_INDEX FIELD # MethodDeclaration
android.database.Cursor$copyStringToBuffer @0 <type>android.database.Cursor APODPostsQuery.DESCRIPTION_TEXT_INDEX FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this FIELD 0 FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD 0 FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this LOG_TAG "Can't select by touch. No data set." # begin end Block
<END>
<S2>
<S1>
android.content.Context$getExternalCacheDir EXP <type>android.content.Context # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.hardware.camera2.CameraManager <type>android.content.Context android.content.Context.CAMERA_SERVICE # begin TryBlock
android.hardware.camera2.CameraManager$getCameraIdList <type>String <type>android.hardware.camera2.CameraManager # end TryBlock
<END>
<S2>
<S1>
android.graphics.Color$colorToHSV @0 this <type>int <type>float # begin MethodDeclaration
android.graphics.Color$HSVToColor <type>int this <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver APODContract.CONTENT_URI null null null APODContract.Columns._ID # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnName EXP <type>android.database.Cursor <type>int # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end Block
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>int <type>android.content.ContentResolver APODContract.CONTENT_URI <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Before Request" # begin MethodDeclaration
android.util.Log$d @0 this <type>String "After Request" # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Error, not using SyncHttpClient" # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$setMultiChoiceModeListener @0 <type>android.widget.AbsListView <type>android.widget.AbsListView.MultiChoiceModeListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$setItemChecked @0 <type>android.widget.AbsListView <type>long true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$setItemChecked @0 <type>android.widget.AbsListView <type>long false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$isItemChecked <type>boolean <type>android.widget.AbsListView <type>long # begin MethodDeclaration
android.view.View$setActivated @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getHeaderViewsCount EXP <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getHeaderViewsCount <type>int <type>android.widget.ListView # begin end Block
<END>
<S2>
<S1>
android.app.Activity$startActionMode @0 <type>android.app.Activity <type>android.widget.AbsListView.MultiChoiceModeListener # begin end IfTrue
<END>
<S2>
<S1>
android.widget.AbsListView$getCheckedItemCount <type>int <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getResources <type>android.content.res.Resources <type>android.widget.AbsListView # begin Block
android.content.res.Resources$getQuantityString <type>String <type>android.content.res.Resources it.gmariotti.cardslib.library.R.plurals.card_selected_items <type>int <type>int # Block
android.view.ActionMode$setTitle @0 <type>android.view.ActionMode <type>String # end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getCheckedItemPositions <type>android.util.SparseBooleanArray <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseBooleanArray$keyAt EXP <type>android.util.SparseBooleanArray <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>com.squareup.leakcanary.HeapDump # MethodDeclaration
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin MethodDeclaration
android.content.Intent$getSerializableExtra <type>com.squareup.leakcanary.HeapDump <type>android.content.Intent <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "HeapAnalyzerService received a null intent, ignoring." # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$setCrossFadeEnabled @0 <type>android.graphics.drawable.TransitionDrawable true # begin Block
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # MethodDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # MethodDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # MethodDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$clearAnimation @0 <type>android.widget.ImageView # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.listview_header_hint_normal # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$clearAnimation @0 <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$clearAnimation @0 <type>android.widget.ImageView # begin Block
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # Block
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.listview_header_hint_release # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.refreshing # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.refresh_done # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$getLayoutParams <type>LayoutParams <type>android.widget.LinearLayout # begin MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$getLayoutParams <type>LayoutParams <type>android.widget.LinearLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this EXP <type>int # begin MethodDeclaration
android.animation.ValueAnimator$setDuration EXP <type>android.animation.ValueAnimator 300 # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 45 # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Gesture" "START" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Gesture" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "LongPress" "Chart longpressed." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "DoubleTap" "Chart double-tapped." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "SingleTap" "Chart single-tapped." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Fling" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Scale / Zoom" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Translate / Move" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Entry selected" EXP # begin MethodDeclaration
android.util.Log$i @0 this "" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Nothing selected" "Nothing selected." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofInt <type>android.animation.ObjectAnimator this FIELD io.plaidapp.util.ViewUtils.IMAGE_ALPHA EXP # begin Block
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 300 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # Block
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # end Block
android.animation.ObjectAnimator$addListener @0 <type>android.animation.ObjectAnimator EXP # begin Block
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor <type>int this EXP io.plaidapp.R.color.accent # begin MethodDeclaration
android.animation.ObjectAnimator$ofArgb <type>android.animation.ObjectAnimator this itemView io.plaidapp.util.ViewUtils.BACKGROUND_COLOR <type>int <type>int <type>int # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 1000L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.linear # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # end MethodDeclaration
android.animation.ObjectAnimator$addListener @0 <type>android.animation.ObjectAnimator EXP # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.media.session.MediaSession$setExtras @0 <type>android.media.session.MediaSession <type>android.os.Bundle # MethodDeclaration
android.support.v7.media.MediaRouter$setMediaSession @0 <type>android.support.v7.media.MediaRouter <type>android.media.session.MediaSession # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$remove @0 <type>android.os.Bundle <type>String # begin MethodDeclaration
android.media.session.MediaSession$setExtras @0 <type>android.media.session.MediaSession <type>android.os.Bundle # MethodDeclaration
android.support.v7.media.MediaRouter$setMediaSession @0 <type>android.support.v7.media.MediaRouter null # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession$getSessionToken EXP <type>android.media.session.MediaSession # begin MethodDeclaration
android.media.session.MediaSession$setCallback @0 <type>android.media.session.MediaSession EXP # MethodDeclaration
android.media.session.MediaSession$setFlags @0 <type>android.media.session.MediaSession EXP # MethodDeclaration
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this <type>android.content.Context 99 <type>android.content.Intent android.app.PendingIntent.FLAG_UPDATE_CURRENT # MethodDeclaration
android.media.session.MediaSession$setSessionActivity @0 <type>android.media.session.MediaSession <type>android.app.PendingIntent # MethodDeclaration
android.media.session.MediaSession$setExtras @0 <type>android.media.session.MediaSession <type>android.os.Bundle # MethodDeclaration
android.support.v7.media.MediaRouter$getInstance <type>android.support.v7.media.MediaRouter this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent com.example.android.uamp.utils.CarHelper.MEDIA_CONNECTION_STATUS # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # end Block
<END>
<S2>
<S1>
android.media.session.MediaSession$release @0 <type>android.media.session.MediaSession # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession$setQueue @0 <type>android.media.session.MediaSession <type>java.util.List # begin Block
android.media.session.MediaSession$setQueueTitle @0 <type>android.media.session.MediaSession EXP # end Block
<END>
<S2>
<S1>
android.media.session.MediaSession$setQueue @0 <type>android.media.session.MediaSession <type>java.util.List # begin MethodDeclaration
android.media.session.MediaSession$setQueueTitle @0 <type>android.media.session.MediaSession <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_MEDIA_ID # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession$setQueue @0 <type>android.media.session.MediaSession <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession$setActive @0 <type>android.media.session.MediaSession true # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin end MethodDeclaration
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_MEDIA_ID # begin end MethodDeclaration
android.media.session.MediaSession$setMetadata @0 <type>android.media.session.MediaSession <type>android.media.MediaMetadata # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin Block
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # Block
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # Block
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # Block
android.media.MediaMetadata$getString EXP <type>android.media.MediaMetadata com.example.android.uamp.model.MusicProvider.CUSTOM_METADATA_TRACK_SOURCE # end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession$setMetadata @0 <type>android.media.session.MediaSession <type>android.media.MediaMetadata # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.media.session.PlaybackState.Builder$setState @0 <type>android.media.session.PlaybackState.Builder <type>int <type>long 1.0f EXP # end MethodDeclaration
android.media.session.PlaybackState.Builder$build EXP <type>android.media.session.PlaybackState.Builder # begin MethodDeclaration
android.media.session.MediaSession$setPlaybackState @0 <type>android.media.session.MediaSession EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState.Builder$setErrorMessage @0 <type>android.media.session.PlaybackState.Builder <type>String # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getQueueId EXP <type>android.media.session.MediaSession.QueueItem # begin Block
android.media.session.PlaybackState.Builder$setActiveQueueItemId @0 <type>android.media.session.PlaybackState.Builder EXP # end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_MEDIA_ID # begin end Block
android.media.session.PlaybackState.Builder$addCustomAction @0 <type>android.media.session.PlaybackState.Builder EXP # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin Block
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_colors <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.5f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 210 122 255 # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean EXP <type>android.os.Bundle <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.donnfelker.android.bootstrap.R.layout.item_list null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View android.R.id.list # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ProgressBar <type>android.view.View com.donnfelker.android.bootstrap.R.id.pb_loading # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View android.R.id.empty # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.donnfelker.android.bootstrap.R.menu.bootstrap <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.Loader$clearException EXP <type>android.support.v4.content.Loader # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin ConstructorDeclaration
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # ConstructorDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myQueue EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_WEB_LOGIN_E2E <type>String # begin MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_WEB_LOGIN_SWITCHBACK_TIME EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_APP_ID <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_PERMISSIONS # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_ACCESS_TOKEN # end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_USER_ID # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.AccessToken.ACCESS_TOKEN_KEY # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "granted_scopes" # end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "denied_scopes" # begin end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "signed_request" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this EXP android.util.Base64.DEFAULT # begin end Block
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent android.content.Intent.ACTION_SEND # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT "#io15wifi " # MethodDeclaration
android.content.Intent$setType @0 <type>android.content.Intent "text/plain" # MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setPackage @0 <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this "HelloFacebook" "Canceled" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "HelloFacebook" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "HelloFacebook" "Success!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.Button$setEnabled @0 <type>android.widget.Button EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView null # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.icon # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.InkPageIndicator_dotDiameter EXP # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.InkPageIndicator_dotGap EXP # ConstructorDeclaration
android.content.res.TypedArray$getInteger <type>long <type>android.content.res.TypedArray io.plaidapp.R.styleable.InkPageIndicator_animationDuration <type>int # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.InkPageIndicator_pageIndicatorColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.InkPageIndicator_currentPageIndicatorColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$addOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin MethodDeclaration
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # MethodDeclaration
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin end MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$op @0 <type>android.graphics.Path EXP android.graphics.Path.Op.UNION # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$op @0 <type>android.graphics.Path EXP android.graphics.Path.Op.UNION # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$addCircle @0 <type>android.graphics.Path EXP <type>float <type>float android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$op @0 <type>android.graphics.Path <type>android.graphics.Path android.graphics.Path.Op.UNION # Block
android.graphics.Path$rewind @0 <type>android.graphics.Path # Block
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 EXP true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$op @0 <type>android.graphics.Path <type>android.graphics.Path android.graphics.Path.Op.UNION # end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # begin Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 90 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # Block
android.graphics.Path$arcTo @0 <type>android.graphics.Path <type>android.graphics.RectF 270 180 true # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # Block
android.graphics.Path$cubicTo @0 <type>android.graphics.Path <type>float <type>float <type>float <type>float <type>float <type>float # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP <type>float EXP <type>float # begin Block
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float android.graphics.Path.Direction.CW # end Block
<END>
<S2>
<S1>
android.graphics.Path$addCircle @0 <type>android.graphics.Path <type>float <type>float EXP android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$rewind @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>float <type>float <type>float <type>float # MethodDeclaration
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float <type>float android.graphics.Path.Direction.CW # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>float <type>float # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator <type>android.view.animation.Interpolator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "PageIndicator" EXP # begin end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet$cancel @0 <type>android.animation.AnimatorSet # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$setTranslationX @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0.0F # begin Block
android.view.View$setClickable @0 <type>android.view.View false # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1.0F # begin Block
android.view.View$setClickable @0 <type>android.view.View true # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.ActivityCompat$requestPermissions @0 this this EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getDataString EXP <type>android.content.Intent # begin Block
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.content.Intent$getSerializableExtra <type>Exception <type>android.content.Intent com.afollestad.materialcamera.MaterialCamera.ERROR_EXTRA # begin Block
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Videos will be saved in a cache directory instead of an external storage directory since permission was denied." android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.TouchUtils$touchAndCancelView @0 this this <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Handling in onOptionsItemSelected avoided" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.settings_action_provider null # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View R.id.button # end MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setId @0 <type>android.widget.ListView android.R.id.list # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PullToRefresh_ptrListViewExtrasEnabled true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.LoadingLayout <type>android.widget.FrameLayout.LayoutParams # begin Block
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>com.handmark.pulltorefresh.library.internal.LoadingLayout <type>android.widget.FrameLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setOnTouchListener @0 <type>android.widget.FrameLayout EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getActionIndex <type>int <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent <type>int # Block
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>MarkerView # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getActionIndex <type>int <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$removeView @0 <type>android.widget.FrameLayout <type>MarkerView # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "unhandled action" # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # begin ConstructorDeclaration
android.graphics.Paint$setARGB @0 <type>android.graphics.Paint 255 EXP EXP EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this "/dummy/path" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$hasThumbnail EXP <type>android.media.ExifInterface # begin MethodDeclaration
android.media.ExifInterface$getThumbnail EXP <type>android.media.ExifInterface # MethodDeclaration
android.media.ExifInterface$getAttribute EXP <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION # end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$hasThumbnail EXP <type>android.media.ExifInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getActivity EXP <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$getParentFragment <type>android.app.Fragment <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setId @0 <type>android.widget.GridView R.id.gridview # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int EXP false # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler this 1000 # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.afollestad.materialcamera.R.layout.mcam_fragment_videocapture <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View com.afollestad.materialcamera.R.id.video # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View com.afollestad.materialcamera.R.id.facing # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.afollestad.materialcamera.R.id.recordDuration # MethodDeclaration
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton EXP # end MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton this # begin MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton this # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.afollestad.materialcamera.R.id.controlsFrame # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton com.afollestad.materialcamera.R.drawable.mcam_action_stop # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton com.afollestad.materialcamera.R.drawable.mcam_action_capture # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "output_uri" # begin end IfTrue
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end IfFalse
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.media.MediaRecorder$reset @0 <type>android.media.MediaRecorder # begin Block
android.media.MediaRecorder$release @0 <type>android.media.MediaRecorder # end Block
<END>
<S2>
<S1>
android.media.MediaRecorder$stop @0 <type>android.media.MediaRecorder # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "output_uri" <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setResult @0 <type>android.app.Activity android.app.Activity.RESULT_CANCELED EXP # begin Block
android.app.Activity$finish @0 <type>android.app.Activity # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.txt_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.txt_title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "THE HEADER!" # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "THE FOOTER!" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScrollStateChanged @0 <type>android.widget.AbsListView.OnScrollListener null <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutManager <type>android.support.v7.widget.LinearLayoutManager <type>android.support.v7.widget.RecyclerView # begin MethodDeclaration
android.support.v7.widget.LinearLayoutManager$findFirstVisibleItemPosition <type>int <type>android.support.v7.widget.LinearLayoutManager # MethodDeclaration
android.support.v7.widget.LinearLayoutManager$findLastVisibleItemPosition EXP <type>android.support.v7.widget.LinearLayoutManager # MethodDeclaration
android.support.v7.widget.RecyclerView$getAdapter EXP <type>android.support.v7.widget.RecyclerView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$onScroll @0 <type>android.widget.AbsListView.OnScrollListener null <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getWidth <type>int <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getWidth <type>int <type>android.widget.AbsListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getLocationOnScreen @0 <type>android.widget.AbsListView <type>int # begin MethodDeclaration
android.widget.AbsListView$getFirstVisiblePosition EXP <type>android.widget.AbsListView # MethodDeclaration
android.widget.AbsListView$getChildAt <type>android.view.View <type>android.widget.AbsListView EXP # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_DOWN <type>float <type>int 0 # end MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # begin MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # MethodDeclaration
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_UP <type>float <type>int 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin Block
android.os.SystemClock$uptimeMillis EXP this # Block
android.view.MotionEvent$obtain EXP this EXP EXP android.view.MotionEvent.ACTION_MOVE <type>float <type>int 0 # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCurrent @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setLevel @0 <type>android.graphics.drawable.Drawable EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$stop @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$start @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate @0 <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCurrent @0 <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.ColorDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this EXP 0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Notification.Builder$build EXP <type>android.app.Notification.Builder # begin MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin MethodDeclaration
android.transition.ArcMotion$setMinimumHorizontalAngle @0 <type>android.transition.ArcMotion 50f # MethodDeclaration
android.transition.ArcMotion$setMinimumVerticalAngle @0 <type>android.transition.ArcMotion 50f # MethodDeclaration
android.app.Activity$getIntent EXP <type>android.app.Activity # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator <type>android.view.animation.Interpolator this <type>android.app.Activity android.R.interpolator.fast_out_slow_in # end MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getWindow EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_viewgroup <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.fragment_rotate_header_with_view_group_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putFloat @0 <type>android.content.SharedPreferences.Editor <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences <type>String 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences <type>String 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getFloat EXP <type>android.content.SharedPreferences <type>String 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getFloat EXP <type>android.content.SharedPreferences <type>String <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getAll EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$clear @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$remove @0 <type>android.content.SharedPreferences.Editor <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 128 128 android.graphics.Bitmap.Config.ALPHA_8 # begin MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle "picture" # MethodDeclaration
android.os.Bundle$getParcelable EXP <type>android.os.Bundle "picture" # end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$setLatitude @0 <type>android.location.Location 47.6204 # begin MethodDeclaration
android.location.Location$setLongitude @0 <type>android.location.Location EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.net.Uri$getQueryParameter EXP <type>android.net.Uri "sdk" # MethodDeclaration
android.net.Uri$getQueryParameter EXP <type>android.net.Uri "format" # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri "access_token" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.MemoryFile$allowPurging @0 <type>android.os.MemoryFile false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.MemoryFile$getOutputStream <type>java.io.OutputStream <type>android.os.MemoryFile # begin end TryBlock
<END>
<S2>
<S1>
android.os.MemoryFile$writeBytes @0 <type>android.os.MemoryFile <type>byte 0 <type>int FIELD # begin end Block
<END>
<S2>
<S1>
android.os.MemoryFile$getDeclaredMethod <type>java.lang.reflect.Method this "getFileDescriptor" # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor <type>android.graphics.Bitmap this <type>java.io.FileDescriptor null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.os.MemoryFile$close @0 <type>android.os.MemoryFile # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_NAME EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TITLE EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_COLOR FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$getLatitude EXP <type>android.location.Location # begin Block
android.location.Location$getLongitude EXP <type>android.location.Location # end Block
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri.Builder$toString EXP <type>android.net.Uri.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "," <type>ArrayList # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "&" <type>ArrayList # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 100 <type>OutputStream # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu <type>int <type>int <type>int <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add EXP <type>android.view.Menu <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SubMenu$getItem <type>android.view.MenuItem <type>android.view.SubMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$addSubMenu EXP <type>android.view.Menu <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$addSubMenu EXP <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$addSubMenu EXP <type>android.view.Menu <type>int <type>int <type>int <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$addSubMenu EXP <type>android.view.Menu <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$addIntentOptions <type>int <type>android.view.Menu <type>int <type>int <type>int <type>android.content.ComponentName <type>android.content.Intent <type>android.content.Intent <type>int <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.Menu$addIntentOptions <type>int <type>android.view.Menu <type>int <type>int <type>int <type>android.content.ComponentName <type>android.content.Intent <type>android.content.Intent <type>int null # begin end Block
<END>
<S2>
<S1>
android.view.Menu$findItem EXP <type>android.view.Menu <type>int # begin MethodDeclaration
android.view.Menu$removeItem @0 <type>android.view.Menu <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$removeGroup @0 <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$getItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end Block
<END>
<S2>
<S1>
android.view.Menu$clear @0 <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$getItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end Block
<END>
<S2>
<S1>
android.view.Menu$setGroupCheckable @0 <type>android.view.Menu <type>int <type>boolean <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$setGroupVisible @0 <type>android.view.Menu <type>int <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$setGroupEnabled @0 <type>android.view.Menu <type>int <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$hasVisibleItems EXP <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$size EXP <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$getItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$close @0 <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$performShortcut EXP <type>android.view.Menu <type>int <type>android.view.KeyEvent <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$isShortcutKey EXP <type>android.view.Menu <type>int <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$performIdentifierAction EXP <type>android.view.Menu <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$setQwertyMode @0 <type>android.view.Menu <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float EXP # Block
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF 5 5 <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.4f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme <type>String <type>android.net.Uri # begin end MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
android.net.Uri$parse EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_card_expand <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ScrollView <type>android.view.View it.gmariotti.cardslib.demo.R.id.card_scrollview # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_main_inner_simple_title # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView mTitle # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_inside_image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView it.gmariotti.cardslib.demo.R.drawable.rose # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>IconPagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.Point$set @0 <type>android.graphics.Point EXP EXP # begin MethodDeclaration
android.graphics.Point$set @0 <type>android.graphics.Point EXP EXP # MethodDeclaration
android.graphics.Point$set @0 <type>android.graphics.Point EXP EXP # MethodDeclaration
android.graphics.Point$set @0 <type>android.graphics.Point EXP EXP # MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP center.y # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path FIELD FIELD FIELD FIELD EXP center.y # MethodDeclaration
android.graphics.Path$cubicTo @0 <type>android.graphics.Path FIELD FIELD FIELD FIELD EXP center.y # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>IonDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getAdjustViewBounds EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>IonDrawable <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getMeasuredWidth <type>int <type>android.widget.ImageView # begin Block
android.widget.ImageView$getMeasuredHeight <type>int <type>android.widget.ImageView # end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBitmap EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBitmap EXP <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Issue <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_birthday_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$computeScrollOffset EXP <type>android.widget.OverScroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$computeScrollOffset @0 <type>android.widget.OverScroller # begin end Block
<END>
<S2>
<S1>
android.widget.OverScroller$fling @0 <type>android.widget.OverScroller <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$forceFinished @0 <type>android.widget.OverScroller <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$isFinished EXP <type>android.widget.OverScroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$getCurrX EXP <type>android.widget.OverScroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.OverScroller$getCurrY EXP <type>android.widget.OverScroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Looper$getMainLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$registerActivityLifecycleCallbacks @0 <type>android.app.Application <type>android.app.Application.ActivityLifecycleCallbacks # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Application$unregisterActivityLifecycleCallbacks @0 <type>android.app.Application <type>android.app.Application.ActivityLifecycleCallbacks # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnNames EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnCount <type>int <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$getDouble EXP <type>android.database.Cursor <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$getBlob EXP <type>android.database.Cursor <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this context # begin ConstructorDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.github.pockethub.R.id.tv_loading # ConstructorDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView loadingResId # end ConstructorDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setBackgroundColor @0 <type>android.widget.RelativeLayout <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "mColorRes" # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "mColorRes" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$prepare @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onStart()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onStart" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>byte # MethodDeclaration
android.util.Log$d @0 this <type>String "onSuccess" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>int # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>byte # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>Throwable # MethodDeclaration
android.util.Log$d @0 this <type>String "onFailure" # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onCancel" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onFinish" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create <type>android.support.v4.app.TaskStackBuilder this this # begin end MethodDeclaration
android.support.v4.app.TaskStackBuilder$startActivities @0 <type>android.support.v4.app.TaskStackBuilder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.ColorStateList$getDefaultColor EXP <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_recyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.support.v4.app.Fragment$getView <type>android.view.ViewGroup <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup R.id.container # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.app.BackgroundManager$getInstance <type>android.support.v17.leanback.app.BackgroundManager this EXP # begin MethodDeclaration
android.support.v17.leanback.app.BackgroundManager$attach @0 <type>android.support.v17.leanback.app.BackgroundManager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRowPresenter$setOnActionClickedListener @0 <type>android.support.v17.leanback.widget.PlaybackControlsRowPresenter EXP # begin MethodDeclaration
android.support.v17.leanback.widget.ClassPresenterSelector$addClassPresenter @0 <type>android.support.v17.leanback.widget.ClassPresenterSelector android.support.v17.leanback.widget.PlaybackControlsRow <type>android.support.v17.leanback.widget.PlaybackControlsRowPresenter # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$play @0 <type>android.media.session.MediaController.TransportControls # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$pause @0 <type>android.media.session.MediaController.TransportControls # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToNext @0 <type>android.media.session.MediaController.TransportControls # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToPrevious @0 <type>android.media.session.MediaController.TransportControls # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.Action$nextIndex @0 <type>android.support.v17.leanback.widget.Action # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow # begin MethodDeclaration
android.support.v17.leanback.widget.PlaybackControlsRow$setPrimaryActionsAdapter @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow <type>android.support.v17.leanback.widget.ArrayObjectAdapter # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow.SkipPreviousAction # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow.SkipNextAction # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$clear @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$remove @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.ListRow # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.media.session.MediaSession.QueueItem # begin end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ClassPresenterSelector$addClassPresenter @0 <type>android.support.v17.leanback.widget.ClassPresenterSelector android.support.v17.leanback.widget.ListRow EXP # begin Block
android.support.v17.leanback.widget.ArrayObjectAdapter$add @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.ListRow # end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.ListRow # begin Block
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.Action # begin Block
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # end Block
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRow$setTotalTime @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow 0 # begin MethodDeclaration
android.support.v17.leanback.widget.PlaybackControlsRow$setCurrentTime @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow 0 # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRow$getTotalTime EXP <type>android.support.v17.leanback.widget.PlaybackControlsRow # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin MethodDeclaration
android.support.v17.leanback.widget.PlaybackControlsRow$setCurrentTime @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow <type>int # MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRow$setImageDrawable @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow <type>android.graphics.drawable.Drawable # begin Block
android.support.v17.leanback.app.BackgroundManager$setDrawable @0 <type>android.support.v17.leanback.app.BackgroundManager <type>android.graphics.drawable.Drawable # Block
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow # Block
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getLong <type>int <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_DURATION # begin MethodDeclaration
android.support.v17.leanback.widget.PlaybackControlsRow$setTotalTime @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow <type>int # MethodDeclaration
android.support.v17.leanback.widget.PlaybackControlsRow$getItem EXP <type>android.support.v17.leanback.widget.PlaybackControlsRow # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow # MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getPosition <type>long <type>android.media.session.PlaybackState # begin MethodDeclaration
android.media.session.PlaybackState$getLastPositionUpdateTime <type>long <type>android.media.session.PlaybackState # end MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$indexOf EXP <type>android.support.v17.leanback.widget.ArrayObjectAdapter <type>android.support.v17.leanback.widget.PlaybackControlsRow # begin MethodDeclaration
android.support.v17.leanback.widget.ArrayObjectAdapter$notifyArrayItemRangeChanged @0 <type>android.support.v17.leanback.widget.ArrayObjectAdapter EXP 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction$setIndex @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction.PAUSE # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction$setIndex @0 <type>android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction android.support.v17.leanback.widget.PlaybackControlsRow.PlayPauseAction.PLAY # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE <type>android.accounts.AccountAuthenticatorResponse # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE <type>android.accounts.AccountAuthenticatorResponse # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Retrieving OAuth2 token" # begin end MethodDeclaration
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.content.Context # begin MethodDeclaration
android.accounts.AccountManager$getPassword <type>String <type>android.accounts.AccountManager <type>android.accounts.Account # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT EXP # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_NAME FIELD # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_TYPE com.github.pockethub.accounts.AccountConstants.ACCOUNT_TYPE # Block
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN <type>String # Block
android.accounts.AccountManager$clearPassword @0 <type>android.accounts.AccountManager <type>android.accounts.Account # end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_BOOLEAN_RESULT false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE <type>android.accounts.AccountAuthenticatorResponse # end MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.github.pockethub.accounts.LoginActivity.PARAM_USERNAME FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int <type>int android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this "Ion" EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences$getAll <type>java.util.Map <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$getLong <type>long <type>android.os.Bundle <type>String 0L # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getSerializable EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>AccessTokenSource # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getLong EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getLong <type>long <type>android.os.Bundle <type>String <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$get <type>Object <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String "{}" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBooleanArray @0 <type>android.os.Bundle <type>String <type>boolean # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putByte @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle <type>String <type>byte # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putShort @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putShortArray @0 <type>android.os.Bundle <type>String <type>short # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putIntArray @0 <type>android.os.Bundle <type>String <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putLong @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putLongArray @0 <type>android.os.Bundle <type>String <type>long # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putFloat @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putFloatArray @0 <type>android.os.Bundle <type>String <type>float # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putDouble @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putDoubleArray @0 <type>android.os.Bundle <type>String <type>double # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putChar @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putCharArray @0 <type>android.os.Bundle <type>String <type>char # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>Enum # begin end TryBlock
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.DialogFragment$show @0 <type>android.app.DialogFragment EXP "Alert" # begin end SwitchCase
<END>
<S2>
<S1>
android.app.DialogFragment$show @0 <type>android.app.DialogFragment EXP "Shutdown" # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button false # begin end Block
<END>
<S2>
<S1>
android.app.DialogFragment$dismiss @0 <type>android.app.DialogFragment # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog "Activity Shutting Down." # begin MethodDeclaration
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog true # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$performClick @0 <type>android.widget.Button # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float EXP EXP FIELD <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RatingBar$setOnRatingBarChangeListener @0 <type>android.widget.RatingBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.ColorDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$setPadding @0 <type>android.view.View <type>int 0 <type>int 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setPaddingRelative @0 <type>android.view.View EXP 0 <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View EXP 0 <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getDeclaredField <type>java.lang.reflect.Field this "mScroller" # begin TryBlock
android.support.v4.view.ViewPager$getDeclaredField <type>java.lang.reflect.Field this "sInterpolator" # end TryBlock
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_staggeredgrid <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplication EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityAnimations1Binding this this R.layout.activity_animations1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent EXTRA_SAMPLE <type>Sample # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.ImageView$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.widget.ImageView # end MethodDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.ImageView$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.widget.ImageView # end MethodDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.widget.LinearLayout.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getLinkTextColors EXP <type>android.widget.TextView # begin Block
android.widget.TextView$getHighlightColor EXP <type>android.widget.TextView # end Block
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_recyclerview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView <type>android.view.View R.id.scroll # MethodDeclaration
android.view.LayoutInflater$from EXP this <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin MethodDeclaration
android.app.Application$getApplicationContext EXP <type>android.app.Application # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.TabLayout$setupWithViewPager @0 <type>android.support.design.widget.TabLayout <type>ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin ClassDeclaration
android.net.Uri$withAppendedPath <type>android.net.Uri this <type>android.net.Uri <type>String # end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getStyle <type>android.graphics.Paint.Style <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$getColor <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int <type>int EXP <type>int <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint <type>android.graphics.Paint.Style # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getTitle EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this org.robolectric.RuntimeEnvironment.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN <type>AccessToken # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN <type>AccessToken # MethodDeclaration
android.support.v4.content.LocalBroadcastManager$sendBroadcast @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.share_it_view <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.facebook.login.widget.LoginButton <type>android.view.View R.id.login_button # MethodDeclaration
android.view.View$findViewById <type>com.facebook.share.widget.LikeView <type>android.view.View R.id.like_page # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.support.v4.view.ViewPager <type>android.view.View R.id.pager # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>android.support.v4.view.PagerAdapter # MethodDeclaration
android.view.View$findViewById <type>PageSelector <type>android.view.View R.id.page_selector # MethodDeclaration
android.view.View$findViewById <type>com.facebook.share.widget.LikeView <type>android.view.View R.id.like_photo # end MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar R.string.app_name # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray com.thefinestartist.finestwebview.R.styleable.ShadowLayout_slCornerRadius EXP # begin TryBlock
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray com.thefinestartist.finestwebview.R.styleable.ShadowLayout_slShadowSize EXP # TryBlock
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray com.thefinestartist.finestwebview.R.styleable.ShadowLayout_slDx 0 # TryBlock
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray com.thefinestartist.finestwebview.R.styleable.ShadowLayout_slDy 0 # TryBlock
android.support.v4.content.ContextCompat$getColor EXP this EXP com.thefinestartist.finestwebview.R.color.finestBlack10 # TryBlock
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.thefinestartist.finestwebview.R.styleable.ShadowLayout_slShadowColor EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ALPHA_8 # begin end MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setShadowLayer @0 <type>android.graphics.Paint <type>float <type>float <type>float <type>int # MethodDeclaration
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>float <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.explore_sessions_frag <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.CollectionView <type>android.view.View com.google.samples.apps.iosched.R.id.collection_view # end MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.empty # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.net.Uri # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.net.Uri <type>android.os.Bundle "_uri" # begin end MethodDeclaration
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Message$obtain EXP this <type>SearchHandler SearchHandler.MESSAGE_QUERY_UPDATE <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.indicator_in_schedule # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.info_view # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.session_type_text # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor ExploreSessionsQuery.TITLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor ExploreSessionsQuery.ROOM_NAME # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor ExploreSessionsQuery.SESSION_START # MethodDeclaration
android.database.Cursor$getLong <type>long <type>android.database.Cursor ExploreSessionsQuery.SESSION_END # end MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor ExploreSessionsQuery.TAGS # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor ExploreSessionsQuery.PHOTO_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor ExploreSessionsQuery.SESSION_ID # MethodDeclaration
android.view.View$setTag @0 <type>android.view.View EXP # end MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor ExploreSessionsQuery.IN_MY_SCHEDULE # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor ExploreSessionsQuery.SESSION_ID # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.unknown_room # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView com.google.samples.apps.iosched.R.drawable.io_logo # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View android.R.id.text1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setAnimation @0 <type>android.widget.TextView <type>android.view.animation.Animation # begin MethodDeclaration
android.view.animation.Animation$start @0 <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glReadBuffer @0 this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDrawRangeElements @0 this <type>int <type>int <type>int <type>int <type>int <type>java.nio.Buffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDrawRangeElements @0 this <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glTexImage3D @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>java.nio.Buffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glTexImage3D @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glTexSubImage3D @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>java.nio.Buffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glTexSubImage3D @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glCopyTexSubImage3D @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenQueries @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenQueries @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteQueries @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteQueries @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glIsQuery EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBeginQuery @0 this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glEndQuery @0 this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetQueryiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetQueryObjectuiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUnmapBuffer EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetBufferPointerv EXP this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDrawBuffers @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix2x3fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix3x2fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix2x4fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix4x2fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix3x4fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformMatrix4x3fv @0 this <type>int <type>int <type>boolean <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBlitFramebuffer @0 this <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glRenderbufferStorageMultisample @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glFramebufferTextureLayer @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glFlushMappedBufferRange @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBindVertexArray @0 this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteVertexArrays @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteVertexArrays @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenVertexArrays @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenVertexArrays @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glIsVertexArray EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBeginTransformFeedback @0 this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glEndTransformFeedback @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBindBufferRange @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBindBufferBase @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glTransformFeedbackVaryings @0 this <type>int <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glVertexAttribIPointer @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetVertexAttribIiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetVertexAttribIuiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glVertexAttribI4i @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glVertexAttribI4ui @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetUniformuiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetFragDataLocation EXP this <type>int <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniform1uiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniform3uiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniform4uiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glClearBufferiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glClearBufferuiv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glClearBufferfv @0 this <type>int <type>int <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glClearBufferfi @0 this <type>int <type>int <type>float <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetStringi EXP this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glCopyBufferSubData @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetUniformIndices @0 this <type>int <type>String <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetActiveUniformsiv @0 this <type>int <type>int <type>java.nio.IntBuffer <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetUniformBlockIndex EXP this <type>int <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetActiveUniformBlockiv @0 this <type>int <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetActiveUniformBlockName @0 this <type>int <type>int <type>java.nio.Buffer <type>java.nio.Buffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetActiveUniformBlockName EXP this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glUniformBlockBinding @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDrawArraysInstanced @0 this <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDrawElementsInstanced @0 this <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetInteger64v @0 this <type>int <type>java.nio.LongBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetBufferParameteri64v @0 this <type>int <type>int <type>java.nio.LongBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenSamplers @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenSamplers @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteSamplers @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteSamplers @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glIsSampler EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBindSampler @0 this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glSamplerParameteri @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glSamplerParameteriv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glSamplerParameterf @0 this <type>int <type>int <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glSamplerParameterfv @0 this <type>int <type>int <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetSamplerParameteriv @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGetSamplerParameterfv @0 this <type>int <type>int <type>java.nio.FloatBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glVertexAttribDivisor @0 this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glBindTransformFeedback @0 this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteTransformFeedbacks @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glDeleteTransformFeedbacks @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenTransformFeedbacks @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glGenTransformFeedbacks @0 this <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glIsTransformFeedback EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glPauseTransformFeedback @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glResumeTransformFeedback @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glProgramParameteri @0 this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glInvalidateFramebuffer @0 this <type>int <type>int <type>java.nio.IntBuffer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.GLES30$glInvalidateSubFramebuffer @0 this <type>int <type>int <type>java.nio.IntBuffer <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle ContentResolver.SYNC_EXTRAS_MANUAL true # begin Block
android.os.Bundle$putBoolean @0 <type>android.os.Bundle ContentResolver.SYNC_EXTRAS_EXPEDITED true # end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle SyncAdapter.EXTRA_SYNC_USER_DATA_ONLY true # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle SyncAdapter.EXTRA_SYNC_USER_DATA_ONLY false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # begin MethodDeclaration
android.net.ConnectivityManager$getActiveNetworkInfo EXP <type>android.net.ConnectivityManager # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Instrumentation$newApplication <type>T this <type>Class EXP # begin end TryBlock
<END>
<S2>
<S1>
android.app.Application$onTerminate @0 <type>android.app.Application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$create EXP this null # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$close @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getName EXP this # begin ConstructorDeclaration
android.app.FragmentManager$getName EXP this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getView EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentById EXP <type>android.app.FragmentManager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$findFragmentByTag EXP <type>android.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_webview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableWebView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # begin MethodDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>BitmapFetchRunnable <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$draw @0 <type>android.view.View <type>android.graphics.Canvas # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin Block
android.view.View$getHeight <type>int <type>android.view.View # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.RGB_565 # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 <type>int <type>int # Block
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 <type>int <type>int # Block
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.CENTER # Block
android.graphics.Canvas$setMatrix @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat FIELD <type>android.util.Base64OutputStream # MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$interrupt @0 <type>android.os.HandlerThread # begin MethodDeclaration
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>BitmapFetchRunnable # MethodDeclaration
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>EventDispatchRunnable # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener 1 1f 2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int 108f 109 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener 110 <type>float <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.net.Uri$encode <type>String this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail <type>android.graphics.Bitmap this <type>String android.provider.MediaStore.Images.Thumbnails.FULL_SCREEN_KIND # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 0 <type>java.io.ByteArrayOutputStream # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this <type>String # end MethodDeclaration
android.content.ContentResolver$openInputStream EXP <type>android.content.ContentResolver <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getLastPathSegment EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 0 <type>java.io.ByteArrayOutputStream # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.MimeTypeMap$getFileExtensionFromUrl <type>String this <type>String # begin MethodDeclaration
android.webkit.MimeTypeMap$getSingleton EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin TryBlock
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # end TryBlock
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP 0f 0f <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP 0f 0f <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP 0f 0f <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading labels" <type>retrofit.RetrofitError # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestGray # begin MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 0 EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestWhite # MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 1 EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestBlack # MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 2 EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestBlack # MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 3 EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestSilver # MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray 4 EXP # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "statusBarColor" <type>int # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "toolbarColor" <type>int # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "toolbarScrollFlags" EXP # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "iconDefaultColor" <type>int # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "iconDisabledColor" EXP # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "iconPressedColor" <type>int # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "iconSelector" R.drawable.selector_grey # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showDivider" true # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "gradientDivider" true # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestBlack10 # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "dividerColor" EXP # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "dividerHeight" EXP # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showProgressBar" true # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "progressBarColor" <type>int # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "progressBarHeight" EXP # MethodDeclaration
android.content.Intent$getSerializableExtra EXP <type>android.content.Intent "progressBarPosition" # MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "titleDefault" # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "updateTitleFromHtml" true # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "titleSize" EXP # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "titleFont" # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "titleFont" # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "titleColor" <type>int # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showUrl" true # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "urlSize" EXP # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "urlFont" # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "urlFont" # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "urlColor" <type>int # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestWhite # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "menuColor" EXP # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestBlack10 # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "menuDropShadowColor" EXP # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "menuDropShadowSize" EXP # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "menuSelector" R.drawable.selector_grey # MethodDeclaration
android.content.Intent$getFloatExtra <type>float <type>android.content.Intent "menuTextSize" EXP # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "menuTextFont" # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "menuTextFont" # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.finestBlack # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "menuTextColor" EXP # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showMenuRefresh" true # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "stringResRefresh" R.string.refresh # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showMenuShareVia" true # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "stringResShareVia" R.string.share_via # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showMenuCopyLink" true # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "stringResCopyLink" R.string.copy_link # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "showMenuOpenWith" true # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "stringResOpenWith" R.string.open_with # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "animationCloseEnter" R.anim.modal_activity_close_enter # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "animationCloseExit" R.anim.modal_activity_close_exit # MethodDeclaration
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "backPressToClose" false # MethodDeclaration
android.content.Intent$getIntExtra <type>int <type>android.content.Intent "stringResCopiedToClipboard" R.string.copied_to_clipboard # MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "url" # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$setLayoutParams @0 <type>android.support.design.widget.AppBarLayout <type>android.support.design.widget.CoordinatorLayout.LayoutParams # begin Block
android.support.design.widget.CoordinatorLayout$requestLayout @0 <type>android.support.design.widget.CoordinatorLayout # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setMinimumHeight @0 <type>android.widget.RelativeLayout <type>float # begin Block
android.widget.RelativeLayout$setLayoutParams @0 <type>android.widget.RelativeLayout <type>android.widget.LinearLayout.LayoutParams # Block
android.support.design.widget.CoordinatorLayout$requestLayout @0 <type>android.support.design.widget.CoordinatorLayout # end Block
<END>
<S2>
<S1>
android.widget.TextView$setMaxWidth @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setMaxWidth @0 <type>android.widget.TextView <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.support.design.widget.CoordinatorLayout.LayoutParams <type>android.view.View # begin Block
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 <type>float 0 0 # Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.support.design.widget.CoordinatorLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setMinimumHeight @0 <type>android.widget.ProgressBar <type>float # begin end Block
android.widget.ProgressBar$setLayoutParams @0 <type>android.widget.ProgressBar <type>android.support.design.widget.CoordinatorLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 0 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 EXP 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 <type>float 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 EXP 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.view.Window$clearFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS # begin Block
android.view.Window$addFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS # Block
android.view.Window$setStatusBarColor @0 <type>android.view.Window <type>int # end Block
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$addOnOffsetChangedListener @0 <type>android.support.design.widget.AppBarLayout this # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setBackgroundColor @0 <type>android.support.v7.widget.Toolbar <type>int # begin Block
android.support.v7.widget.Toolbar$getLayoutParams <type>android.support.design.widget.AppBarLayout.LayoutParams <type>android.support.v7.widget.Toolbar # Block
android.support.design.widget.AppBarLayout.LayoutParams$setScrollFlags @0 <type>android.support.design.widget.AppBarLayout.LayoutParams <type>int # Block
android.support.v7.widget.Toolbar$setLayoutParams @0 <type>android.support.v7.widget.Toolbar <type>android.support.design.widget.AppBarLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setBackgroundResource @0 <type>android.widget.ImageButton <type>int # begin Block
android.widget.ImageButton$setBackgroundResource @0 <type>android.widget.ImageButton <type>int # Block
android.widget.ImageButton$setBackgroundResource @0 <type>android.widget.ImageButton <type>int # Block
android.widget.ImageButton$setBackgroundResource @0 <type>android.widget.ImageButton <type>int # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # begin end IfFalse
<END>
<S2>
<S1>
android.webkit.WebView$setWebChromeClient @0 <type>android.webkit.WebView EXP # begin Block
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # Block
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # Block
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # Block
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin Block
android.view.View$setVisibility @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.support.design.widget.CoordinatorLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.support.design.widget.CoordinatorLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin Block
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar EXP # begin Block
android.widget.ProgressBar$getProgressDrawable EXP <type>android.widget.ProgressBar # Block
android.widget.ProgressBar$setMinimumHeight @0 <type>android.widget.ProgressBar <type>float # end Block
android.widget.ProgressBar$setLayoutParams @0 <type>android.widget.ProgressBar <type>android.support.design.widget.CoordinatorLayout.LayoutParams # begin Block
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar 30 # end Block
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 0 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 EXP 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 <type>float 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout.LayoutParams$setMargins @0 <type>android.support.design.widget.CoordinatorLayout.LayoutParams 0 EXP 0 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable EXP # begin Block
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end Block
android.widget.RelativeLayout.LayoutParams$setMargins @0 <type>android.widget.RelativeLayout.LayoutParams 0 <type>int <type>int 0 # begin Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # Block
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # Block
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout <type>int # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_PX <type>float # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackground @0 <type>android.widget.LinearLayout <type>android.graphics.drawable.GradientDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundDrawable @0 <type>android.widget.LinearLayout <type>android.graphics.drawable.GradientDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.widget.ImageButton$setImageDrawable @0 <type>android.widget.ImageButton <type>android.graphics.drawable.StateListDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.BitmapDrawable # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$goBack @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.view.View$getId <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$goBack @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$goForward @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$reload @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent android.content.Intent.ACTION_SEND # begin Block
android.webkit.WebView$getUrl EXP <type>android.webkit.WebView # Block
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT EXP # Block
android.content.Intent$setType @0 <type>android.content.Intent "text/plain" # Block
android.content.Intent$createChooser EXP this <type>android.content.Intent EXP # end Block
<END>
<S2>
<S1>
android.webkit.WebView$getUrl EXP <type>android.webkit.WebView # begin Block
android.support.design.widget.Snackbar$make <type>android.support.design.widget.Snackbar this <type>android.support.design.widget.CoordinatorLayout EXP android.support.design.widget.Snackbar.LENGTH_LONG # Block
android.support.design.widget.Snackbar$getView <type>android.view.View <type>android.support.design.widget.Snackbar # Block
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # end Block
android.support.design.widget.Snackbar$show @0 <type>android.support.design.widget.Snackbar # begin end Block
<END>
<S2>
<S1>
android.webkit.WebView$getUrl EXP <type>android.webkit.WebView # begin Block
android.net.Uri$parse EXP this EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView EXP # Block
android.widget.TextView$setLineSpacing @0 <type>android.widget.TextView 0 1.1f # Block
android.widget.TextView$setIncludeFontPadding @0 <type>android.widget.TextView false # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setVisibility @0 <type>android.widget.RelativeLayout android.view.View.VISIBLE # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this this R.anim.popup_flyout_show # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this this R.anim.popup_flyout_hide # begin end MethodDeclaration
android.view.animation.Animation$setAnimationListener @0 <type>android.view.animation.Animation EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setVisibility @0 <type>android.widget.RelativeLayout android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$getTotalScrollRange EXP <type>android.support.design.widget.AppBarLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$getTotalScrollRange EXP <type>android.support.design.widget.AppBarLayout # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$getTitle EXP <type>android.webkit.WebView # begin IfTrue
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # begin Block
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.VISIBLE # Block
android.webkit.WebView$canGoBack EXP <type>android.webkit.WebView # Block
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton EXP # Block
android.webkit.WebView$canGoForward EXP <type>android.webkit.WebView # Block
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # begin Block
android.widget.ImageButton$setVisibility @0 <type>android.widget.ImageButton android.view.View.GONE # end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin Block
android.content.Intent$setDataAndType @0 <type>android.content.Intent EXP "video/*" # Block
android.webkit.WebView$getContext EXP <type>android.webkit.WebView # end Block
<END>
<S2>
<S1>
android.widget.TextView$setMaxWidth @0 <type>android.widget.TextView <type>int # begin MethodDeclaration
android.widget.TextView$setMaxWidth @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$requestLayout @0 <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$requestLayout @0 <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry.getTargetContext EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry.getTargetContext EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry.getTargetContext EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SESSION_ID FIELD # begin MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.UPDATED EXP # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SESSION_RATING FIELD # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_RELEVANCE FIELD # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_CONTENT FIELD # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_SPEAKER FIELD # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.COMMENTS FIELD # MethodDeclaration
android.content.Context$getContentResolver EXP <type>android.content.Context # MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.ACTION_NOTIFICATION_DISMISSAL # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.KEY_SESSION_ID <type>String # MethodDeclaration
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$getBoolean EXP <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>float <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity <type>float <type>android.view.VelocityTracker # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Slide$setSlideEdge @0 <type>android.transition.Slide android.view.Gravity.LEFT # begin MethodDeclaration
android.transition.Slide$setDuration @0 <type>android.transition.Slide EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this this R.color.sample_red # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.sample_blue # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.sample_green # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this this R.color.sample_yellow # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setHasFixedSize @0 <type>android.support.v7.widget.RecyclerView true # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>SamplesRecyclerAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.session_feedback_frag <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.feedback_header_session_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.feedback_header_session_speakers # MethodDeclaration
android.view.View$findViewById <type>android.widget.RatingBar <type>android.view.View com.google.samples.apps.iosched.R.id.rating_bar_0 # MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.NumberRatingBar <type>android.view.View com.google.samples.apps.iosched.R.id.session_relevant_feedback_bar # MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.NumberRatingBar <type>android.view.View com.google.samples.apps.iosched.R.id.content_feedback_bar # MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.NumberRatingBar <type>android.view.View com.google.samples.apps.iosched.R.id.speaker_feedback_bar # end MethodDeclaration
android.widget.RatingBar$setOnRatingBarChangeListener @0 <type>android.widget.RatingBar EXP # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.google.samples.apps.iosched.R.id.submit_feedback_button # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RatingBar$setImportantForAccessibility @0 <type>android.widget.RatingBar android.widget.RatingBar.IMPORTANT_FOR_ACCESSIBILITY_YES # begin Block
android.widget.RatingBar$setAccessibilityLiveRegion @0 <type>android.widget.RatingBar android.view.View.ACCESSIBILITY_LIVE_REGION_ASSERTIVE # end Block
<END>
<S2>
<S1>
android.widget.RatingBar$setContentDescription @0 <type>android.widget.RatingBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RatingBar$getRating <type>int <type>android.widget.RatingBar # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle SessionFeedbackModel.DATA_RATING_INT <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle SessionFeedbackModel.DATA_SESSION_RELEVANT_ANSWER_INT <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle SessionFeedbackModel.DATA_CONTENT_ANSWER_INT <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle SessionFeedbackModel.DATA_SPEAKER_ANSWER_INT <type>int # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle SessionFeedbackModel.DATA_COMMENT_STRING <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionHashcodeQuery.SESSION_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionHashcodeQuery.SESSION_IMPORT_HASHCODE # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation.Builder$withValue EXP <type>android.content.ContentProviderOperation.Builder com.google.samples.apps.iosched.provider.ScheduleContract.SyncColumns.UPDATED EXP # begin MethodDeclaration
android.content.ContentProviderOperation.Builder$build EXP <type>android.content.ContentProviderOperation.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newInsert <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newUpdate <type>android.content.ContentProviderOperation.Builder this <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this FIELD # begin end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView 20 20 20 20 # MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout EXP # MethodDeclaration
android.widget.LinearLayout$setGravity @0 <type>android.widget.LinearLayout android.view.Gravity.CENTER # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin MethodDeclaration
android.content.Context$getApplicationInfo EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getChildCount EXP <type>android.widget.AbsListView # begin Block
android.widget.AbsListView$getFirstVisiblePosition EXP <type>android.widget.AbsListView # Block
android.widget.AbsListView$getChildAt EXP <type>android.widget.AbsListView 0 # Block
android.widget.AbsListView$getPaddingTop EXP <type>android.widget.AbsListView # end Block
<END>
<S2>
<S1>
android.view.View$getScrollY EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$canScrollVertically EXP <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayShowTitleEnabled @0 <type>android.app.ActionBar <type>boolean # begin Block
android.app.ActionBar$setDisplayUseLogoEnabled @0 <type>android.app.ActionBar EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception unstarring repository" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.small_daffodils # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.app.ActivityManager <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin Block
android.app.ActivityManager$getMemoryClass <type>int <type>android.app.ActivityManager # end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityManager$getLargeMemoryClass EXP <type>android.app.ActivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>rx.internal.schedulers.ScheduledAction EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>rx.internal.schedulers.ScheduledAction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # MethodDeclaration
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment null # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 100 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setId @0 <type>android.view.View 101 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater android.R.layout.simple_list_item_1 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView.OnItemClickListener$onItemClick @0 <type>android.widget.AdapterView.OnItemClickListener null <type>android.view.View <type>int <type>long # begin end Block
<END>
<S2>
<S1>
android.view.View$sendAccessibilityEvent @0 <type>android.view.View android.view.accessibility.AccessibilityEvent.TYPE_VIEW_CLICKED # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$obtain <type>android.view.accessibility.AccessibilityEvent this # begin Block
android.view.View$dispatchPopulateAccessibilityEvent @0 <type>android.view.View <type>android.view.accessibility.AccessibilityEvent # Block
android.view.accessibility.AccessibilityEvent$appendRecord @0 <type>android.view.accessibility.AccessibilityEvent <type>android.view.accessibility.AccessibilityEvent # end Block
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityNodeInfo$setScrollable @0 <type>android.view.accessibility.AccessibilityNodeInfo EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin Block
android.view.accessibility.AccessibilityNodeInfo$setEnabled @0 <type>android.view.accessibility.AccessibilityNodeInfo EXP # end Block
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$setScrollable @0 <type>android.view.accessibility.AccessibilityEvent EXP # begin end MethodDeclaration
android.view.accessibility.AccessibilityEvent$setCurrentItemIndex @0 <type>android.view.accessibility.AccessibilityEvent EXP # begin MethodDeclaration
android.view.accessibility.AccessibilityEvent$setFromIndex @0 <type>android.view.accessibility.AccessibilityEvent EXP # MethodDeclaration
android.view.accessibility.AccessibilityEvent$setToIndex @0 <type>android.view.accessibility.AccessibilityEvent EXP # MethodDeclaration
android.view.accessibility.AccessibilityEvent$setItemCount @0 <type>android.view.accessibility.AccessibilityEvent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin Block
android.view.accessibility.AccessibilityEvent$setEnabled @0 <type>android.view.accessibility.AccessibilityEvent EXP # end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas FIELD FIELD # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas EXP # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF 5 5 <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>int <type>int EXP EXP # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP EXP EXP EXP # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # Block
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.0f 0.7f # Block
android.graphics.RadialGradient$setLocalMatrix @0 <type>android.graphics.RadialGradient <type>android.graphics.Matrix # Block
android.graphics.Paint$setShader @0 <type>android.graphics.Paint EXP # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>float <type>float <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>RoundCornersDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>RoundCornersDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setDither @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setFilterBitmap @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.Button$setEnabled @0 <type>android.widget.Button false # MethodDeclaration
android.media.SoundPool$load <type>int <type>android.media.SoundPool this R.raw.slow_whoop_bubble_pop 1 # end MethodDeclaration
android.media.SoundPool$setOnLoadCompleteListener @0 <type>android.media.SoundPool EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.media.AudioManager$requestAudioFocus <type>int <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener android.media.AudioManager.STREAM_MUSIC android.media.AudioManager.AUDIOFOCUS_GAIN # end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioManager$playSoundEffect @0 <type>android.media.AudioManager android.media.AudioManager.FX_KEY_CLICK # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.media.AudioManager$playSoundEffect @0 <type>android.media.AudioManager android.media.AudioManager.FX_KEY_CLICK # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setEnabled @0 <type>android.widget.Button true # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Unable to load sound" # begin end Block
<END>
<S2>
<S1>
android.media.SoundPool$play @0 <type>android.media.SoundPool <type>int EXP EXP 1 0 1.0f # begin end IfTrue
<END>
<S2>
<S1>
android.media.AudioManager$setSpeakerphoneOn @0 <type>android.media.AudioManager true # begin MethodDeclaration
android.media.AudioManager$loadSoundEffects @0 <type>android.media.AudioManager # end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioManager$setSpeakerphoneOn @0 <type>android.media.AudioManager false # begin MethodDeclaration
android.media.AudioManager$unloadSoundEffects @0 <type>android.media.AudioManager # end MethodDeclaration
<END>
<S2>
<S1>
android.media.SoundPool$unload @0 <type>android.media.SoundPool <type>int # begin Block
android.media.SoundPool$release @0 <type>android.media.SoundPool # end Block
<END>
<S2>
<S1>
android.media.AudioManager$abandonAudioFocus @0 <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin TryBlock
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver EXP EXP "name='search_client_id'" null null # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin Block
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver EXP EXP "name='client_id'" null null # end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS labels" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "ALTER TABLE bookmarks ADD COLUMN thumbnail BLOB DEFAULT NULL;" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "ALTER TABLE bookmarks ADD COLUMN touch_icon BLOB DEFAULT NULL;" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DELETE FROM bookmarks WHERE (bookmark = 0 AND url LIKE \"%.google.%client=ms-%\")" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "ALTER TABLE bookmarks ADD COLUMN user_entered INTEGER;" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DELETE FROM bookmarks WHERE url IS NULL;" # begin Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "ALTER TABLE bookmarks RENAME TO bookmarks_temp;" # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "INSERT INTO bookmarks SELECT * FROM bookmarks_temp;" # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE bookmarks_temp;" # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS bookmarks" # begin Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "DROP TABLE IF EXISTS searches" # end Block
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_BACKGROUND # begin MethodDeclaration
android.content.Context$getApplicationInfo EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this <type>android.content.Context # begin Block
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences "fix_picasa" true # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin Block
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor "fix_picasa" false # Block
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getWritableDatabase <type>android.database.sqlite.SQLiteDatabase <type>android.database.sqlite.SQLiteOpenHelper # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$rawQuery <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_1 # begin Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_2 # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_TEXT_2_URL # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_QUERY # Block
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor android.app.SearchManager.SUGGEST_COLUMN_INTENT_EXTRA_DATA # end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToPosition @0 <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToPosition @0 <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToPosition @0 <type>android.database.Cursor EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 1 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 1 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$deactivate @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$deactivate @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$requery EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$requery EXP <type>android.database.Cursor # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 1 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 2 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 1 # begin end Block
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin end MethodDeclaration
android.database.sqlite.SQLiteOpenHelper$getReadableDatabase EXP <type>android.database.sqlite.SQLiteOpenHelper # begin MethodDeclaration
android.database.DatabaseUtils$concatenateWhere EXP this <type>String <type>String # MethodDeclaration
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getReadableDatabase EXP <type>android.database.sqlite.SQLiteOpenHelper # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getWritableDatabase <type>android.database.sqlite.SQLiteDatabase <type>android.database.sqlite.SQLiteOpenHelper # begin MethodDeclaration
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>long <type>android.database.sqlite.SQLiteDatabase EXP "url" <type>android.content.ContentValues # begin end Block
<END>
<S2>
<S1>
android.content.ContentUris$withAppendedId <type>android.net.Uri this android.provider.Browser.BOOKMARKS_URI <type>long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>long <type>android.database.sqlite.SQLiteDatabase EXP "url" <type>android.content.ContentValues # begin end Block
<END>
<S2>
<S1>
android.content.ContentUris$withAppendedId <type>android.net.Uri this android.provider.Browser.SEARCHES_URI <type>long # begin end Block
<END>
<S2>
<S1>
android.app.backup.BackupManager$dataChanged @0 <type>android.app.backup.BackupManager # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getWritableDatabase <type>android.database.sqlite.SQLiteDatabase <type>android.database.sqlite.SQLiteOpenHelper # begin MethodDeclaration
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # end MethodDeclaration
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase EXP <type>String <type>String # begin MethodDeclaration
android.content.ContentResolver$notifyChange @0 <type>android.content.ContentResolver <type>android.net.Uri null # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.Browser.BOOKMARKS_URI EXP EXP null null # begin end Block
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.app.backup.BackupManager$dataChanged @0 <type>android.app.backup.BackupManager # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteOpenHelper$getWritableDatabase <type>android.database.sqlite.SQLiteDatabase <type>android.database.sqlite.SQLiteOpenHelper # begin MethodDeclaration
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # end MethodDeclaration
android.database.sqlite.SQLiteDatabase$update <type>int <type>android.database.sqlite.SQLiteDatabase EXP <type>android.content.ContentValues <type>String <type>String # begin MethodDeclaration
android.content.ContentResolver$notifyChange @0 <type>android.content.ContentResolver <type>android.net.Uri null # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues android.provider.Browser.BookmarkColumns._ID # begin Block
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.Browser.BOOKMARKS_URI EXP EXP null null # end Block
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getInt EXP <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.app.backup.BackupManager$dataChanged @0 <type>android.app.backup.BackupManager # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.content.ContentResolver$query EXP <type>android.content.ContentResolver <type>android.net.Uri <type>String <type>String EXP <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getCard EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.animation.ValueAnimator$ofInt EXP this <type>int 1 # end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>long <type>long android.view.MotionEvent.ACTION_CANCEL 0 0 0 # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int 0 # end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG "⚙ Done" # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "[getMenuInflater]" # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$toString this.url <type>android.net.Uri # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$stopLoading @0 <type>android.webkit.WebView # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$requestWindowFeature @0 <type>android.app.ProgressDialog Window.FEATURE_NO_TITLE # begin MethodDeclaration
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog EXP # end MethodDeclaration
android.app.ProgressDialog$setOnCancelListener @0 <type>android.app.ProgressDialog EXP # begin MethodDeclaration
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.net.Uri$getQuery EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$getFragment EXP <type>android.net.Uri # MethodDeclaration
android.os.Bundle$putAll @0 <type>android.os.Bundle EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView View.INVISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.WebView$setVerticalScrollBarEnabled @0 <type>android.webkit.WebView false # begin MethodDeclaration
android.webkit.WebView$setHorizontalScrollBarEnabled @0 <type>android.webkit.WebView false # MethodDeclaration
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # MethodDeclaration
android.webkit.WebView$loadUrl @0 <type>android.webkit.WebView <type>String # MethodDeclaration
android.webkit.WebView$setLayoutParams @0 <type>android.webkit.WebView EXP # MethodDeclaration
android.webkit.WebView$setVisibility @0 <type>android.webkit.WebView View.INVISIBLE # MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # MethodDeclaration
android.webkit.WebView$setFocusable @0 <type>android.webkit.WebView true # MethodDeclaration
android.webkit.WebView$setFocusableInTouchMode @0 <type>android.webkit.WebView true # end MethodDeclaration
android.webkit.WebView$setOnTouchListener @0 <type>android.webkit.WebView EXP # begin MethodDeclaration
android.widget.LinearLayout$setPadding @0 <type>android.widget.LinearLayout <type>int <type>int <type>int <type>int # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.webkit.WebView # MethodDeclaration
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout <type>int # MethodDeclaration
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.widget.LinearLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error" # begin end Block
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_msg" # begin end Block
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_code" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_type" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_message" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_description" # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.webkit.SslErrorHandler$proceed @0 <type>android.webkit.SslErrorHandler # begin end Block
<END>
<S2>
<S1>
android.webkit.SslErrorHandler$cancel @0 <type>android.webkit.SslErrorHandler # begin end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setBackgroundColor @0 <type>android.widget.FrameLayout android.graphics.Color.TRANSPARENT # begin MethodDeclaration
android.webkit.WebView$setVisibility @0 <type>android.webkit.WebView View.VISIBLE # MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ServerProtocol.DIALOG_PARAM_APP_ID EXP # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle ServerProtocol.DIALOG_PARAM_ACCESS_TOKEN EXP # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ServerProtocol.DIALOG_PARAM_APP_ID <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin Block
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # Block
android.content.res.Resources$getConfiguration <type>android.content.res.Configuration <type>android.content.res.Resources # Block
android.content.res.Resources$updateConfiguration @0 <type>android.content.res.Resources <type>android.content.res.Configuration <type>android.util.DisplayMetrics # Block
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG EXP # end Block
<END>
<S2>
<S1>
android.app.ProgressDialog$setIcon @0 <type>android.app.ProgressDialog com.google.classysharkandroid.R.mipmap.ic_launcher # begin TryBlock
android.app.ProgressDialog$setMessage @0 <type>android.app.ProgressDialog "¸.·´¯`·.´¯`·.¸¸.·´¯`·.¸><(((º>" # TryBlock
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog false # TryBlock
android.app.ProgressDialog$setCancelable @0 <type>android.app.ProgressDialog false # TryBlock
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # end TryBlock
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.google.classysharkandroid.adapters.StableArrayAdapter # begin MethodDeclaration
android.app.ProgressDialog$dismiss @0 <type>android.app.ProgressDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ClassesListActivity.this "Sorry don't support ODEX" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ClassesListActivity.SELECTED_CLASS_NAME EXP # begin TryBlock
android.content.Intent$putExtra @0 <type>android.content.Intent ClassesListActivity.SELECTED_CLASS_DUMP <type>String # end TryBlock
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 10 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end MethodDeclaration
android.graphics.Color$rgb EXP this 104 241 175 # begin MethodDeclaration
android.graphics.Color$rgb EXP this 164 228 251 # MethodDeclaration
android.graphics.Color$rgb EXP this 242 247 158 # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Activity" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Activity" "Nothing selected." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ExpandableListView$setId @0 <type>android.widget.ExpandableListView android.R.id.list # begin end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.Matrix$setIdentityM @0 this <type>float 0 # begin MethodDeclaration
android.opengl.Matrix$setIdentityM @0 this <type>float 0 # MethodDeclaration
android.opengl.Matrix$setIdentityM @0 this <type>float 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.opengl.Matrix$multiplyMM @0 this <type>float 0 <type>float 0 <type>float 0 # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # begin Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP EXP EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 1 # begin Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 0 # Block
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView.OnScrollListener$setTouchListener @0 <type>android.widget.AbsListView.OnScrollListener <type>it.gmariotti.cardslib.library.view.listener.SwipeDismissListViewTouchListener # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getQuantityString <type>String <type>android.content.res.Resources it.gmariotti.cardslib.library.R.plurals.list_card_undo_items FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "You have to set a id value to use the undo action" # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Undo Action requires a valid Activity context" # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getHeight <type>int <type>android.widget.AbsListView # begin InstanceDeclaration
android.widget.AbsListView$getPaddingBottom <type>int <type>android.widget.AbsListView # end InstanceDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$smoothScrollBy @0 <type>android.widget.AbsListView EXP 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end Block
android.content.Context$getWindow <type>android.view.Window <type>android.content.Context # begin Block
android.view.Window$getDecorView <type>android.view.View <type>android.view.Window # Block
android.view.View$getWidth <type>int <type>android.view.View # Block
android.view.View$getHeight <type>int <type>android.view.View # Block
android.widget.PopupWindow$showAsDropDown @0 <type>android.widget.PopupWindow EXP # end Block
android.widget.PopupWindow$setTouchable @0 <type>android.widget.PopupWindow true # begin end Block
<END>
<S2>
<S1>
android.widget.PopupWindow$dismiss @0 <type>android.widget.PopupWindow # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # begin MethodDeclaration
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater com.facebook.R.layout.com_facebook_tooltip_bubble this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap.Config$hashCode EXP <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 1 # begin MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 0 255 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue scale <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue alpha <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin Block
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$notifyDataSetChanged @0 <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$notifyDataSetChanged @0 <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$setNumColumns @0 <type>android.widget.ListAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # Block
android.util.SparseIntArray$valueAt EXP <type>android.util.SparseIntArray <type>int # Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.DataSetObservable$notifyChanged @0 <type>android.database.DataSetObservable # begin end Block
<END>
<S2>
<S1>
android.database.DataSetObservable$notifyChanged @0 <type>android.database.DataSetObservable # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$areAllItemsEnabled EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin Block
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter <type>int # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItem EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$hasStableIds EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.View$setMinimumHeight @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView EXP <type>android.widget.ListAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin Block
android.view.View$setMinimumHeight @0 <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.View$setMinimumHeight @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType <type>int <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.DataSetObservable$registerObserver @0 <type>android.database.DataSetObservable <type>android.database.DataSetObserver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.database.DataSetObservable$unregisterObserver @0 <type>android.database.DataSetObservable <type>android.database.DataSetObserver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$unregisterDataSetObserver @0 <type>android.widget.ListAdapter <type>android.database.DataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getFilter EXP <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.database.DataSetObservable$notifyChanged @0 <type>android.database.DataSetObservable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$getBitmap <type>android.graphics.Bitmap <type>android.graphics.drawable.BitmapDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RadioGroup$removeAllViews @0 <type>android.widget.RadioGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.END # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.video_library_frag <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.google.samples.apps.iosched.ui.widget.CollectionView <type>android.view.View com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.empty # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerShadow @0 <type>android.support.v4.widget.DrawerLayout com.google.samples.apps.iosched.R.drawable.drawer_shadow_flipped android.support.v4.view.GravityCompat.END # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.list_item_explore_header <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View android.R.id.text1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.video_library_item <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.speakers # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.description # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView android.R.color.transparent # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin Block
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET # end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.google.samples.apps.iosched.R.id.thumbnail # begin MethodDeclaration
android.widget.ImageView$setColorFilter @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle ShareConstants.PHOTOS EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle ShareConstants.DATA_FAILURES_FATAL <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle ShareConstants.PEOPLE_IDS EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent android.content.Intent.CATEGORY_LAUNCHER # begin end MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>com.google.classysharkandroid.adapters.StableArrayAdapter # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.webkit.MimeTypeMap$getSingleton <type>android.webkit.MimeTypeMap this # begin MethodDeclaration
android.webkit.MimeTypeMap$getMimeTypeFromExtension <type>String <type>android.webkit.MimeTypeMap "apk" # MethodDeclaration
android.net.Uri$fromFile EXP this EXP # MethodDeclaration
android.content.Intent$setDataAndType @0 <type>android.content.Intent EXP <type>String # MethodDeclaration
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable EXP <type>android.content.res.TypedArray IcsLinearLayout.LL_DIVIDER # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int 0 # ConstructorDeclaration
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray <type>int SHOW_DIVIDER_NONE # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getLeft EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP <type>int EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int EXP EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getClassLoader EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.contentUrl 0 # begin MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel this.peopleIds # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.placeId # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.ref # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readStringList @0 <type>android.os.Parcel <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.jeremyfeinstein.slidingmenu.example.R.layout.list null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences "name" null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "age" 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences "lastUpdated" 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getStringSet EXP <type>android.content.SharedPreferences "types" null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong EXP <type>android.content.SharedPreferences "lastUpdated" 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences "name" null # begin MethodDeclaration
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences "age" 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences "name" # begin MethodDeclaration
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences "age" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences "name" # begin MethodDeclaration
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences "age" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$contains EXP <type>android.content.SharedPreferences "name" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences EXP 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin MethodDeclaration
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.title_fragment_container <type>TitlesFragment # MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.quote_fragment_container <type>QuoteFragment # Block
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # Block
android.app.FragmentManager$executePendingTransactions @0 <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.activity_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "This action provided by the QuoteViewerActivity" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor de.greenrobot.daotest.SimpleEntityDao.Properties.Id.columnName # MethodDeclaration
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor de.greenrobot.daotest.SimpleEntityDao.Properties.SimpleString.columnName # MethodDeclaration
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin end MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float EXP EXP # begin MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # Block
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas 0 0 <type>float <type>android.graphics.Paint # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.75f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 700 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # Block
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 51 255 # Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 700 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_base <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "No Initial Reading Available" # begin end Block
<END>
<S2>
<S1>
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager <type>android.location.LocationListener # begin end IfTrue
<END>
<S2>
<S1>
android.location.LocationManager$requestLocationUpdates @0 <type>android.location.LocationManager android.location.LocationManager.NETWORK_PROVIDER <type>long <type>float <type>android.location.LocationListener # begin end Block
<END>
<S2>
<S1>
android.location.LocationManager$requestLocationUpdates @0 <type>android.location.LocationManager android.location.LocationManager.GPS_PROVIDER <type>long <type>float <type>android.location.LocationListener # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "location updates cancelled" # begin MethodDeclaration
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager <type>android.location.LocationListener # end MethodDeclaration
<END>
<S2>
<S1>
android.location.LocationManager$removeUpdates @0 <type>android.location.LocationManager <type>android.location.LocationListener # begin end MethodDeclaration
<END>
<S2>
<S1>
android.location.LocationManager$getAllProviders <type>java.util.List <type>android.location.LocationManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.location.Location$getAccuracy EXP <type>android.location.Location # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getTime EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getLongitude EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.location.Location$getLatitude EXP <type>android.location.Location # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$setFrameDelay @0 this 15 # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean this.animated <type>android.content.res.TypedArray R.styleable.BootstrapProgressBar_animated false # begin TryBlock
android.content.res.TypedArray$getBoolean this.rounded <type>android.content.res.TypedArray R.styleable.BootstrapProgressBar_roundedCorners false # TryBlock
android.content.res.TypedArray$getBoolean this.striped <type>android.content.res.TypedArray R.styleable.BootstrapProgressBar_striped false # TryBlock
android.content.res.TypedArray$getInt this.userProgress <type>android.content.res.TypedArray R.styleable.BootstrapProgressBar_progress 0 # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.AwesomeTextView_bootstrapBrand EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapProgressBar_bootstrapSize EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle KEY_USER_PROGRESS <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle KEY_DRAWN_PROGRESS <type>int # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle KEY_STRIPED <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle KEY_ANIMATED <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putFloat @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY <type>float # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY # begin end Block
android.os.Bundle$getInt this.userProgress <type>android.os.Bundle KEY_USER_PROGRESS # begin Block
android.os.Bundle$getInt this.drawnProgress <type>android.os.Bundle KEY_DRAWN_PROGRESS # Block
android.os.Bundle$getBoolean this.striped <type>android.os.Bundle KEY_STRIPED # Block
android.os.Bundle$getBoolean this.animated <type>android.os.Bundle KEY_ANIMATED # Block
android.os.Bundle$getBoolean this.rounded <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # Block
android.os.Bundle$getFloat this.bootstrapSize <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY # Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this <type>int <type>int # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>long # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator 0 # MethodDeclaration
android.animation.ValueAnimator$setRepeatMode @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.RESTART # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 0 # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator <type>long # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.INFINITE # MethodDeclaration
android.animation.ValueAnimator$setRepeatMode @0 <type>android.animation.ValueAnimator android.animation.ValueAnimator.RESTART # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.TRANSPARENT android.graphics.PorterDuff.Mode.CLEAR # begin end MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int 0 <type>float <type>float <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>float <type>float android.graphics.Bitmap.Config.ARGB_8888 # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>float 0 <type>android.graphics.Paint # begin Block
android.graphics.Bitmap$getWidth <type>float <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP <type>float android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # MethodDeclaration
android.graphics.Path$reset @0 <type>android.graphics.Path # MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP 0 # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # MethodDeclaration
android.graphics.Path$reset @0 <type>android.graphics.Path # MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP 0 # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint 0xFFFFFFFF # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # MethodDeclaration
android.graphics.Canvas$drawARGB @0 <type>android.graphics.Canvas 0 0 0 0 # MethodDeclaration
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Rect <type>android.graphics.Rect <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel id # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel title # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel url # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>Images # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel <type>java.util.List # MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>User # MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>Team # MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin Block
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String null # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String null # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect FIELD FIELD FIELD FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin MethodDeclaration
android.util.SparseArray$clear @0 <type>android.util.SparseArray # MethodDeclaration
android.util.SparseArray$clear @0 <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.app.LoaderManager$initLoader EXP <type>android.app.LoaderManager <type>int null <type>android.app.LoaderManager.LoaderCallbacks # begin MethodDeclaration
android.app.LoaderManager$initLoader EXP <type>android.app.LoaderManager <type>int null <type>android.app.LoaderManager.LoaderCallbacks # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getContentResolver EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getContentResolver EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>com.google.android.gms.maps.model.TileOverlay <type>android.util.SparseArray <type>int # begin end MethodDeclaration
android.util.SparseArray$get <type>java.util.ArrayList <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.LoaderManager$getLoader <type>android.content.Loader <type>android.app.LoaderManager <type>int # begin end MethodDeclaration
android.app.LoaderManager$getLoader <type>android.content.Loader <type>android.app.LoaderManager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Loader$forceLoad @0 <type>android.content.Loader # begin end Block
<END>
<S2>
<S1>
android.content.Loader$forceLoad @0 <type>android.content.Loader # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$getLayoutParams <type>android.support.design.widget.CollapsingToolbarLayout.LayoutParams <type>android.support.v7.widget.Toolbar # begin MethodDeclaration
android.support.v7.widget.Toolbar$setLayoutParams @0 <type>android.support.v7.widget.Toolbar <type>android.support.design.widget.CollapsingToolbarLayout.LayoutParams # MethodDeclaration
android.support.design.widget.CollapsingToolbarLayout$setTitle @0 <type>android.support.design.widget.CollapsingToolbarLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.FloatingActionButton$setImageDrawable @0 <type>android.support.design.widget.FloatingActionButton EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.message_card this true # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.google.samples.apps.iosched.R.id.text # end MethodDeclaration
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.google.samples.apps.iosched.R.styleable.MessageCard <type>int 0 # begin MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_messageTitle # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_messageText # end MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button1text # begin MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button1emphasis false # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button1tag # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button2text # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button2emphasis false # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_button2tag # MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.MessageCard_emphasisColor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$newInstance <type>android.net.http.AndroidHttpClient this "" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$execute EXP <type>android.net.http.AndroidHttpClient <type>org.apache.http.client.methods.HttpGet <type>JSONResponseHandler # begin end TryBlock
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$close @0 <type>android.net.http.AndroidHttpClient # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$overridePendingTransition @0 <type>android.content.Context <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onSearchTextChanged()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onSuggestionClicked()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onSearchAction()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onFocus()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onFocusCleared()" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this <type>String # begin MethodDeclaration
android.support.v7.graphics.Palette.Swatch$getTitleTextColor EXP <type>android.support.v7.graphics.Palette.Swatch # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.support.v7.graphics.Palette.Swatch$getBodyTextColor EXP <type>android.support.v7.graphics.Palette.Swatch # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$setBackgroundColor @0 <type>android.view.ViewGroup <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$alpha <type>int this <type>int # begin MethodDeclaration
android.graphics.Color$red <type>int this <type>int # MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$findViewById <type>android.widget.TextView <type>android.widget.FrameLayout com.handmark.pulltorefresh.library.R.id.pull_to_refresh_text # begin ConstructorDeclaration
android.widget.FrameLayout$findViewById <type>android.widget.ProgressBar <type>android.widget.FrameLayout com.handmark.pulltorefresh.library.R.id.pull_to_refresh_progress # ConstructorDeclaration
android.widget.FrameLayout$findViewById <type>android.widget.TextView <type>android.widget.FrameLayout com.handmark.pulltorefresh.library.R.id.pull_to_refresh_sub_text # ConstructorDeclaration
android.widget.FrameLayout$findViewById <type>android.widget.ImageView <type>android.widget.FrameLayout com.handmark.pulltorefresh.library.R.id.pull_to_refresh_image # ConstructorDeclaration
android.widget.FrameLayout$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.widget.FrameLayout # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this context # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this context # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.FrameLayout$getWidth EXP <type>android.widget.FrameLayout # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.FrameLayout$getHeight EXP <type>android.widget.FrameLayout # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong EXP <type>android.database.Cursor 0 # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$animate EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$animate EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$animate EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$animate EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$animate EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources <type>android.content.res.Resources <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getApplicationInfo EXP <type>android.app.Activity # MethodDeclaration
android.content.res.Resources$getString <type>String <type>android.content.res.Resources EXP # MethodDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.color.theme_primary # end MethodDeclaration
android.app.Activity$setTaskDescription @0 <type>android.app.Activity EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this <type>android.content.res.Resources com.google.samples.apps.iosched.R.drawable.ic_stat_notification # begin end Block
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 45 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.Fragment <type>android.app.FragmentManager "dialog_purchase" # end MethodDeclaration
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$remove @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_purchase_about null # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_app_name_and_version # begin MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_small_layout # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_small_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_small_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_medium_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_medium_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_medium_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_large_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_large_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_large_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_xlarge_layout # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_xlarge_layout_text # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.purchase_xlarge_layout_text_price # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout EXP # begin end Block
<END>
<S2>
<S1>
android.widget.RelativeLayout$setClickable @0 <type>android.widget.RelativeLayout false # begin Block
android.widget.Toast$makeText EXP this EXP "Thank you!" android.widget.Toast.LENGTH_LONG # end Block
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putParcelableArrayListExtra @0 <type>android.content.Intent za.co.riggaroo.materialhelptutorial.tutorial.MaterialTutorialActivity.MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight <type>int <type>android.view.View # MethodDeclaration
android.view.View$getPaddingTop <type>int <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_file_icon # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_folder_icon # begin SwitchCase
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_folders_icon # SwitchCase
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_files_icon # end SwitchCase
<END>
<S2>
<S1>
android.text.format.Formatter$formatFileSize EXP this <type>android.content.Context FIELD # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this EXP io.plaidapp.R.color.background_light # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofArgb <type>android.animation.Animator this <type>io.plaidapp.ui.drawable.MorphDrawable FIELD <type>Integer # begin MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this <type>io.plaidapp.ui.drawable.MorphDrawable FIELD <type>int # end MethodDeclaration
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator # begin MethodDeclaration
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 300 # MethodDeclaration
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin Block
android.view.View$setTranslationY @0 <type>android.view.View <type>float # Block
android.view.View$setAlpha @0 <type>android.view.View 0f # Block
android.view.View$animate EXP <type>android.view.View # Block
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_gridview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getOnFocusChangeListener EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getOnFocusChangeListener EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getOnFocusChangeListener EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end Block
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabScrollViewFragment.ARG_SCROLL_Y <type>int # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_colors <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>PicassoDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$stop @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable EXP <type>android.widget.ImageView # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # begin MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint FIELD # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path FIELD FIELD # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path FIELD FIELD # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path FIELD FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeDouble @0 <type>android.os.Parcel <type>double # MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_column_count 0 # begin end Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_item_margin 0 # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_grid_paddingLeft 0 # Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_grid_paddingRight 0 # Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_grid_paddingTop 0 # Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_grid_paddingBottom 0 # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_column_count_portrait <type>int # begin Block
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray R.styleable.StaggeredGridView_column_count_landscape <type>int # end Block
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$requestLayout @0 <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>GridLayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>GridLayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>GridLayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>GridLayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
android.view.View$getBottom <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin Block
android.view.View$getBottom <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>GridItemRecord <type>android.util.SparseArray <type>int # begin end Block
android.util.Log$d @0 this <type>String EXP # begin Block
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>int FIELD # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$get <type>Double <type>android.util.SparseArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$get <type>GridItemRecord <type>android.util.SparseArray <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$append @0 <type>android.util.SparseArray <type>int <type>GridItemRecord # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$get <type>GridItemRecord <type>android.util.SparseArray <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeIntArray @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeSparseArray @0 <type>android.os.Parcel <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin MethodDeclaration
android.widget.GridView$setOnScrollListener @0 <type>android.widget.GridView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.content.ContentResolver.SCHEME_FILE$equals EXP this EXP # MethodDeclaration
android.net.Uri$getPathSegments EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPathSegments EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open <type>java.io.InputStream <type>android.content.res.AssetManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>com.daimajia.swipedemo.adapter.GridViewAdapter # begin MethodDeclaration
android.widget.GridView$setSelected @0 <type>android.widget.GridView false # end MethodDeclaration
android.widget.GridView$setOnItemLongClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
android.widget.GridView$setOnItemClickListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
android.widget.GridView$setOnItemSelectedListener @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "onItemLongClick" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "onItemClick" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this "onItemSelected" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.content.Context <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Xml$newPullParser <type>org.xmlpull.v1.XmlPullParser this # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this APODContract.CONTENT_URI # begin end MethodDeclaration
android.content.ContentResolver$applyBatch @0 <type>android.content.ContentResolver APODContract.AUTHORITY <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues APODContract.Columns.TITLE FIELD # begin MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues APODContract.Columns.DESCRIPTION_IMAGE_URL <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues APODContract.Columns.DESCRIPTION_TEXT <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues APODContract.Columns.LARGE_IMAGE_URL FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon <type>android.net.Uri.Builder <type>android.net.Uri # begin MethodDeclaration
android.net.Uri.Builder$encodedPath @0 <type>android.net.Uri.Builder null # MethodDeclaration
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # end MethodDeclaration
android.net.Uri.Builder$build EXP <type>android.net.Uri.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri.Builder$appendEncodedPath @0 <type>android.net.Uri.Builder EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 <type>int <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.LayoutInflater <type>android.content.Context android.content.Context.LAYOUT_INFLATER_SERVICE # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.list_item <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.name # begin MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.ContactsContract.Contacts.DISPLAY_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor android.provider.ContactsContract.Contacts.PHOTO_THUMBNAIL_URI # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end MethodDeclaration
android.widget.TextView$setCompoundDrawables @0 <type>android.widget.TextView <type>android.graphics.drawable.BitmapDrawable null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin TryBlock
android.content.ContentResolver$openInputStream <type>java.io.InputStream <type>android.content.ContentResolver EXP # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.AbsListView.LayoutParams # begin MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this FlexibleSpaceWithImageListViewActivity.this "FAB is clicked" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.widget.TextView$getHeight EXP <type>android.widget.TextView # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Byte # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 <type>Short # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 5 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 6 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindDouble @0 <type>android.database.sqlite.SQLiteStatement 7 <type>Float # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindDouble @0 <type>android.database.sqlite.SQLiteStatement 8 <type>Double # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 9 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindBlob @0 <type>android.database.sqlite.SQLiteStatement 10 <type>byte # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getFloat EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getDouble EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getFloat EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getDouble EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getBlob EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Volley failed to retrieve response" <type>com.android.volley.VolleyError # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.text.Html$fromHtml EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$setDensity @0 <type>android.graphics.Bitmap <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setDensity @0 <type>android.graphics.Bitmap <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setDensity @0 <type>android.graphics.Bitmap android.util.DisplayMetrics.DENSITY_DEFAULT # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray EXP this <type>byte <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream EXP this <type>java.io.InputStream <type>android.graphics.Rect <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFile EXP this <type>String <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor EXP this <type>java.io.FileDescriptor <type>android.graphics.Rect <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapBrandView.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BorderView.KEY_DISPLAYED <type>boolean # MethodDeclaration
android.os.Bundle$putFloat @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.hasBorder <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BorderView.KEY_DISPLAYED # begin Block
android.os.Bundle$getFloat this.bootstrapSize <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY # Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapBrandView.KEY # end Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBitmap EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SampleCirclesWithListener.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "action" # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "extraData" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft <type>float <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWindowVisibleDisplayFrame @0 <type>android.view.View <type>android.graphics.Rect # begin MethodDeclaration
android.view.View$getRootView EXP <type>android.view.View # MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin Block
android.view.View$setPadding @0 <type>android.view.View 0 0 0 EXP # end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View 0 0 0 0 # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.view.inputmethod.InputMethodManager <type>android.app.Activity android.app.Activity.INPUT_METHOD_SERVICE # begin Block
android.app.Activity$getCurrentFocus EXP <type>android.app.Activity # Block
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getDeclaredField <type>java.lang.reflect.Field this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 105 # ConstructorDeclaration
android.text.TextPaint$setColor @0 <type>android.text.TextPaint android.graphics.Color.BLACK # ConstructorDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap android.graphics.Color.TRANSPARENT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_4444 # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas EXP EXP EXP true mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas EXP <type>float EXP mValuePaint # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas EXP <type>float EXP mValuePaint # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 mRenderPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas FIELD FIELD EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha <type>int <type>android.graphics.Paint # begin Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas FIELD FIELD EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin end Block
android.text.StaticLayout$getHeight <type>float <type>android.text.StaticLayout # begin Block
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas FIELD EXP # Block
android.text.StaticLayout$draw @0 <type>android.text.StaticLayout <type>android.graphics.Canvas # Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$width EXP <type>android.graphics.RectF # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin Block
android.graphics.RectF$width <type>float <type>android.graphics.RectF # Block
android.text.SpannableString$length EXP <type>android.text.SpannableString # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP EXP true mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin Block
android.os.Handler$postAtFrontOfQueue @0 <type>android.os.Handler <type>Runnable # end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onRequestContinued @0 <type>android.accounts.AccountAuthenticatorResponse # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onResult @0 <type>android.accounts.AccountAuthenticatorResponse <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onError @0 <type>android.accounts.AccountAuthenticatorResponse android.accounts.AccountManager.ERROR_CODE_CANCELED "canceled" # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getLayoutDirection EXP this this # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_titleInset 0 # end ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_android_textAppearance android.R.style.TextAppearance # begin ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTextAppearance_android_textColor android.graphics.Color.WHITE # ConstructorDeclaration
android.text.TextPaint$setColor @0 <type>android.text.TextPaint EXP # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTextAppearance_android_textSize 0 # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_maxExpandedTextSize Integer.MAX_VALUE # begin ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_lineHeightHint 0 # ConstructorDeclaration
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_android_maxLines 5 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_titleInsetStart 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_titleInsetTop 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_titleInsetEnd 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_titleInsetBottom 0 # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTextAppearance_font # begin Block
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray io.plaidapp.R.styleable.CollapsingTitleLayout_collapsedTextSize 0 # begin Block
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # begin Block
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas 0 0 EXP EXP # Block
android.text.StaticLayout$draw @0 <type>android.text.StaticLayout <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.text.StaticLayout$getHeight EXP <type>android.text.StaticLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.util.TypedValue$applyDimension <type>float this android.util.TypedValue.COMPLEX_UNIT_DIP 4 EXP # MethodDeclaration
android.text.TextPaint$getFontMetricsInt <type>android.graphics.Paint.FontMetricsInt <type>android.text.TextPaint # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$getColor EXP <type>android.text.TextPaint # begin Block
android.text.TextPaint$getColor EXP <type>android.text.TextPaint # Block
android.text.SpannableStringBuilder$toString EXP <type>android.text.SpannableStringBuilder # Block
android.text.TextPaint$getTypeface EXP <type>android.text.TextPaint # Block
android.text.TextPaint$getFontMetricsInt <type>android.graphics.Paint.FontMetricsInt <type>android.text.TextPaint # end Block
<END>
<S2>
<S1>
android.text.StaticLayout$getHeight EXP <type>android.text.StaticLayout # begin end Block
<END>
<S2>
<S1>
android.text.StaticLayout$getLineStart EXP <type>android.text.StaticLayout <type>int # begin Block
android.text.StaticLayout$getLineEnd EXP <type>android.text.StaticLayout <type>int # Block
android.text.TextPaint$getColor EXP <type>android.text.TextPaint # end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin MethodDeclaration
android.text.StaticLayout$getLineCount <type>int <type>android.text.StaticLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.text.StaticLayout$getLineCount <type>int <type>android.text.StaticLayout # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.StaticLayout$getLineEnd EXP <type>android.text.StaticLayout EXP # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$removeSpan @0 <type>android.text.SpannableStringBuilder FIELD # begin Block
android.text.TextPaint$getColor EXP <type>android.text.TextPaint # Block
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder FIELD FIELD FIELD android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_shadow <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception unfollowing user" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP EXP # end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setBackgroundColor @0 <type>android.support.v7.widget.Toolbar android.graphics.Color.BLACK # begin MethodDeclaration
android.support.v7.widget.Toolbar$getBackground EXP <type>android.support.v7.widget.Toolbar # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_context_menu <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.long_press # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ContextMenu$add @0 <type>android.view.ContextMenu android.view.Menu.NONE R.id.a_item android.view.Menu.NONE "Menu A" # begin MethodDeclaration
android.view.ContextMenu$add @0 <type>android.view.ContextMenu android.view.Menu.NONE R.id.b_item android.view.Menu.NONE "Menu B" # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "ContextMenu" "Item 1a was chosen" # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$i @0 this "ContextMenu" "Item 1b was chosen" # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro4 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin TryBlock
android.content.Context$getPackageManager EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$newInstance EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.JPEG 100 <type>FileOutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.splash <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.facebook.login.widget.LoginButton <type>android.view.View R.id.login_button # end MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.skip_login_button # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Login successful" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Login canceled" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Login error" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_list_view null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_list_view # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>in.srain.cube.views.list.ListViewDataAdapter # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.rotate_header_list_view_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.list_view_item null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_item_image_view # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getId EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getTextSize EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.support.v4.widget.ScrollerCompat$create <type>android.support.v4.widget.ScrollerCompat this context EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
android.support.v4.widget.ScrollerCompat$startScroll @0 <type>android.support.v4.widget.ScrollerCompat <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.widget.ScrollerCompat$fling @0 <type>android.support.v4.widget.ScrollerCompat EXP EXP EXP EXP <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$computeScrollOffset <type>boolean <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setTop @0 <type>android.view.View 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$isFinished <type>boolean <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$post @0 <type>android.view.ViewGroup <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewCompat$canScrollVertically EXP this <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>float # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar$getTabAt EXP <type>android.app.ActionBar <type>int # begin MethodDeclaration
android.app.ActionBar$selectTab @0 <type>android.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onPageScrollStateChanged() with SCROLL_STATE_DRAGGING" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onPageScrollStateChanged() with SCROLL_STATE_SETTLING" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Search Fragment isn't available when ContactListFilter is changed" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition EXP <type>android.app.ActionBar.Tab # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition EXP <type>android.app.ActionBar.Tab # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition EXP <type>android.app.ActionBar.Tab # begin Block
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP true # end Block
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition <type>int <type>android.app.ActionBar.Tab # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onTabReselected" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenu <type>android.view.Menu <type>android.widget.PopupMenu # begin MethodDeclaration
android.widget.PopupMenu$inflate @0 <type>android.widget.PopupMenu com.android.contacts.R.menu.dialtacts_search_options # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.MenuItem$setOnMenuItemClickListener @0 <type>android.view.MenuItem <type>android.view.MenuItem.OnMenuItemClickListener # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.MenuItem$setIntent @0 <type>android.view.MenuItem EXP # MethodDeclaration
android.widget.PopupMenu$show @0 <type>android.widget.PopupMenu # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$clearFocus @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.SearchView$setQuery @0 <type>android.widget.SearchView null true # begin end Block
<END>
<S2>
<S1>
android.view.View$removeOnLayoutChangeListener @0 <type>android.view.View this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager <type>PageChangeListener # MethodDeclaration
android.support.v4.view.ViewPager$setOffscreenPageLimit @0 <type>android.support.v4.view.ViewPager 2 # end MethodDeclaration
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setMinimumWidth @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View this # begin end Block
<END>
<S2>
<S1>
android.view.View$setMinimumWidth @0 <type>android.view.View <type>int # begin Block
android.view.View$setOnClickListener @0 <type>android.view.View this # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "reset buggy flag state.." # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.PopupMenu$show @0 <type>android.widget.PopupMenu # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$setUserVisibleHint @0 <type>android.app.Fragment false # begin MethodDeclaration
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction com.android.contacts.R.id.dialtacts_frame <type>android.app.Fragment # MethodDeclaration
android.app.FragmentTransaction$hide @0 <type>android.app.FragmentTransaction <type>android.app.Fragment # MethodDeclaration
android.app.FragmentTransaction$commitAllowingStateLoss @0 <type>android.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.SearchView <type>android.view.View com.android.contacts.R.id.search_view # begin MethodDeclaration
android.widget.SearchView$setOnQueryTextListener @0 <type>android.widget.SearchView <type>android.widget.SearchView.OnQueryTextListener # MethodDeclaration
android.widget.SearchView$setOnCloseListener @0 <type>android.widget.SearchView <type>android.widget.SearchView.OnCloseListener # MethodDeclaration
android.widget.SearchView$setIconifiedByDefault @0 <type>android.widget.SearchView true # MethodDeclaration
android.widget.SearchView$setQueryHint @0 <type>android.widget.SearchView EXP # MethodDeclaration
android.widget.SearchView$setIconified @0 <type>android.widget.SearchView false # end MethodDeclaration
android.widget.SearchView$setOnQueryTextFocusChangeListener @0 <type>android.widget.SearchView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findFocus EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View com.android.contacts.R.id.search_option # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$hide @0 <type>android.app.FragmentTransaction <type>com.android.contacts.list.PhoneNumberPickerFragment # begin Block
android.app.FragmentTransaction$commitAllowingStateLoss @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setDataAndType @0 <type>android.content.Intent android.provider.CallLog.Calls.CONTENT_URI android.provider.CallLog.Calls.CONTENT_TYPE # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent "call_key" true # end Block
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setContentDescription @0 <type>android.app.ActionBar.Tab com.android.contacts.R.string.dialerIconLabel # begin MethodDeclaration
android.app.ActionBar.Tab$setTabListener @0 <type>android.app.ActionBar.Tab <type>android.app.ActionBar.TabListener # MethodDeclaration
android.app.ActionBar.Tab$setIcon @0 <type>android.app.ActionBar.Tab com.android.contacts.R.drawable.ic_tab_dialer # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setContentDescription @0 <type>android.app.ActionBar.Tab com.android.contacts.R.string.recentCallsIconLabel # begin MethodDeclaration
android.app.ActionBar.Tab$setIcon @0 <type>android.app.ActionBar.Tab com.android.contacts.R.drawable.ic_tab_recent # MethodDeclaration
android.app.ActionBar.Tab$setTabListener @0 <type>android.app.ActionBar.Tab <type>android.app.ActionBar.TabListener # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$setContentDescription @0 <type>android.app.ActionBar.Tab com.android.contacts.R.string.contactsFavoritesLabel # begin MethodDeclaration
android.app.ActionBar.Tab$setIcon @0 <type>android.app.ActionBar.Tab com.android.contacts.R.drawable.ic_tab_all # MethodDeclaration
android.app.ActionBar.Tab$setTabListener @0 <type>android.app.ActionBar.Tab <type>android.app.ActionBar.TabListener # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getBooleanExtra <type>boolean <type>android.content.Intent "call_key" false # begin end Block
<END>
<S2>
<S1>
android.os.ServiceManager$checkService EXP this "phone" # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$resolveType EXP <type>android.content.Intent EXP # begin end MethodDeclaration
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int false # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "DialpadFragment isn't ready yet when the tab is already selected." # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "CallLogFragment isn't ready yet when the tab is already selected." # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent android.provider.ContactsContract.Intents.UI.FILTER_TEXT_EXTRA_KEY # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.android.contacts.R.menu.dialtacts_options <type>android.view.Menu # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.menu_call_settings # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.search_on_action_bar # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.MenuItem$setIntent @0 <type>android.view.MenuItem EXP # MethodDeclaration
android.view.MenuItem$setOnMenuItemClickListener @0 <type>android.view.MenuItem <type>android.view.MenuItem.OnMenuItemClickListener # MethodDeclaration
android.view.MenuItem$setOnMenuItemClickListener @0 <type>android.view.MenuItem <type>android.view.MenuItem.OnMenuItemClickListener # MethodDeclaration
android.view.MenuItem$setIntent @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.search_on_action_bar # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.menu_call_settings # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.empty_right_menu_item # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.ViewConfiguration$get EXP this this # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.search_on_action_bar # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.menu_call_settings # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.empty_right_menu_item # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # begin Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # Block
android.view.ViewConfiguration$get EXP this this # Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # end Block
<END>
<S2>
<S1>
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # begin Block
android.view.ViewConfiguration$get EXP this this # Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # Block
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # end Block
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.search_on_action_bar # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.menu_call_settings # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.empty_right_menu_item # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.ViewConfiguration$get EXP this this # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.search_on_action_bar # begin MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.filter_option # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.add_contact # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.menu_call_settings # MethodDeclaration
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.android.contacts.R.id.empty_right_menu_item # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem true # MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem false # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SearchView$findFocus EXP <type>android.widget.SearchView # begin end Block
<END>
<S2>
<S1>
android.widget.SearchView$requestFocus @0 <type>android.widget.SearchView # begin end Block
<END>
<S2>
<S1>
android.app.ActionBar$getSelectedTab <type>android.app.ActionBar.Tab <type>android.app.ActionBar # begin end MethodDeclaration
android.widget.SearchView$setQuery @0 <type>android.widget.SearchView null true # begin MethodDeclaration
android.app.ActionBar$setDisplayShowCustomEnabled @0 <type>android.app.ActionBar true # MethodDeclaration
android.app.ActionBar$setNavigationMode @0 <type>android.app.ActionBar android.app.ActionBar.NAVIGATION_MODE_STANDARD # MethodDeclaration
android.app.ActionBar$setDisplayShowHomeEnabled @0 <type>android.app.ActionBar true # MethodDeclaration
android.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.app.ActionBar true # end MethodDeclaration
android.app.FragmentTransaction$show @0 <type>android.app.FragmentTransaction <type>com.android.contacts.list.PhoneNumberPickerFragment # begin MethodDeclaration
android.app.FragmentTransaction$commitAllowingStateLoss @0 <type>android.app.FragmentTransaction # MethodDeclaration
android.support.v4.view.ViewPager$setVisibility @0 <type>android.support.v4.view.ViewPager android.view.View.GONE # MethodDeclaration
android.widget.SearchView$onActionViewExpanded @0 <type>android.widget.SearchView # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar.Tab$getPosition <type>int <type>android.app.ActionBar.Tab # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Failed to show soft input method." # begin end Block
<END>
<S2>
<S1>
android.view.View$getWindowToken EXP <type>android.view.View # begin Block
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end Block
<END>
<S2>
<S1>
android.app.ActionBar$setDisplayShowCustomEnabled @0 <type>android.app.ActionBar false # begin MethodDeclaration
android.app.ActionBar$setDisplayShowHomeEnabled @0 <type>android.app.ActionBar false # MethodDeclaration
android.app.ActionBar$setNavigationMode @0 <type>android.app.ActionBar android.app.ActionBar.NAVIGATION_MODE_TABS # end MethodDeclaration
android.support.v4.view.ViewPager$setVisibility @0 <type>android.support.v4.view.ViewPager android.view.View.VISIBLE # begin MethodDeclaration
android.widget.SearchView$onActionViewCollapsed @0 <type>android.widget.SearchView # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentTransaction$hide @0 <type>android.app.FragmentTransaction <type>com.android.contacts.list.PhoneNumberPickerFragment # begin Block
android.app.FragmentTransaction$commitAllowingStateLoss @0 <type>android.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.app.Fragment$setMenuVisibility @0 <type>android.app.Fragment <type>boolean # begin Block
android.app.Fragment$setUserVisibleHint @0 <type>android.app.Fragment <type>boolean # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setClassName @0 <type>android.content.Intent <type>String <type>String # begin MethodDeclaration
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP FIELD mAxisLabelPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$close @0 <type>android.graphics.Path # begin Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mLimitLinePaint # end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path FIELD FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path FIELD FIELD # begin end IfFalse
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.net.Uri$getPathSegments EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPathSegments EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_header <type>int # begin Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_content <type>int # Block
android.content.res.TypedArray$getFloat EXP <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_resistance EXP # Block
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_duration_to_close <type>int # Block
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_duration_to_close_header <type>int # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_ratio_of_header_height_to_refresh <type>float # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_keep_header_when_refresh <type>boolean # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.PtrFrameLayout_ptr_pull_to_fresh <type>boolean # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.widget.TextView$setClickable @0 <type>android.widget.TextView true # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView 0xffff6600 # Block
android.widget.TextView$setGravity @0 <type>android.widget.TextView Gravity.CENTER # Block
android.widget.TextView$setTextSize @0 <type>android.widget.TextView 20 # Block
android.widget.TextView$setText @0 <type>android.widget.TextView "The content view in PtrFrameLayout is empty. Do you forget to specify its id in xml layout file?" # end Block
<END>
<S2>
<S1>
android.widget.Scroller$computeScrollOffset EXP <type>android.widget.Scroller # begin MethodDeclaration
android.widget.Scroller$isFinished EXP <type>android.widget.Scroller # MethodDeclaration
android.widget.Scroller$getCurrY <type>int <type>android.widget.Scroller # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller true # begin end Block
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller true # begin end Block
<END>
<S2>
<S1>
android.widget.Scroller$startScroll @0 <type>android.widget.Scroller 0 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller true # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap.Config$hashCode EXP <type>android.graphics.Bitmap.Config # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.view.WindowManager <type>android.app.Activity android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay EXP <type>android.view.WindowManager # MethodDeclaration
android.app.Activity$getResources EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$getApplicationInfo <type>android.content.pm.ApplicationInfo <type>android.content.pm.PackageManager EXP android.content.pm.PackageManager.GET_META_DATA # end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getWindow <type>android.view.Window <type>android.app.Activity # begin MethodDeclaration
android.view.Window$getDecorView <type>android.view.ViewGroup <type>android.view.Window # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity <type>int # begin end Block
android.view.Window$getAttributes <type>android.view.WindowManager.LayoutParams <type>android.view.Window # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray 0 false # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.Resources$getIdentifier <type>int <type>android.content.res.Resources <type>String "dimen" "android" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDimensionPixelSize <type>int <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>ViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.library.cards.R.id.card_main_inner_topcolored_layout # begin Block
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.library.cards.R.id.card_main_inner_topcolored_title # Block
android.view.View$findViewById FIELD <type>android.view.View it.gmariotti.cardslib.library.cards.R.id.card_main_inner_topcolored_subtitle # end Block
android.view.View$setTag @0 <type>android.view.View <type>ViewHolder # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutResource @0 <type>android.view.View <type>int # begin Block
android.view.View$inflate @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context FIELD android.content.Context.MODE_PRIVATE # begin Block
android.content.SharedPreferences$getAll EXP <type>android.content.SharedPreferences # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context FIELD android.content.Context.MODE_PRIVATE # begin Block
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putFloat @0 <type>android.content.SharedPreferences.Editor <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>Object # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putStringSet @0 <type>android.content.SharedPreferences.Editor <type>String <type>java.util.Set # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setAntiAlias @0 <type>android.text.TextPaint true # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$ascent EXP <type>android.text.TextPaint # begin Block
android.text.TextPaint$descent EXP <type>android.text.TextPaint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas FIELD EXP FIELD EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>CharSequence 0 EXP <type>float <type>float <type>android.text.TextPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>int <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray android.support.design.R.styleable.TextAppearance_android_textColor <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray android.support.design.R.styleable.TextAppearance_android_textSize <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray android.support.design.R.styleable.TextAppearance_android_textColor <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>float <type>android.content.res.TypedArray android.support.design.R.styleable.TextAppearance_android_textSize <type>float # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$getTypeface EXP <type>android.text.TextPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setColor @0 <type>android.text.TextPaint EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setColor @0 <type>android.text.TextPaint <type>int # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.text.TextPaint$measureText EXP <type>android.text.TextPaint <type>CharSequence 0 EXP # MethodDeclaration
android.support.v4.view.GravityCompat$getAbsoluteGravity <type>int this <type>int EXP # end MethodDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.text.TextPaint$measureText EXP <type>android.text.TextPaint <type>CharSequence 0 EXP # MethodDeclaration
android.support.v4.view.GravityCompat$getAbsoluteGravity <type>int this <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$ascent EXP <type>android.text.TextPaint # begin end SwitchCase
<END>
<S2>
<S1>
android.text.TextPaint$descent EXP <type>android.text.TextPaint # begin SwitchCase
android.text.TextPaint$ascent EXP <type>android.text.TextPaint # SwitchCase
android.text.TextPaint$descent EXP <type>android.text.TextPaint # SwitchCase
android.graphics.Rect$centerY EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$centerX EXP <type>android.graphics.Rect # begin end SwitchCase
<END>
<S2>
<S1>
android.text.TextPaint$ascent EXP <type>android.text.TextPaint # begin end SwitchCase
<END>
<S2>
<S1>
android.text.TextPaint$descent EXP <type>android.text.TextPaint # begin SwitchCase
android.text.TextPaint$ascent EXP <type>android.text.TextPaint # SwitchCase
android.text.TextPaint$descent EXP <type>android.text.TextPaint # SwitchCase
android.graphics.Rect$centerY EXP <type>android.graphics.Rect # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$centerX EXP <type>android.graphics.Rect # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getLayoutDirection EXP this <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width <type>float <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>float <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin Block
android.text.TextUtils$ellipsize <type>CharSequence this <type>CharSequence <type>android.text.TextPaint <type>float android.text.TextUtils.TruncateAt.END # end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.text.TextPaint$setColor @0 <type>android.text.TextPaint <type>int # MethodDeclaration
android.text.TextPaint$ascent <type>float <type>android.text.TextPaint # MethodDeclaration
android.text.TextPaint$descent <type>float <type>android.text.TextPaint # MethodDeclaration
android.text.TextPaint$measureText EXP <type>android.text.TextPaint <type>CharSequence 0 EXP # end MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.text.TextPaint$descent EXP <type>android.text.TextPaint # MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>CharSequence 0 EXP 0 EXP <type>android.text.TextPaint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$alpha EXP this <type>int # begin MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>float <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.os.StrictMode$setThreadPolicy @0 this EXP # begin Block
android.os.StrictMode$setVmPolicy @0 this EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "You clicked the center title!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$setTitle @0 <type>android.app.Activity <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource this.data <type>android.content.res.Resources <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open this.data <type>android.content.res.AssetManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$setDuration @0 <type>android.view.animation.AlphaAnimation <type>int # begin Block
android.view.animation.AlphaAnimation$setInterpolator @0 <type>android.view.animation.AlphaAnimation EXP # Block
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.AlphaAnimation # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # ConstructorDeclaration
android.graphics.Paint$setFilterBitmap @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.graphics.Paint$setDither @0 <type>android.graphics.Paint true # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>Integer # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # Block
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # end Block
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 EXP EXP # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF <type>android.graphics.RectF android.graphics.Matrix.ScaleToFit.FILL # MethodDeclaration
android.graphics.BitmapShader$setLocalMatrix @0 <type>android.graphics.BitmapShader <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mGridPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mLimitLinePaint # Block
android.graphics.Path$reset @0 <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Hello, World" # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
android.net.Uri$getAuthority <type>String <type>android.net.Uri # begin MethodDeclaration
android.content.Context$createPackageContext <type>android.content.Context <type>android.content.Context <type>String 0 # MethodDeclaration
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin Block
android.net.Uri$getPathSegments EXP <type>android.net.Uri # Block
android.content.res.Resources$getIdentifier <type>int <type>android.content.res.Resources <type>String <type>String <type>String # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_android_progress 0f # begin MethodDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_progressColor <type>int # MethodDeclaration
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_android_max 100f # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_android_indeterminate false # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_autoStart true # MethodDeclaration
android.content.res.TypedArray$getInteger <type>int <type>android.content.res.TypedArray R.styleable.CircleImageView_android_indeterminateDuration 4000 # MethodDeclaration
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.CircleImageView_fbb_progressWidthRatio <type>float # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # MethodDeclaration
android.graphics.Paint$setStrokeCap @0 <type>android.graphics.Paint android.graphics.Paint.Cap.BUTT # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>float <type>float false <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP <type>float false <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$cancel @0 <type>android.animation.ValueAnimator # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$cancel @0 <type>android.animation.ValueAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$cancel @0 <type>android.animation.ValueAnimator # begin end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet$cancel @0 <type>android.animation.AnimatorSet # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet$addListener @0 <type>android.animation.AnimatorSet EXP # begin Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet$play <type>android.animation.AnimatorSet.Builder <type>android.animation.AnimatorSet <type>android.animation.AnimatorSet # begin end Block
<END>
<S2>
<S1>
android.animation.AnimatorSet.Builder$after @0 <type>android.animation.AnimatorSet.Builder <type>android.animation.AnimatorSet # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>int # begin MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray 0 # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ARGB_8888 # begin ConstructorDeclaration
android.graphics.Bitmap$getPixel this.color <type>android.graphics.Bitmap 0 0 # ConstructorDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.app.Fragment$getFragmentManager EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getResources EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getId EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getTag EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getView EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Fragment$getChildFragmentManager EXP <type>android.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.DialogFragment$getDialog EXP <type>android.app.DialogFragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_1_african_story_books # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_1_african_story_books_subtitle # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_2_volunteer_professionals # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_2_volunteer_professionals_subtitle # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_3_download_and_go # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_3_download_and_go_subtitle # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_4_different_languages # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context org.bookdash.android.R.string.slide_4_different_languages_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # begin MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # MethodDeclaration
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray EXP <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.KEY_SESSION_ID # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.NotificationManagerCompat$from EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # MethodDeclaration
android.widget.ImageView$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "No Valid Color Table" # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setPixels @0 <type>android.graphics.Bitmap <type>int 0 <type>int 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getPixels @0 <type>android.graphics.Bitmap <type>int 0 <type>int 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setPixels @0 <type>android.graphics.Bitmap <type>int 0 <type>int 0 0 <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getPixel <type>int <type>android.graphics.Bitmap 1079 1844 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$computeScrollOffset EXP <type>android.widget.Scroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$fling @0 <type>android.widget.Scroller <type>int <type>int <type>int <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$isFinished EXP <type>android.widget.Scroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$getCurrX EXP <type>android.widget.Scroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$getCurrY EXP <type>android.widget.Scroller # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.ArrayMap$putAll @0 <type>android.support.v4.util.ArrayMap FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.ArrayMap$put @0 <type>android.support.v4.util.ArrayMap <type>Option <type>T # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.ArrayMap$containsKey EXP <type>android.support.v4.util.ArrayMap <type>Option # begin MethodDeclaration
android.support.v4.util.ArrayMap$get EXP <type>android.support.v4.util.ArrayMap <type>Option # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.ArrayMap$equals EXP <type>android.support.v4.util.ArrayMap FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.ArrayMap$hashCode EXP <type>android.support.v4.util.ArrayMap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Directory exists, not unzipping" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.support.v7.widget.RecyclerView android.view.ViewGroup.LayoutParams.MATCH_PARENT android.view.ViewGroup.LayoutParams.MATCH_PARENT # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setItemAnimator @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setFadingEdgeLength @0 <type>android.support.v7.widget.RecyclerView 0 # MethodDeclaration
android.support.v7.widget.RecyclerView$setClipToPadding @0 <type>android.support.v7.widget.RecyclerView false # MethodDeclaration
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>com.mikepenz.materialdrawer.adapter.DrawerAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout R.drawable.material_drawer_shadow_left # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundResource @0 <type>android.widget.LinearLayout R.drawable.material_drawer_shadow_right # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getPaddingLeft EXP <type>android.support.v7.widget.RecyclerView # begin Block
android.support.v7.widget.RecyclerView$getPaddingRight EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getPaddingBottom EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$setPadding @0 <type>android.support.v7.widget.RecyclerView EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getPaddingLeft EXP <type>android.support.v7.widget.RecyclerView # begin Block
android.support.v7.widget.RecyclerView$getPaddingTop EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$getPaddingRight EXP <type>android.support.v7.widget.RecyclerView # Block
android.support.v7.widget.RecyclerView$setPadding @0 <type>android.support.v7.widget.RecyclerView EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$scrollToPosition @0 <type>android.support.v7.widget.RecyclerView 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # begin MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 20 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this EXP 0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews R.id.text EXP # begin MethodDeclaration
android.app.Notification.Builder$build EXP <type>android.app.Notification.Builder # MethodDeclaration
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity android.R.id.content # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.view.View$draw @0 <type>android.view.View <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageState <type>String this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getApplicationInfo EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getString <type>String <type>android.app.Activity EXP # MethodDeclaration
android.os.Environment$getExternalStorageDirectory EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 100 <type>java.io.FileOutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getLocationInWindow @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getClass EXP <type>android.app.Activity # begin MethodDeclaration
android.util.Log$i @0 this Constants.LOG_TAG "♬ Screenshot is taken" # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.app.Activity # begin Block
android.support.v4.app.FragmentManager$findFragmentById <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getMap <type>com.google.android.gms.maps.GoogleMap <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity android.R.id.content # begin MethodDeclaration
android.view.View$setDrawingCacheEnabled @0 <type>android.view.View true # MethodDeclaration
android.view.View$getDrawingCache <type>android.graphics.Bitmap <type>android.view.View # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP EXP # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>com.google.android.gms.maps.GoogleMap EXP EXP null # MethodDeclaration
android.app.Activity$getClass EXP <type>android.app.Activity # MethodDeclaration
android.util.Log$i @0 this Constants.LOG_TAG "♬ Screenshot is taken (including Map)" # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>byte # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[getActionBar]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG "[dispatchInvalidateOptionsMenu]" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.MenuItem$getTitleCondensed EXP <type>android.view.MenuItem # begin IfTrue
android.util.Log$d @0 this TAG EXP # end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this TAG EXP # begin end IfTrue
<END>
<S2>
<S1>
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder <type>String <type>String # begin MethodDeclaration
android.net.Uri.Builder$build EXP <type>android.net.Uri.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri.Builder$appendQueryParameter @0 <type>android.net.Uri.Builder <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton null # begin Block
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton EXP # Block
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton <type>android.widget.CompoundButton.OnCheckedChangeListener # end Block
<END>
<S2>
<S1>
android.content.Context$getPackageName <type>String <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>java.io.File this # begin end Block
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 45 # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.graphics.Color$rgb EXP this 104 241 175 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.inputmethod.InputMethodManager <type>android.content.Context android.content.Context.INPUT_METHOD_SERVICE # begin MethodDeclaration
android.view.inputmethod.InputMethodManager$showSoftInput @0 <type>android.view.inputmethod.InputMethodManager <type>android.widget.EditText android.view.inputmethod.InputMethodManager.SHOW_IMPLICIT # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getCurrentFocus <type>android.view.View <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.view.inputmethod.InputMethodManager <type>android.app.Activity android.content.Context.INPUT_METHOD_SERVICE # begin Block
android.view.View$getWindowToken EXP <type>android.view.View # Block
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin MethodDeclaration
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_SP <type>int <type>android.util.DisplayMetrics # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin MethodDeclaration
android.view.Display$getMetrics @0 <type>android.view.Display <type>android.util.DisplayMetrics # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin MethodDeclaration
android.view.Display$getMetrics @0 <type>android.view.Display <type>android.util.DisplayMetrics # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_IN_PARENT # MethodDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>android.widget.RelativeLayout.LayoutParams # MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle ARG_SELECTED # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.cancel # begin MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP this # MethodDeclaration
android.app.Activity$getString EXP <type>android.app.Activity com.github.pockethub.R.string.clear # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEUTRAL EXP this # MethodDeclaration
android.app.Activity$getLayoutInflater <type>android.view.LayoutInflater <type>android.app.Activity # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.widget.ListView <type>android.view.LayoutInflater com.github.pockethub.R.layout.dialog_list_view null # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.os.Bundle$getInt <type>int <type>android.os.Bundle ARG_SELECTED_CHOICE # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>MilestoneListAdapter # end MethodDeclaration
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.widget.ListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setSelection @0 <type>android.widget.ListView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$getApplicationInfo EXP <type>android.content.pm.PackageManager EXP EXP # MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator <type>EasingFunction # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator <type>EasingFunction # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # end MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator <type>EasingFunction # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator <type>EasingFunction # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # end MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # end MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # begin end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseX" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this this "phaseY" 0f 1f # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator <type>int # MethodDeclaration
android.animation.ObjectAnimator$addUpdateListener @0 <type>android.animation.ObjectAnimator <type>android.animation.ValueAnimator.AnimatorUpdateListener # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_cursor <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.TITLE_COLUMN # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.SUBTITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.HEADER_COLUMN # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.ID_COLUMN # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.THUMBNAIL_COLUMN # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>long <type>android.content.ContentResolver it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.CONTENT_URI EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>android.support.v4.app.DialogFragment <type>android.support.v4.app.FragmentManager <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.DialogFragment$dismiss @0 <type>android.support.v4.app.DialogFragment # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.DialogFragment$show @0 <type>android.support.v4.app.DialogFragment <type>android.support.v4.app.FragmentManager <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>SupportManagerFragment <type>android.support.v4.app.FragmentManager <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin Block
android.support.v4.app.FragmentManager$executePendingTransactions @0 <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.app.FragmentManager$executePendingTransactions @0 <type>android.app.FragmentManager # begin MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>android.app.DialogFragment <type>android.app.FragmentManager <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.DialogFragment$dismiss @0 <type>android.app.DialogFragment # begin end Block
<END>
<S2>
<S1>
android.app.DialogFragment$show @0 <type>android.app.DialogFragment <type>android.app.FragmentManager <type>String # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getFragmentManager <type>android.app.FragmentManager <type>android.app.Activity # begin MethodDeclaration
android.app.FragmentManager$findFragmentByTag <type>HoneycombManagerFragment <type>android.app.FragmentManager <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction EXP <type>android.app.FragmentManager # begin Block
android.app.FragmentManager$executePendingTransactions @0 <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.app.Activity$getClass <type>Object <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Error dialog manager received exception" FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "inner" 1 # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "inner" "2" # MethodDeclaration
android.os.Bundle$putStringArray @0 <type>android.os.Bundle "deep list" EXP # MethodDeclaration
android.os.Bundle$putBundle @0 <type>android.os.Bundle "nested bundle" <type>android.os.Bundle # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "boolValue" true # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "intValue" 7 # MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle "longValue" 5000000000l # MethodDeclaration
android.os.Bundle$putDouble @0 <type>android.os.Bundle "doubleValue" 3.14 # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "stringValue" "hello world" # MethodDeclaration
android.os.Bundle$putStringArray @0 <type>android.os.Bundle "stringArrayValue" EXP # MethodDeclaration
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle "stringArrayListValue" <type>java.util.ArrayList # MethodDeclaration
android.os.Bundle$putBundle @0 <type>android.os.Bundle "nested" <type>android.os.Bundle # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle "boolValue" # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle "intValue" # MethodDeclaration
android.os.Bundle$getLong EXP <type>android.os.Bundle "longValue" # MethodDeclaration
android.os.Bundle$getDouble EXP <type>android.os.Bundle "doubleValue" # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle "stringValue" # MethodDeclaration
android.os.Bundle$getStringArrayList <type>java.util.List <type>android.os.Bundle "stringArrayValue" # MethodDeclaration
android.os.Bundle$getStringArrayList <type>java.util.List <type>android.os.Bundle "stringArrayListValue" # MethodDeclaration
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle "nested" # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle "inner" # MethodDeclaration
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle "nested bundle" # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle "inner" # MethodDeclaration
android.os.Bundle$getStringArrayList <type>java.util.List <type>android.os.Bundle "deep list" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putShort @0 <type>android.os.Bundle "shortValue" 7 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>LoginClient.Result <type>android.content.Intent LoginFragment.RESULT_KEY # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent EXP com.facebook.FacebookActivity # begin MethodDeclaration
android.content.Intent$setAction @0 <type>android.content.Intent EXP # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle LoginFragment.EXTRA_REQUEST <type>LoginClient.Request # MethodDeclaration
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$openInputStream <type>java.io.InputStream <type>android.content.ContentResolver <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin TryBlock
android.util.Xml$asAttributeSet <type>android.util.AttributeSet this <type>android.content.res.XmlResourceParser # end TryBlock
<END>
<S2>
<S1>
android.content.res.XmlResourceParser$close @0 <type>android.content.res.XmlResourceParser # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.actionbarsherlock.R.styleable.SherlockMenuGroup # begin MethodDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_id <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_menuCategory <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_orderInCategory <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_checkableBehavior <type>int # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_visible <type>boolean # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuGroup_android_enabled <type>boolean # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.actionbarsherlock.R.styleable.SherlockMenuItem # begin MethodDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_id <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_menuCategory <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_orderInCategory <type>int # MethodDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_title # MethodDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_titleCondensed # MethodDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_icon 0 # MethodDeclaration
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_alphabeticShortcut # MethodDeclaration
android.content.res.TypedArray$getString EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_numericShortcut # end MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_checked <type>boolean # begin MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_visible <type>boolean # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_enabled <type>boolean # MethodDeclaration
android.content.res.TypedArray$getValue @0 <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_showAsAction <type>android.util.TypedValue # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_onClick # MethodDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_actionLayout 0 # MethodDeclaration
android.content.res.TypedArray$getValue @0 <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_actionViewClass <type>android.util.TypedValue # MethodDeclaration
android.content.res.TypedArray$getValue @0 <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_actionProviderClass <type>android.util.TypedValue # end MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockMenuItem_android_checkable false # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getClassLoader EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.bookmarks # begin MethodDeclaration
android.support.v7.app.ActionBar$setIcon @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.drawable.ic_bookmark_white_24dp # MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>com.github.pockethub.core.issue.IssueFilter <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.AdapterView$getItemAtPosition <type>com.github.pockethub.core.issue.IssueFilter <type>android.widget.AdapterView <type>int # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.github.pockethub.core.issue.IssueFilter # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Empty View, Pull Down/Up to Add Items" # MethodDeclaration
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>android.widget.ArrayAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this PullToRefreshGridActivity.this "Pull Down!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this PullToRefreshGridActivity.this "Pull Up!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$notifyDataSetChanged @0 <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add @0 <type>android.view.Menu 0 <type>int 0 EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu <type>int # begin MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.library.R.id.card_main_inner_simple_title # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView mTitle # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Clickable set to true without onClickListener" # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "LongClickable set to true without onLongClickListener" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "area value not valid in addPartialOnClickListner" # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollview_noheader <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle "id" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayName # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayDate # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayIcon # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayTempMin # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayTempMax # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_weather_dayDescr # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.util.Log$d @0 this "SwA" EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.TRANSPARENT # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.TRANSPARENT android.graphics.PorterDuff.Mode.SRC # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP 0 0 null # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas FIELD FIELD EXP EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Gallery$setAdapter @0 <type>android.widget.Gallery EXP # begin end MethodDeclaration
android.widget.Gallery$setOnItemClickListener @0 <type>android.widget.Gallery EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this GalleryActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.GalleryActivity_android_galleryItemBackground 0 # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin Block
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.FIT_XY # Block
android.widget.ImageView$setBackgroundResource @0 <type>android.widget.ImageView <type>int # end Block
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent MusicService.ACTION_CMD # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent MusicService.CMD_NAME MusicService.CMD_PAUSE # end Block
<END>
<S2>
<S1>
android.net.wifi.WifiManager.WifiLock$release @0 <type>android.net.wifi.WifiManager.WifiLock # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$isPlaying EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$getCurrentPosition EXP <type>android.media.MediaPlayer # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$getCurrentPosition <type>int <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin MethodDeclaration
android.text.TextUtils$equals EXP this <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin Block
android.media.MediaMetadata$getString <type>String <type>android.media.MediaMetadata com.example.android.uamp.model.MusicProvider.CUSTOM_METADATA_TRACK_SOURCE # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setAudioStreamType @0 <type>android.media.MediaPlayer android.media.AudioManager.STREAM_MUSIC # begin TryBlock
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer <type>String # TryBlock
android.media.MediaPlayer$prepareAsync @0 <type>android.media.MediaPlayer # TryBlock
android.net.wifi.WifiManager.WifiLock$acquire @0 <type>android.net.wifi.WifiManager.WifiLock # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$pause @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$getCurrentPosition <type>int <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer <type>int # begin end Block
<END>
<S2>
<S1>
android.media.AudioManager$requestAudioFocus <type>int <type>android.media.AudioManager this android.media.AudioManager.STREAM_MUSIC android.media.AudioManager.AUDIOFOCUS_GAIN # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setVolume @0 <type>android.media.MediaPlayer <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setVolume @0 <type>android.media.MediaPlayer <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer <type>int # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$getCurrentPosition EXP <type>android.media.MediaPlayer # begin MethodDeclaration
android.media.MediaPlayer$getCurrentPosition <type>int <type>android.media.MediaPlayer # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setWakeMode @0 <type>android.media.MediaPlayer EXP android.os.PowerManager.PARTIAL_WAKE_LOCK # begin Block
android.media.MediaPlayer$setOnPreparedListener @0 <type>android.media.MediaPlayer this # Block
android.media.MediaPlayer$setOnCompletionListener @0 <type>android.media.MediaPlayer this # Block
android.media.MediaPlayer$setOnErrorListener @0 <type>android.media.MediaPlayer this # Block
android.media.MediaPlayer$setOnSeekCompleteListener @0 <type>android.media.MediaPlayer this # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$reset @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$reset @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.net.wifi.WifiManager.WifiLock$release @0 <type>android.net.wifi.WifiManager.WifiLock # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>MyAdapter # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_pager_list <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentList" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation ANIMATION_INTERPOLATOR # begin ConstructorDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # ConstructorDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # ConstructorDeclaration
android.view.animation.Animation$setInterpolator @0 <type>android.view.animation.Animation ANIMATION_INTERPOLATOR # ConstructorDeclaration
android.view.animation.Animation$setDuration @0 <type>android.view.animation.Animation <type>int # ConstructorDeclaration
android.view.animation.Animation$setFillAfter @0 <type>android.view.animation.Animation true # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # Block
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Retry button clicked" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.AlertDialog$show @0 <type>android.support.v7.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.AlertDialog.Builder$setTitle @0 <type>android.support.v7.app.AlertDialog.Builder EXP # begin MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.support.v7.app.AlertDialog.Builder$setMessage @0 <type>android.support.v7.app.AlertDialog.Builder EXP # MethodDeclaration
android.support.v7.app.AlertDialog.Builder$setPositiveButton @0 <type>android.support.v7.app.AlertDialog.Builder android.R.string.ok null # MethodDeclaration
android.support.v7.app.AlertDialog.Builder$show <type>android.support.v7.app.AlertDialog <type>android.support.v7.app.AlertDialog.Builder # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.support.v7.app.AlertDialog$findViewById EXP <type>android.support.v7.app.AlertDialog android.R.id.message # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # begin MethodDeclaration
android.view.View$getTag EXP <type>android.view.View # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent org.bookdash.android.presentation.bookinfo.BookInfoActivity.BOOK_PARCEL EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.Snackbar$make EXP this <type>org.bookdash.android.presentation.view.AutofitRecyclerView <type>int android.support.design.widget.Snackbar.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.image # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.handle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.tweet # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this Twitter.this "Error loading tweets" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$getCount EXP <type>android.widget.ArrayAdapter # begin Block
android.widget.ArrayAdapter$getItem <type>com.google.gson.JsonObject <type>android.widget.ArrayAdapter EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this Twitter.this "Error loading tweets" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 20000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "centerCrop" # begin MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "fitCenter" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "centerInside" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "gif centerCrop" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "gif fitCenter" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "gif resource" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "exif rotated" # MethodDeclaration
android.widget.ArrayAdapter$add @0 <type>android.widget.ArrayAdapter "twitter drawable resource" # MethodDeclaration
android.widget.Spinner$setAdapter @0 <type>android.widget.Spinner <type>android.widget.ArrayAdapter # end MethodDeclaration
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$addRect @0 <type>android.graphics.Path EXP EXP EXP EXP android.graphics.Path.Direction.CCW # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getFileStreamPath <type>java.io.File <type>android.content.Context <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getFileStreamPath <type>java.io.File <type>android.content.Context "hprof-dump.hprof" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Debug$dumpHprofData @0 this EXP # begin end TryBlock
<END>
<S2>
<S1>
android.app.Application$getResources <type>android.content.res.Resources <type>android.app.Application # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getBoolean <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getColorStateList <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getInteger <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getStringArray <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getIntArray <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>Object this <type>android.app.Application <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getMovie <type>Object <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.app.Application$getPackageName EXP <type>android.app.Application # begin MethodDeclaration
android.content.res.Resources$getIdentifier EXP <type>android.content.res.Resources EXP null EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsIntent$launchUrl @0 <type>android.support.customtabs.CustomTabsIntent <type>android.app.Activity <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.app.Activity$startActivity @0 <type>android.app.Activity EXP # begin end Block
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$bindCustomTabsService @0 this <type>android.app.Activity <type>String <type>android.support.customtabs.CustomTabsServiceConnection # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$warmup @0 <type>android.support.customtabs.CustomTabsClient 0L # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$unbindService @0 <type>android.app.Activity <type>android.support.customtabs.CustomTabsServiceConnection # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsClient$newSession <type>android.support.customtabs.CustomTabsSession <type>android.support.customtabs.CustomTabsClient null # begin end Block
<END>
<S2>
<S1>
android.support.customtabs.CustomTabsSession$mayLaunchUrl EXP <type>android.support.customtabs.CustomTabsSession <type>android.net.Uri <type>android.os.Bundle <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this 122 122 122 # begin ClassDeclaration
android.graphics.Color$rgb <type>int this 122 122 122 # end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # ClassDeclaration
android.net.Uri$fromFile EXP this <type>java.io.File # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this EXP # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this EXP # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # ClassDeclaration
android.provider.ContactsContract.Contacts.CONTENT_URI$buildUpon EXP this # ClassDeclaration
android.provider.ContactsContract.Contacts.CONTENT_URI$buildUpon EXP this # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # ClassDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # end ClassDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$isAlive EXP <type>android.view.ViewTreeObserver # begin MethodDeclaration
android.widget.ImageView$getViewTreeObserver EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # begin MethodDeclaration
android.net.NetworkInfo$isConnectedOrConnecting EXP <type>android.net.NetworkInfo # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this <type>int <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # begin MethodDeclaration
android.view.View$setBackgroundResource @0 <type>android.view.View com.gc.materialdesign.R.drawable.background_progress # MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # end MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "min" 0 # begin MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "max" 100 # MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "progress" <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#1E88E5" # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.RelativeLayout.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 128 <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.RelativeLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.RelativeLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$getBackground <type>android.graphics.drawable.LayerDrawable <type>android.view.View # begin MethodDeclaration
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # MethodDeclaration
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AutoCompleteTextView$setAdapter @0 <type>android.widget.AutoCompleteTextView <type>android.widget.ArrayAdapter # begin end MethodDeclaration
android.widget.AutoCompleteTextView$setOnItemClickListener @0 <type>android.widget.AutoCompleteTextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AdapterView$getAdapter EXP <type>android.widget.AdapterView # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout false # begin end MethodDeclaration
android.widget.LinearLayout$setOnTouchListener @0 <type>android.widget.LinearLayout EXP # begin MethodDeclaration
android.view.SurfaceView$getHolder <type>android.view.SurfaceHolder <type>android.view.SurfaceView # MethodDeclaration
android.view.SurfaceHolder$addCallback @0 <type>android.view.SurfaceHolder <type>android.view.SurfaceHolder.Callback # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$takePicture @0 <type>android.hardware.Camera <type>android.hardware.Camera.ShutterCallback null <type>android.hardware.Camera.PictureCallback # begin end Block
<END>
<S2>
<S1>
android.hardware.Camera$open <type>android.hardware.Camera this # begin end TryBlock
<END>
<S2>
<S1>
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$startPreview @0 <type>android.hardware.Camera # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$stopPreview @0 <type>android.hardware.Camera # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$release @0 <type>android.hardware.Camera # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$setPreviewDisplay @0 <type>android.hardware.Camera <type>android.view.SurfaceHolder # begin end TryBlock
<END>
<S2>
<S1>
android.widget.LinearLayout$setEnabled @0 <type>android.widget.LinearLayout true # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$getParameters <type>android.hardware.Camera.Parameters <type>android.hardware.Camera # begin end MethodDeclaration
android.hardware.Camera.Parameters$setPreviewSize @0 <type>android.hardware.Camera.Parameters <type>int <type>int # begin MethodDeclaration
android.hardware.Camera$setParameters @0 <type>android.hardware.Camera <type>android.hardware.Camera.Parameters # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera.Parameters$getSupportedPreviewSizes <type>java.util.List <type>android.hardware.Camera.Parameters # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$peekDecorView <type>android.view.ViewGroup <type>android.view.Window # begin Block
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>OverlayView <type>android.view.WindowManager.LayoutParams # Block
android.view.ViewGroup$bringChildToFront @0 <type>android.view.ViewGroup <type>OverlayView # end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin Block
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin MethodDeclaration
android.os.Looper$myLooper EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 255 # MethodDeclaration
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF 0 270 true <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 255 # MethodDeclaration
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF 90 270 true <type>android.graphics.Paint # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float EXP <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this EXP EXP # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 650 # MethodDeclaration
android.animation.ValueAnimator$setInterpolator @0 <type>android.animation.ValueAnimator EXP # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this 255 122 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 650 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 45 0 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 650 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 EXP 0 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 650 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas EXP EXP <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas EXP <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView <type>android.support.v7.widget.LinearLayoutManager # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>GifAdapter # MethodDeclaration
android.support.v7.widget.RecyclerView$addOnScrollListener @0 <type>android.support.v7.widget.RecyclerView <type>com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getSystemService <type>android.content.ClipboardManager <type>android.app.Activity android.content.Context.CLIPBOARD_SERVICE # begin MethodDeclaration
android.content.ClipData$newPlainText <type>android.content.ClipData this "giphy_url" FIELD # MethodDeclaration
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Clickable card" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Content Area" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Header Area" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setActivated @0 <type>android.view.View false # begin Block
android.view.ActionMode$finish @0 <type>android.view.ActionMode # end Block
<END>
<S2>
<S1>
android.view.ActionMode$getMenuInflater <type>android.view.MenuInflater <type>android.view.ActionMode # begin MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.carddemo_cab_example <type>android.view.Menu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Change Text" android.widget.Toast.LENGTH_LONG # begin end SwitchCase
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this "MPAndroiChart" "Warning! You have more than 6 LimitLines on your axis, do you really want that?" # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray 0 android.view.Gravity.NO_GRAVITY # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoPanelHeight EXP # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoShadowHeight EXP # Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoParalaxOffset EXP # Block
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoFlingVelocity <type>int # Block
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoFadeColor <type>int # Block
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoDragView EXP # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoOverlay <type>boolean # Block
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoClipPanel <type>boolean # Block
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoAnchorPoint <type>float # Block
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray com.sothree.slidinguppanel.library.R.styleable.SlidingUpPanelLayout_umanoInitialState EXP # end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View null # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin Block
android.view.View$setFocusable @0 <type>android.view.View false # Block
android.view.View$setFocusableInTouchMode @0 <type>android.view.View false # end Block
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getRight <type>int <type>android.view.View # Block
android.view.View$getTop <type>int <type>android.view.View # Block
android.view.View$getBottom <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getBackground <type>android.graphics.drawable.Drawable <type>android.view.View # begin MethodDeclaration
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin end Block
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setTranslationY @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$requestLayout @0 <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas android.graphics.Canvas.CLIP_SAVE_FLAG # begin end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$getClipBounds @0 <type>android.graphics.Canvas <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$clipRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>android.graphics.Rect <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int <type>int <type>int <type>int # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin Block
android.view.View$getTop <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin Block
android.view.View$getBottom EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_recyclerview_materialcard <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP " Click on ActionArea " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int null # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$size <type>int <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt <type>int <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$valueAt <type>Object <type>android.util.SparseArray <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Closed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Open" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "LeakCanary" <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "LeakCanary" EXP # begin end Block
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager 0xDEAFBEEF <type>android.app.Notification # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Notification$setLatestEventInfo @0 <type>android.app.Notification this <type>String <type>String <type>android.app.PendingIntent # begin end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$getNotification <type>android.app.Notification <type>android.app.Notification.Builder # begin end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$build <type>android.app.Notification <type>android.app.Notification.Builder # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById this.profileIcon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_profileIcon # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # ConstructorDeclaration
android.view.View$findViewById this.email <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_email # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$alpha EXP this <type>int # begin MethodDeclaration
android.graphics.Color$alpha EXP this <type>int # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float 0 <type>float 0 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$mapPoints @0 <type>android.graphics.Matrix <type>float 0 <type>float 0 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # end Block
<END>
<S2>
<S1>
android.graphics.RectF$width EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float EXP EXP # begin MethodDeclaration
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$getValues @0 <type>android.graphics.Matrix <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$width EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$width EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$height EXP <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver.SCHEME_FILE$equals EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin MethodDeclaration
android.media.ExifInterface$getAttributeInt EXP <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION android.media.ExifInterface.ORIENTATION_NORMAL # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getCount EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItem EXP <type>android.widget.BaseAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItemId EXP <type>android.widget.BaseAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getView EXP <type>android.widget.BaseAdapter EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$areAllItemsEnabled EXP <type>android.widget.BaseAdapter # begin MethodDeclaration
android.widget.BaseAdapter$areAllItemsEnabled EXP <type>android.widget.BaseAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDropDownView EXP <type>android.widget.BaseAdapter EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItemViewType EXP <type>android.widget.BaseAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getViewTypeCount EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$hasStableIds EXP <type>android.widget.BaseAdapter # begin MethodDeclaration
android.widget.BaseAdapter$hasStableIds EXP <type>android.widget.BaseAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEmpty EXP <type>android.widget.BaseAdapter # begin MethodDeclaration
android.widget.BaseAdapter$isEmpty EXP <type>android.widget.BaseAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEnabled EXP <type>android.widget.BaseAdapter EXP # begin MethodDeclaration
android.widget.BaseAdapter$isEnabled EXP <type>android.widget.BaseAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getBottom EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "baseProgressButtonEnabled" <type>boolean # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "progressButtonEnabled" <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "nextEnabled" EXP # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "nextPagingEnabled" EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "lockPage" EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "currentItem" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.baseProgressButtonEnabled <type>android.os.Bundle "baseProgressButtonEnabled" # begin MethodDeclaration
android.os.Bundle$getBoolean this.progressButtonEnabled <type>android.os.Bundle "progressButtonEnabled" # MethodDeclaration
android.os.Bundle$getInt this.savedCurrentItem <type>android.os.Bundle "currentItem" # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle "nextEnabled" # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle "nextPagingEnabled" # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle "lockPage" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin Block
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Invalid Slide Number" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unexpected request code" # begin end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$cancelSync @0 this <type>android.accounts.Account com.google.samples.apps.iosched.provider.ScheduleContract.CONTENT_AUTHORITY # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # Block
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end Block
<END>
<S2>
<S1>
android.content.Context$deleteDatabase @0 <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getShort EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap.createBitmap <type>android.graphics.Bitmap this EXP EXP EXP # end MethodDeclaration
android.graphics.ColorMatrix$setSaturation @0 <type>android.graphics.ColorMatrix 0 # begin MethodDeclaration
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorMatrixColorFilter # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint null # MethodDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 EXP EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.icon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_icon # begin ConstructorDeclaration
android.view.View$findViewById this.name <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_name # ConstructorDeclaration
android.view.View$findViewById this.description <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_description # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # begin MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception editing comment on issue" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.app.Activity R.id.scrollable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.test.TouchUtils$touchAndCancelView @0 this this <type>com.github.ksoichiro.android.observablescrollview.ObservableListView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem EXP <type>android.view.Menu R.id.menu_main_donate # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin SwitchCase
android.content.Intent$setData @0 <type>android.content.Intent EXP # end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.app.PendingIntent <type>android.os.Bundle "BUY_INTENT" # begin end TryBlock
<END>
<S2>
<S1>
android.app.PendingIntent$getIntentSender EXP <type>android.app.PendingIntent # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "RESPONSE_CODE" # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>Iterable <type>android.os.Bundle "INAPP_PURCHASE_DATA_LIST" # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent "INAPP_PURCHASE_DATA" # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 0 # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ID # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_CATEGORY # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ORDER_IN_CATEGORY # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ABSTRACT # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_COLOR # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 0 # MethodDeclaration
android.database.Cursor$moveToPosition EXP <type>android.database.Cursor 1 # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ID # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_NAME # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_CATEGORY # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ORDER_IN_CATEGORY # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ABSTRACT # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_COLOR # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_native_fragment_dragdrop <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString <type>String <type>android.app.Activity <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$size EXP <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$size EXP <type>android.util.SparseArray # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Failed to parse exif segment length, or exif segment not found" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Missing jpeg exif preamble" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Found MARKER_EOI in exif segment" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Negative tiff component count" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getRight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getScrollX EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # MethodDeclaration
android.view.ViewGroup$getScrollY EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.PointF$set @0 <type>android.graphics.PointF <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext <type>android.content.Context <type>android.view.View # begin end MethodDeclaration
android.view.View$getParent <type>android.view.ViewParent <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getBaseContext <type>android.content.Context <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$getAlpha EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#00123456" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#FF123456" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#FF123456" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#FF123456" # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#000000" # begin MethodDeclaration
android.graphics.Color$parseColor EXP this "#000000" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#FFFFFF" # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$create <type>android.media.MediaPlayer this <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this <type>byte this.r this.g this.b # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentByTag <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$setRetainInstance @0 <type>android.support.v4.app.Fragment true # begin Block
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$onConfigurationChanged @0 <type>android.support.v4.app.Fragment <type>android.content.res.Configuration # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # MethodDeclaration
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.GONE # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionManager$beginDelayedTransition @0 this <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # MethodDeclaration
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.VISIBLE # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this EXP EXP <type>retrofit.RetrofitError # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this DribbbleLogin.this # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.name # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.avatar # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View io.plaidapp.R.id.scrim # MethodDeclaration
android.support.v4.content.ContextCompat$getColor EXP this DribbbleLogin.this io.plaidapp.R.color.scrim # MethodDeclaration
android.widget.Toast$setView @0 <type>android.widget.Toast <type>android.view.View # MethodDeclaration
android.widget.Toast$setGravity @0 <type>android.widget.Toast EXP 0 0 # MethodDeclaration
android.widget.Toast$setDuration @0 <type>android.widget.Toast android.widget.Toast.LENGTH_LONG # MethodDeclaration
android.widget.Toast$show @0 <type>android.widget.Toast # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.ViewGroup$getHeight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$measure @0 <type>android.view.ViewGroup <type>int <type>int # MethodDeclaration
android.view.ViewGroup$getLeft EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getTop EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getRight EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$getBottom EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.ViewGroup$layout @0 <type>android.view.ViewGroup EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.view.View$setBackground @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$getBackground <type>android.graphics.drawable.BitmapDrawable <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # Block
android.view.ViewGroup$getOverlay EXP <type>android.view.ViewGroup # Block
android.view.ViewGroup$getOverlay EXP <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofInt EXP this <type>android.graphics.drawable.BitmapDrawable "alpha" 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setAlpha @0 <type>android.graphics.drawable.BitmapDrawable 0 # begin Block
android.animation.ObjectAnimator$ofInt EXP this <type>android.graphics.drawable.BitmapDrawable "alpha" 255 # Block
android.animation.ObjectAnimator$setStartDelay @0 <type>android.animation.ObjectAnimator 150 # Block
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable EXP <type>android.os.Bundle FIELD # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_NAME # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.live_now # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TITLE # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_ABSTRACT # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_ID # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_PHOTO_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_MAIN_TAG # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_START # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_END # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_LIVESTREAM_ID # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_YOUTUBE_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TAGS # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_IN_MY_SCHEDULE # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText <type>CharSequence <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$addTextChangedListener @0 <type>android.widget.TextView this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$removeTextChangedListener @0 <type>android.widget.TextView this # begin end Block
<END>
<S2>
<S1>
android.text.Editable$toString EXP <type>android.text.Editable # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$getVersion <type>int <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setVersion @0 <type>android.database.sqlite.SQLiteDatabase <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$openOrCreateDatabase <type>android.database.sqlite.SQLiteDatabase this <type>java.io.File null # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getInt <type>int <type>android.database.Cursor 0 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 0 # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery EXP <type>android.database.sqlite.SQLiteDatabase EXP EXP # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$rawQuery EXP <type>android.database.sqlite.SQLiteDatabase <type>String null # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver3" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putAll @0 <type>android.os.Bundle <type>android.os.Bundle # begin end IfTrue
<END>
<S2>
<S1>
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # begin MethodDeclaration
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_POSITIVE EXP this # MethodDeclaration
android.app.AlertDialog$setButton @0 <type>android.app.AlertDialog android.content.DialogInterface.BUTTON_NEGATIVE EXP this # MethodDeclaration
android.app.AlertDialog$setCancelable @0 <type>android.app.AlertDialog true # MethodDeclaration
android.app.AlertDialog$setOnCancelListener @0 <type>android.app.AlertDialog this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.morristaedt.mirror.R.string.owners # begin MethodDeclaration
android.content.res.Resources$getString EXP <type>android.content.res.Resources <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 90 EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 180 EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 270 EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$invert @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$isLoggable <type>boolean this <type>String android.util.Log.VERBOSE # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.Log$isLoggable <type>boolean this <type>String android.util.Log.VERBOSE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String EXP <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$addFlags @0 <type>android.view.Window android.view.WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getDownTime EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getMetaState EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$obtain <type>android.view.MotionEvent this EXP EXP EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextSize @0 <type>android.widget.TextView 30 # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 255 187 115 # begin ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Path$close @0 <type>android.graphics.Path # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$lineTo @0 <type>android.graphics.Path FIELD FIELD # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mRenderPaint # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # end MethodDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas FIELD FIELD FIELD FIELD <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas FIELD FIELD FIELD FIELD <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceChangeListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.Preference$getOnPreferenceClickListener EXP <type>android.preference.Preference # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationX @0 <type>android.view.View EXP # begin Block
android.view.View$setAlpha @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # MethodDeclaration
android.animation.ValueAnimator$ofInt EXP this <type>int 1 # end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1f # begin MethodDeclaration
android.view.View$setTranslationX @0 <type>android.view.View 0 # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue FIELD <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Message$getData EXP <type>android.os.Message # begin SwitchCase
android.util.Log$i @0 this <type>String EXP # end SwitchCase
<END>
<S2>
<S1>
android.os.Messenger$getBinder EXP <type>android.os.Messenger # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setText @0 <type>android.view.View "Example of displaying an alert dialog with a DialogFragment" # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.DialogFragment$show @0 <type>android.support.v4.app.DialogFragment EXP "dialog" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentAlertDialog" "Positive click!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "FragmentAlertDialog" "Negative click!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "title" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getContext <type>android.content.Context <type>android.widget.TextView # begin end MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # begin MethodDeclaration
android.widget.TextView$setMinWidth @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_recyclerview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "com.parse.push" "successfully subscribed to the broadcast channel." # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "com.parse.push" "failed to subscribe for push" <type>com.parse.ParseException # begin end Block
<END>
<S2>
<S1>
android.view.View$resolveSize <type>int this <type>int FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$resolveSize <type>int this <type>int FIELD # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor <type>String # begin TryBlock
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor <type>String # TryBlock
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor <type>String # TryBlock
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # TryBlock
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor <type>String # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor <type>int # begin Block
android.database.Cursor$getLong <type>long <type>android.database.Cursor <type>int # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor <type>int # Block
android.database.Cursor$getLong <type>long <type>android.database.Cursor <type>int # Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor <type>int # Block
android.net.Uri$withAppendedPath EXP this <type>android.net.Uri EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.content.ContentResolver$registerContentObserver @0 <type>android.content.ContentResolver android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI false <type>ForceLoadContentObserver # begin Block
android.content.ContentResolver$registerContentObserver @0 <type>android.content.ContentResolver android.provider.MediaStore.Video.Media.EXTERNAL_CONTENT_URI false <type>ForceLoadContentObserver # end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this customFileName # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.Application$getSystemService EXP <type>android.app.Application <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColor EXP <type>android.content.res.Resources <type>int <type>android.content.res.Resources.Theme # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColor EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getColorStateList EXP <type>android.content.res.Resources <type>int <type>android.content.res.Resources.Theme # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColorStateList EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int <type>android.content.res.Resources.Theme # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources.Theme$resolveAttribute <type>boolean <type>android.content.res.Resources.Theme <type>int <type>android.util.TypedValue true # begin end MethodDeclaration
android.graphics.drawable.Drawable$mutate EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this EXP # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getOverScrollMode this.overScrollMode this <type>android.support.v7.widget.RecyclerView # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$getOverScrollMode this.overScrollMode this <type>android.support.v7.widget.RecyclerView # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setOverScrollMode @0 this <type>android.support.v7.widget.RecyclerView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Recycler$clear @0 <type>android.support.v7.widget.RecyclerView.Recycler # begin MethodDeclaration
android.support.v7.widget.RecyclerView.State$getItemCount <type>int <type>android.support.v7.widget.RecyclerView.State # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setOverScrollMode @0 this <type>android.support.v7.widget.RecyclerView EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "LinearLayoutManager" EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.support.v7.widget.RecyclerView.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.support.v7.widget.RecyclerView.Recycler$recycleView @0 <type>android.support.v7.widget.RecyclerView.Recycler <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView.Recycler$getViewForPosition <type>android.view.View <type>android.support.v7.widget.RecyclerView.Recycler <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$w @0 this "LinearLayoutManager" "Can't make LayoutParams insets dirty, decorations measurements might be incorrect" # begin end Block
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail EXP this EXP android.provider.MediaStore.Images.Thumbnails.MINI_KIND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail EXP this EXP android.provider.MediaStore.Images.Thumbnails.MICRO_KIND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail EXP this EXP android.provider.MediaStore.Images.Thumbnails.MICRO_KIND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ThumbnailUtils$createVideoThumbnail EXP this EXP android.provider.MediaStore.Images.Thumbnails.MICRO_KIND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivityTransition3Binding this this R.layout.activity_transition3 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.TransitionInflater$from EXP this this # begin end Block
<END>
<S2>
<S1>
android.transition.Slide$setDuration @0 <type>android.transition.Slide EXP # begin MethodDeclaration
android.transition.Slide$setSlideEdge @0 <type>android.transition.Slide android.view.Gravity.RIGHT # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentActivity$getSupportFragmentManager <type>android.support.v4.app.FragmentManager <type>android.support.v4.app.FragmentActivity # begin MethodDeclaration
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager <type>String # end MethodDeclaration
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$remove @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog EXP # begin MethodDeclaration
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # MethodDeclaration
android.app.AlertDialog$setCancelable @0 <type>android.app.AlertDialog true # MethodDeclaration
android.app.AlertDialog$setOnCancelListener @0 <type>android.app.AlertDialog this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.DialogInterface$dismiss @0 <type>android.content.DialogInterface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$openFd EXP <type>android.content.res.AssetManager EXP # begin MethodDeclaration
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_layout_resourceID this.card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$drawableHotspotChanged @0 <type>android.view.View <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "No card model found. Please use setCard(card) to set all values." # begin end Block
<END>
<S2>
<S1>
android.view.View$removeView @0 <type>android.view.View <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnLongClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnLongClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View <type>TitleViewOnClickListener # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Does the card have the ViewToClickToExpand?" # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$removeView @0 <type>android.view.View <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View false # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getViewTreeObserver EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>PageAdapter # begin MethodDeclaration
android.support.v4.view.ViewPager$setOffscreenPageLimit @0 <type>android.support.v4.view.ViewPager 1 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getViewTreeObserver EXP <type>android.support.v4.view.ViewPager # begin MethodDeclaration
android.support.v4.view.ViewPager$getMeasuredWidth EXP <type>android.support.v4.view.ViewPager # MethodDeclaration
android.support.v4.view.ViewPager$setTranslationX @0 <type>android.support.v4.view.ViewPager EXP # MethodDeclaration
android.support.v4.view.ViewPager$animate EXP <type>android.support.v4.view.ViewPager # MethodDeclaration
android.support.v4.view.ViewPager$getMeasuredWidth EXP <type>android.support.v4.view.ViewPager # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$navigateUpFromSameTask @0 this EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # begin MethodDeclaration
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>android.graphics.drawable.GradientDrawable # MethodDeclaration
android.widget.LinearLayout.LayoutParams$setMargins @0 <type>android.widget.LinearLayout.LayoutParams <type>int <type>int <type>int <type>int # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.drawable.ic_up # begin MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationContentDescription @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.string.close_and_go_back # end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.NavUtils$navigateUpTo @0 this SessionFeedbackActivity.this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$replace @0 <type>android.support.v4.app.FragmentTransaction R.id.menu_frame <type>android.support.v4.app.ListFragment # begin Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "requested target size matches input, returning input" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "adjusted target size matches input, returning input" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.util.Log$v @0 this <type>String EXP # Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.util.Log$v @0 this <type>String EXP # Block
android.util.Log$v @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "requested target size larger or equal to input, returning input" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "requested target size too big for input, fit centering instead" # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap <type>boolean # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix <type>int # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap 0 0 EXP EXP <type>android.graphics.Matrix true # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Matrix$mapRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$width EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.RectF$height EXP <type>android.graphics.RectF # MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float <type>android.graphics.Paint # begin TryBlock
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Rect <type>android.graphics.Rect <type>android.graphics.Paint # end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin MethodDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.TRANSPARENT android.graphics.PorterDuff.Mode.CLEAR # begin TryBlock
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>int <type>int <type>android.graphics.Paint # end TryBlock
<END>
<S2>
<S1>
android.graphics.Canvas$setBitmap @0 <type>android.graphics.Canvas null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Matrix <type>android.graphics.Paint # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix EXP 1 # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 180 # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 180 # begin SwitchCase
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix EXP 1 # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 90 # begin SwitchCase
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix EXP 1 # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix 90 # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix EXP # begin SwitchCase
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix EXP 1 # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler FrameLoaderCallback.MSG_CLEAR <type>DelayTarget # begin end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler FrameLoaderCallback.MSG_CLEAR <type>DelayTarget # begin end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler FrameLoaderCallback.MSG_DELAY this # begin MethodDeclaration
android.os.Handler$sendMessageAtTime @0 <type>android.os.Handler <type>android.os.Message <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$setTitle @0 <type>android.app.ProgressDialog "Loading..." # begin MethodDeclaration
android.app.ProgressDialog$setIndeterminate @0 <type>android.app.ProgressDialog false # MethodDeclaration
android.app.ProgressDialog$setProgressStyle @0 <type>android.app.ProgressDialog android.app.ProgressDialog.STYLE_HORIZONTAL # MethodDeclaration
android.app.ProgressDialog$show @0 <type>android.app.ProgressDialog # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ProgressDialog$cancel @0 <type>android.app.ProgressDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$obtain <type>android.os.Parcel this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>E 0 # begin TryBlock
android.os.Parcel$marshall <type>byte <type>android.os.Parcel # TryBlock
android.os.Parcel$unmarshall @0 <type>android.os.Parcel <type>byte 0 FIELD # TryBlock
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # TryBlock
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$recycle @0 <type>android.os.Parcel # begin Finally
android.os.Parcel$recycle @0 <type>android.os.Parcel # end Finally
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin TryBlock
android.content.res.AssetManager$open <type>java.io.InputStream <type>android.content.res.AssetManager <type>String # end TryBlock
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getHost <type>String <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_comment_icon # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_list_base_different_inner <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar EXP # begin MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationContentDescription @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.string.close_and_go_back # end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt EXP <type>android.os.Bundle SessionFeedbackModel.DATA_RATING_INT # begin MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle SessionFeedbackModel.DATA_SESSION_RELEVANT_ANSWER_INT # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle SessionFeedbackModel.DATA_CONTENT_ANSWER_INT # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle SessionFeedbackModel.DATA_SPEAKER_ANSWER_INT # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle SessionFeedbackModel.DATA_COMMENT_STRING # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_TITLE # begin MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray EXP this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getLoadedFrom <type>Picasso.LoadedFrom <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getExifOrientation <type>int <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getBitmap <type>android.graphics.Bitmap <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getStream <type>java.io.InputStream <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # end MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap <type>int <type>int <type>int <type>int <type>android.graphics.Matrix true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix <type>float FIELD FIELD # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setRotate @0 <type>android.graphics.Matrix <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preRotate @0 <type>android.graphics.Matrix <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>int 1 # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$preScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onDownMotionEvent" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.button # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP <type>String android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$v @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_DEFAULT_AUDIENCE EXP # begin end MethodDeclaration
android.support.v4.app.FragmentActivity$getSupportFragmentManager EXP <type>android.support.v4.app.FragmentActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "," EXP # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_SCOPE <type>String # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_ACCESS_TOKEN <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_E2E # begin end Block
<END>
<S2>
<S1>
android.webkit.CookieSyncManager$createInstance <type>android.webkit.CookieSyncManager this EXP # begin TryBlock
android.webkit.CookieSyncManager$sync @0 <type>android.webkit.CookieSyncManager # end TryBlock
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences <type>android.content.SharedPreferences <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin MethodDeclaration
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String "" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_REDIRECT_URI <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_CLIENT_ID EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_E2E <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_RESPONSE_TYPE com.facebook.internal.ServerProtocol.DIALOG_RESPONSE_TYPE_TOKEN_AND_SIGNED_REQUEST # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_RETURN_SCOPES com.facebook.internal.ServerProtocol.DIALOG_RETURN_SCOPES_TRUE # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.ServerProtocol.DIALOG_PARAM_AUTH_TYPE com.facebook.internal.ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor EXP this EXP null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray EXP this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFileDescriptor @0 this EXP null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this <type>byte 0 FIELD <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.WHITE # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 <type>android.graphics.Paint # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtras @0 <type>android.content.Intent EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$putExtras @0 <type>android.content.Intent EXP # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase APODContract.TABLE_NAME <type>String <type>String <type>String null null <type>String null # begin MethodDeclaration
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP APODContract.CONTENT_URI # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>long <type>android.database.sqlite.SQLiteDatabase APODContract.TABLE_NAME null <type>android.content.ContentValues # begin MethodDeclaration
android.net.Uri$buildUpon EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase APODContract.TABLE_NAME <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$update <type>int <type>android.database.sqlite.SQLiteDatabase APODContract.TABLE_NAME <type>android.content.ContentValues <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.view.LayoutInflater$from EXP this this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>EffectAdapter # begin end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>com.daimajia.androidanimations.library.Techniques <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "canceled" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin MethodDeclaration
android.net.Uri$getAuthority EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap null EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Gravity$apply @0 this GifState.GRAVITY EXP EXP EXP EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Animatable$start @0 <type>android.graphics.drawable.Animatable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Animatable$start @0 <type>android.graphics.drawable.Animatable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Animatable$stop @0 <type>android.graphics.drawable.Animatable # begin end Block
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println EXP this <type>int EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ClipData$newUri <type>android.content.ClipData this EXP "Iconicus" EXP # begin MethodDeclaration
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # MethodDeclaration
android.widget.Toast$makeText EXP this MainActivity.this R.string.link_copied android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.card_main_inner_simple_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Wish Happy Birthday" # MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER_VERTICAL # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getLayoutParams EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.text_extras_birth1 # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.text_extras_birth2 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this org.robolectric.RuntimeEnvironment.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ProfileManager.EXTRA_OLD_PROFILE <type>Profile # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent ProfileManager.EXTRA_NEW_PROFILE <type>Profile # MethodDeclaration
android.support.v4.content.LocalBroadcastManager$sendBroadcast @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_listContainer # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_progressContainer # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin MethodDeclaration
android.net.Uri$getQueryParameters <type>java.util.List <type>android.net.Uri <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$myLooper EXP this # begin MethodDeclaration
android.os.Handler$getLooper EXP <type>android.os.Handler # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDecoratedBaseAdapter <type>android.widget.BaseAdapter <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_CANCEL # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_CANCEL # end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String <type>boolean # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>SingleRequest <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.res.ResourcesCompat$getDrawable EXP this <type>android.content.res.Resources <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP <type>com.bumptech.glide.load.engine.GlideException # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_picasso <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$newInstance <type>android.net.http.AndroidHttpClient this "" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$execute EXP <type>android.net.http.AndroidHttpClient <type>org.apache.http.client.methods.HttpGet <type>org.apache.http.client.ResponseHandler # begin end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$close @0 <type>android.net.http.AndroidHttpClient # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setColor @0 <type>android.text.TextPaint EXP # begin MethodDeclaration
android.text.TextPaint$setUnderlineText @0 <type>android.text.TextPaint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray com.github.chaossss.widget.R.styleable.RecBadgedView_recbadgeGravity EXP # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.Gravity$apply @0 this <type>int EXP EXP EXP badgePadding badgePadding <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this this # begin MethodDeclaration
android.content.SharedPreferences$getBoolean <type>boolean <type>android.content.SharedPreferences <type>String false # end MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v7.app.ActionBarDrawerToggle # begin MethodDeclaration
android.support.design.widget.NavigationView$setNavigationItemSelectedListener @0 <type>android.support.design.widget.NavigationView this # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences <type>android.content.SharedPreferences this MainActivity.this # begin Block
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # Block
android.util.Log$d @0 this <type>String "User learned drawer" # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this this # begin Block
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager EXP # end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onConfigurationChanged @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.content.res.Configuration # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v7.app.ActionBarDrawerToggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_search # begin MethodDeclaration
android.support.v4.view.MenuItemCompat$getActionView <type>android.support.v7.widget.SearchView this <type>android.view.MenuItem # MethodDeclaration
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # MethodDeclaration
android.support.v7.widget.SearchView$setSearchableInfo @0 <type>android.support.v7.widget.SearchView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$getDecorView <type>android.view.View <type>android.view.Window # begin end MethodDeclaration
android.view.View$post @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$openDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # begin end IfTrue
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$findViewById <type>android.widget.ImageView <type>android.support.design.widget.NavigationView com.github.pockethub.R.id.user_picture # begin MethodDeclaration
android.support.design.widget.NavigationView$findViewById <type>android.widget.TextView <type>android.support.design.widget.NavigationView com.github.pockethub.R.id.user_real_name # MethodDeclaration
android.support.design.widget.NavigationView$findViewById <type>android.widget.TextView <type>android.support.design.widget.NavigationView com.github.pockethub.R.id.user_name # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$getMenu EXP <type>android.support.design.widget.NavigationView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getSubMenu <type>android.view.SubMenu <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.SubMenu$add <type>android.view.MenuItem <type>android.view.SubMenu android.view.Menu.NONE FIELD android.view.Menu.NONE EXP # begin Block
android.view.MenuItem$setIcon @0 <type>android.view.MenuItem com.github.pockethub.R.drawable.ic_github_organization_black_24dp # end Block
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager EXP # begin end Block
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$getMenu EXP <type>android.support.design.widget.NavigationView # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction EXP <type>android.support.v4.app.FragmentManager # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawer @0 <type>android.support.v4.widget.DrawerLayout android.support.v4.view.GravityCompat.START # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle "org" <type>com.alorma.github.sdk.bean.dto.response.Organization # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_materail_style null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.material_style_image_view # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.material_style_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable 200 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>java.io.File this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>java.io.File this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getResources <type>android.content.res.Resources <type>android.content.Context # begin MethodDeclaration
android.content.res.Resources$getDimension EXP <type>android.content.res.Resources <type>int # MethodDeclaration
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Chart cleared!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 244 117 117 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Entry selected" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Nothing selected" "Nothing selected." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$getConstantState EXP <type>android.graphics.drawable.GradientDrawable # begin end MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP <type>android.graphics.drawable.GradientDrawable # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable android.util.StateSet.WILD_CARD <type>android.graphics.drawable.GradientDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable EXP # begin Block
android.graphics.drawable.GradientDrawable$setCornerRadius @0 <type>android.graphics.drawable.GradientDrawable EXP # end Block
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet <type>int # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray 0 EXP # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.support.v7.widget.GridLayoutManager$getSpanCount <type>int <type>android.support.v7.widget.GridLayoutManager # begin Block
android.support.v7.widget.GridLayoutManager$setSpanCount @0 <type>android.support.v7.widget.GridLayoutManager <type>int # end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getHeight <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.util.SparseIntArray$get <type>int <type>android.util.SparseIntArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getClassLoader EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>android.os.Parcelable <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.util.SparseIntArray$size EXP <type>android.util.SparseIntArray # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$keyAt EXP <type>android.util.SparseIntArray <type>int # begin Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # Block
android.util.SparseIntArray$valueAt EXP <type>android.util.SparseIntArray <type>int # Block
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 2000 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 400 40 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 65 3000 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 400 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 600 600 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1230 1640 android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_4444 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_4444 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_4444 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 300 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 50 50 android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap false # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$hasAlpha EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 2 2 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 200 android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 200 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Click action item and then this button twice on pre-ICS" # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin MethodDeclaration
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this this R.anim.issue331_refresh # MethodDeclaration
android.view.animation.Animation$setRepeatCount @0 <type>android.view.animation.Animation android.view.animation.Animation.INFINITE # MethodDeclaration
android.widget.ImageView$startAnimation @0 <type>android.widget.ImageView <type>android.view.animation.Animation # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin Block
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.actionbarsherlock.R.string.abs__activity_chooser_view_see_all # begin end Block
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin Block
android.content.pm.ResolveInfo$loadIcon EXP <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # end Block
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager R.id.rps_fragment # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager R.id.settings_fragment # MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentById EXP <type>android.support.v4.app.FragmentManager R.id.content_fragment # MethodDeclaration
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide @0 <type>android.support.v4.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Canceled" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Success!" # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # MethodDeclaration
android.util.Log$d @0 this <type>String FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$add <type>android.view.MenuItem <type>android.view.Menu R.string.share_on_facebook # begin Block
android.view.Menu$add <type>android.view.MenuItem <type>android.view.Menu R.string.send_with_messenger # Block
android.view.Menu$add <type>android.view.MenuItem <type>android.view.Menu R.string.challenge_friends # Block
android.view.Menu$add <type>android.view.MenuItem <type>android.view.Menu R.string.check_settings # Block
android.view.Menu$add <type>android.view.MenuItem <type>android.view.Menu R.string.invite_friends # end Block
<END>
<S2>
<S1>
android.view.Menu$clear @0 <type>android.view.Menu # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri "gesture" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$getBackStackEntryCount <type>int <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$popBackStack @0 <type>android.support.v4.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$show @0 <type>android.support.v4.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide @0 <type>android.support.v4.app.FragmentTransaction EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin end MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # begin MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver1" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Calling abortBroadcast()" # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_grid_gplay <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay <type>android.view.Display <type>android.view.WindowManager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Display$getSize @0 <type>android.view.Display <type>android.graphics.Point # begin end Block
<END>
<S2>
<S1>
android.view.Display$getWidth EXP <type>android.view.Display # begin end IfFalse
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.view.WindowManager <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin MethodDeclaration
android.view.WindowManager$getDefaultDisplay <type>android.view.Display <type>android.view.WindowManager # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Display$getSize @0 <type>android.view.Display <type>android.graphics.Point # begin end Block
<END>
<S2>
<S1>
android.view.Display$getHeight EXP <type>android.view.Display # begin end IfFalse
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin IfTrue
android.util.TypedValue$complexToDimensionPixelSize <type>int this FIELD EXP # end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getResources <type>android.content.res.Resources <type>android.app.Activity # begin MethodDeclaration
android.content.res.Resources$getIdentifier <type>int <type>android.content.res.Resources "navigation_bar_height" "dimen" "android" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDimensionPixelSize EXP <type>android.content.res.Resources <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Bitmap$createScaledBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap EXP EXP true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.extra.dragdroplist.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card=" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Google Maps" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Google Inc." # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar 4.7f # end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin MethodDeclaration
android.util.Log$d @0 this <type>String "Destroying old data during upgrade" # MethodDeclaration
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById FIELD <type>android.view.ViewGroup <type>int # begin Block
android.view.ViewGroup$findViewById FIELD <type>android.view.ViewGroup <type>int # Block
android.view.ViewGroup$setTag @0 <type>android.view.ViewGroup <type>ViewHolder # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getTag <type>ViewHolder <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$setOnClickListener @0 <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getVisibility EXP <type>android.view.View # begin end MethodDeclaration
android.view.View$getTag <type>Long <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$setId @0 <type>android.view.ViewGroup <type>int # begin MethodDeclaration
android.view.ViewGroup$setId @0 <type>android.view.ViewGroup <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this FIELD # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.app_name # MethodDeclaration
android.text.TextUtils$isEmpty EXP this FIELD # MethodDeclaration
android.app.PendingIntent$getActivity EXP this <type>android.content.Context 0 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # MethodDeclaration
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.NOTIFICATION_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.myschedule.MyScheduleActivity.EXTRA_DIALOG_TITLE EXP # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.myschedule.MyScheduleActivity.EXTRA_DIALOG_MESSAGE EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.myschedule.MyScheduleActivity.EXTRA_DIALOG_YES EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.myschedule.MyScheduleActivity.EXTRA_DIALOG_NO EXP # Block
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.myschedule.MyScheduleActivity.EXTRA_DIALOG_URL EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$isMutable EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getByteCount EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.content_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.content_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.content_image # MethodDeclaration
android.view.View$findViewById <type>android.widget.Button <type>android.view.View R.id.content_play_button # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$setFillBefore @0 <type>android.view.animation.AlphaAnimation true # begin MethodDeclaration
android.view.animation.AlphaAnimation$setDuration @0 <type>android.view.animation.AlphaAnimation 500 # MethodDeclaration
android.view.animation.AlphaAnimation$setStartOffset @0 <type>android.view.animation.AlphaAnimation EXP # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.AlphaAnimation # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Hello, views!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this "Let go of me!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "Butter Knife" # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Field and method binding for Android views." # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "by Jake Wharton" # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button "Say Hello" # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>SimpleAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>TimeoutRunnable <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Color$red <type>int this <type>int # begin MethodDeclaration
android.graphics.Color$green <type>int this <type>int # MethodDeclaration
android.graphics.Color$blue <type>int this <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth <type>int <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight <type>int <type>android.graphics.Bitmap # end MethodDeclaration
android.graphics.Bitmap$getPixels @0 <type>android.graphics.Bitmap <type>int 0 <type>int 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.xxmassdeveloper.mpchartexample.R.layout.frag_simple_bar <type>android.view.ViewGroup false # begin MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Light.ttf" # MethodDeclaration
android.view.View$findViewById <type>android.widget.FrameLayout <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.parentLayout # MethodDeclaration
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>com.github.mikephil.charting.charts.BarChart # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Gesture" "START" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Gesture" "END" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "LongPress" "Chart longpressed." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "DoubleTap" "Chart double-tapped." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "SingleTap" "Chart single-tapped." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Fling" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Scale / Zoom" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "Translate / Move" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$toString EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # Block
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin TryBlock
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar <type>int # TryBlock
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end TryBlock
<END>
<S2>
<S1>
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # Block
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setEnabled @0 <type>android.view.View false # begin Block
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton false # Block
android.view.View$setEnabled @0 <type>android.view.View false # end Block
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler this 200 # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "output_uri" <type>String # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "allow_retry" <type>boolean # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "primary_color" <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.afollestad.materialcamera.R.layout.mcam_fragment_videoplayback <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.afollestad.materialcamera.R.id.position # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.SeekBar <type>android.view.View com.afollestad.materialcamera.R.id.positionSeek # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.afollestad.materialcamera.R.id.duration # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageButton <type>android.view.View com.afollestad.materialcamera.R.id.playPause # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.afollestad.materialcamera.R.id.retry # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.afollestad.materialcamera.R.id.useVideo # MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.afollestad.materialcamera.R.id.controlsFrame # MethodDeclaration
android.view.View$findViewById <type>VideoStreamView <type>android.view.View com.afollestad.materialcamera.R.id.playbackView # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View com.afollestad.materialcamera.R.id.playbackContinueCountdownLabel # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.afollestad.materialcamera.R.id.playbackFrame # MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View this # MethodDeclaration
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton this # MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View this # MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb <type>int this EXP EXP EXP EXP # MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin end MethodDeclaration
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton com.afollestad.materialcamera.R.drawable.mcam_action_pause # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton com.afollestad.materialcamera.R.drawable.mcam_action_play # begin end IfFalse
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end IfFalse
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin Block
android.view.View$getAlpha EXP <type>android.view.View # Block
android.view.View$getAlpha EXP <type>android.view.View # Block
android.view.View$getAlpha EXP <type>android.view.View # Block
android.view.View$animate EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setImageResource @0 <type>android.view.View com.afollestad.materialcamera.R.drawable.mcam_action_play # begin end Block
<END>
<S2>
<S1>
android.view.View$setImageResource @0 <type>android.view.View com.afollestad.materialcamera.R.drawable.mcam_action_pause # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$getDuration EXP <type>android.media.MediaPlayer # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar EXP # MethodDeclaration
android.media.MediaPlayer$getDuration EXP <type>android.media.MediaPlayer # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.ImageButton$setEnabled @0 <type>android.widget.ImageButton true # MethodDeclaration
android.view.View$setEnabled @0 <type>android.view.View true # MethodDeclaration
android.view.View$setEnabled @0 <type>android.view.View true # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageButton$setImageResource @0 <type>android.widget.ImageButton com.afollestad.materialcamera.R.drawable.mcam_action_play # begin end IfTrue
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.SeekBar$setSecondaryProgress @0 <type>android.widget.SeekBar <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Enabling StrictMode policy over Sample application" # begin Block
android.os.StrictMode$setThreadPolicy @0 this EXP # Block
android.os.StrictMode$setVmPolicy @0 this EXP # end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # begin end MethodDeclaration
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.3f 1 # begin Block
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 900 # Block
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # Block
android.animation.ValueAnimator$setStartDelay @0 <type>android.animation.ValueAnimator EXP # end Block
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin Block
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.extra.staggeredgrid.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Swipe action not enabled in this type of view" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Expand action not enabled in this type of view" # begin end Block
<END>
<S2>
<S1>
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton null # begin Block
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton EXP # Block
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton <type>android.widget.CompoundButton.OnCheckedChangeListener # end Block
<END>
<S2>
<S1>
android.content.Intent$getIntExtra EXP <type>android.content.Intent android.os.BatteryManager.EXTRA_LEVEL EXP # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Cancel" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ProgressBarUpload.this "File upload complete" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this ProgressBarUpload.this "Error uploading file" android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button "Upload" # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView null # MethodDeclaration
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Pair$create <type>android.util.Pair this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDecoratedBaseAdapter <type>android.widget.BaseAdapter <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setVisibility @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPrimaryView <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getUndoView <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin end Block
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix EXP # begin Block
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix <type>float <type>float # Block
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix <type>float <type>float # Block
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_PRIVATE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.LoadingBalls_balls <type>int # begin MethodDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.LoadingBalls_ball_size <type>float # MethodDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.LoadingBalls_min_ball_size EXP # MethodDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.LoadingBalls_max_ball_size EXP # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.LoadingBalls_size_cycle_time <type>int # MethodDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.LoadingBalls_movement_cycle_time <type>int # MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.LoadingBalls_enable_size_animation false # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray R.styleable.LoadingBalls_path # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.LoadingBalls_ball_colors 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "This is the Albums tab" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$postDelayed @0 <type>android.view.View <type>Runnable 16 # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayerType @0 <type>android.view.View <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$postOnAnimation @0 <type>android.view.View <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_birthday_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_gridview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this <type>android.content.Context # begin MethodDeclaration
android.support.v4.view.ViewConfigurationCompat$getScaledPagingTouchSlop <type>int this <type>android.view.ViewConfiguration # MethodDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>int <type>android.view.ViewConfiguration # MethodDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.FloatMath$sin EXP this <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Scroller$startScroll @0 <type>android.widget.Scroller <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$layout @0 <type>android.view.View 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingTop EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # MethodDeclaration
android.view.View$setPadding @0 <type>android.view.View <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$getCurrX <type>int <type>android.widget.Scroller # begin Block
android.widget.Scroller$getCurrY <type>int <type>android.widget.Scroller # end Block
<END>
<S2>
<S1>
android.widget.Scroller$abortAnimation @0 <type>android.widget.Scroller # begin Block
android.widget.Scroller$getCurrX <type>int <type>android.widget.Scroller # Block
android.widget.Scroller$getCurrY <type>int <type>android.widget.Scroller # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "Received ACTION_DOWN" # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end SwitchCase
android.support.v4.view.MotionEventCompat$getX EXP this <type>android.view.MotionEvent <type>int # begin SwitchCase
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end SwitchCase
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getAction <type>int <type>android.view.MotionEvent # begin end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # SwitchCase
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>int # begin Block
android.support.v4.view.VelocityTrackerCompat$getXVelocity <type>int this <type>android.view.VelocityTracker <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onSecondaryPointerUp called" # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$clear @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$setDrawingCacheEnabled @0 <type>android.view.View <type>boolean # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.view.FocusFinder$getInstance EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$requestFocus <type>boolean <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$requestFocus <type>boolean <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.SoundEffectConstants$getContantForFocusDirection EXP this <type>int # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$hashCode EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry$getInstrumentation EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of VideoLibraryModel" EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_filter # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.years_radio_group # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.years_radio_group # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_filter # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.topics_radio_group # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.topics_radio_group # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.topics_radio_group # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isClickable EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_filter # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom EXP this android.widget.RadioButton # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasSibling EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_filter # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.hasDescendant EXP this EXP # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.headerbar # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.headerbar # begin MethodDeclaration
android.support.test.espresso.Espresso.onView <type>android.support.test.espresso.ViewInteraction this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.videos_collection_view # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.ViewInteraction$check @0 <type>android.support.test.espresso.ViewInteraction EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # MethodDeclaration
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # end MethodDeclaration
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.RectF$width EXP <type>android.graphics.RectF # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.Path$addCircle @0 <type>android.graphics.Path EXP EXP EXP android.graphics.Path.Direction.CW # end Block
<END>
<S2>
<S1>
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin SwitchCase
android.graphics.Path$setFillType @0 <type>android.graphics.Path android.graphics.Path.FillType.EVEN_ODD # SwitchCase
android.graphics.Canvas$clipPath @0 <type>android.graphics.Canvas <type>android.graphics.Path # SwitchCase
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin SwitchCase
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # SwitchCase
android.graphics.Path$setFillType @0 <type>android.graphics.Path android.graphics.Path.FillType.INVERSE_EVEN_ODD # SwitchCase
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # Block
android.graphics.Rect$height EXP <type>android.graphics.Rect # Block
android.graphics.Rect$width EXP <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas FIELD FIELD EXP FIELD <type>android.graphics.Paint # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas EXP FIELD FIELD FIELD <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas FIELD FIELD FIELD EXP <type>android.graphics.Paint # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas FIELD EXP FIELD FIELD <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # Block
android.graphics.Path$setFillType @0 <type>android.graphics.Path android.graphics.Path.FillType.EVEN_ODD # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension <type>int this FIELD FIELD <type>android.util.DisplayMetrics # begin ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this FIELD FIELD <type>android.util.DisplayMetrics # ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP FIELD <type>android.util.DisplayMetrics # ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this android.util.TypedValue.COMPLEX_UNIT_DIP FIELD <type>android.util.DisplayMetrics # ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this FIELD FIELD <type>android.util.DisplayMetrics # ConstructorDeclaration
android.util.TypedValue$applyDimension <type>int this FIELD FIELD <type>android.util.DisplayMetrics # end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin MethodDeclaration
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder <type>Object 0 EXP android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin MethodDeclaration
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder <type>Object 0 <type>int android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin MethodDeclaration
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder <type>Object 1 EXP android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder EXP 0 1 android.text.Spannable.SPAN_EXCLUSIVE_EXCLUSIVE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$concat EXP this <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$concat <type>CharSequence this <type>CharSequence # begin end MethodDeclaration
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder <type>String # begin MethodDeclaration
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder <type>CharSequence # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end SwitchCase
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder " " # begin end SwitchCase
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "  " # begin end SwitchCase
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder EXP # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder FIELD # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "-" # begin end SwitchCase
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder <type>String # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\uFFFC" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\uFFFC" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n" # begin end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$append @0 <type>android.text.SpannableStringBuilder "\n\n" # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$getLinkTextColors EXP <type>android.widget.TextView # begin SwitchCase
android.widget.TextView$getHighlightColor EXP <type>android.widget.TextView # end SwitchCase
<END>
<S2>
<S1>
android.widget.TextView$getLinkTextColors EXP <type>android.widget.TextView # begin Block
android.widget.TextView$getHighlightColor EXP <type>android.widget.TextView # end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnCount <type>int <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex <type>int <type>android.database.Cursor <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnName <type>String <type>android.database.Cursor <type>int # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnCount <type>int <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnName EXP <type>android.database.Cursor <type>int # begin Block
android.database.Cursor$getString EXP <type>android.database.Cursor <type>int # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.activity_main <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.radio_nav # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this CustomNavigation.this "Navigation selection changed." android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity <type>android.util.AttributeSet com.example.scrumptious.R.styleable.picker_fragment # begin MethodDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_show_pictures <type>boolean # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_extra_fields # end MethodDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_show_title_bar <type>boolean # begin MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_title_text # MethodDeclaration
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_done_button_text # MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_title_bar_background # MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.example.scrumptious.R.styleable.picker_fragment_done_button_background # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.ViewGroup <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>ListView <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_list_view # end MethodDeclaration
android.view.ViewGroup$findViewById <type>ProgressBar <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_activity_circle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String false # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String <type>boolean # begin Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # end Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String <type>boolean # begin Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # end Block
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin end MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," <type>HashSet # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # end Block
<END>
<S2>
<S1>
android.view.animation.AlphaAnimation$setDuration @0 <type>android.view.animation.AlphaAnimation 0 # begin MethodDeclaration
android.view.animation.AlphaAnimation$setFillAfter @0 <type>android.view.animation.AlphaAnimation true # MethodDeclaration
android.view.View$startAnimation @0 <type>android.view.View <type>android.view.animation.AlphaAnimation # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.view.ViewStub <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_title_bar_stub # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewStub$inflate <type>android.view.View <type>android.view.ViewStub # begin end Block
android.view.ViewGroup$findViewById <type>Button <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_done_button # begin end Block
android.view.ViewGroup$findViewById <type>TextView <type>android.view.ViewGroup com.example.scrumptious.R.id.com_facebook_picker_title # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$join <type>String this "," <type>Set # begin Block
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$split <type>String this <type>String "," # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$connect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$disconnect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # begin MethodDeclaration
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.ActivityOptionsCompat$makeSceneTransitionAnimation <type>android.support.v4.app.ActivityOptionsCompat this this <type>android.support.v4.util.Pair # begin MethodDeclaration
android.support.v4.app.ActivityOptionsCompat$toBundle EXP <type>android.support.v4.app.ActivityOptionsCompat # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String <type>android.os.Bundle # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "al_applink_data" <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.applinks.AppLinkData.BUNDLE_APPLINK_ARGS_KEY EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.applinks.AppLinkData.BUNDLE_APPLINK_ARGS_KEY <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.share.internal.ShareConstants.WEB_DIALOG_PARAM_ID <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.Repo <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.STATUS_ERROR_DESCRIPTION <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle <type>String # begin MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_CALL_ID EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_CALL_ID EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.STATUS_ERROR_DESCRIPTION <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle ShareConstants.EXTRA_OBJECT_IS_LIKED # begin MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle ShareConstants.EXTRA_LIKE_COUNT_STRING_WITH_LIKE # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_LIKE_COUNT_STRING_WITH_LIKE # MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle ShareConstants.EXTRA_LIKE_COUNT_STRING_WITHOUT_LIKE # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_LIKE_COUNT_STRING_WITHOUT_LIKE # MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle ShareConstants.EXTRA_SOCIAL_SENTENCE_WITH_LIKE # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_SOCIAL_SENTENCE_WITH_LIKE # MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle ShareConstants.EXTRA_SOCIAL_SENTENCE_WITHOUT_LIKE # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_SOCIAL_SENTENCE_WITHOUT_LIKE # MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle ShareConstants.EXTRA_UNLIKE_TOKEN # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_UNLIKE_TOKEN # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_LIKE_VIEW_OBJECT_ID <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_LIKE_VIEW_OBJECT_TYPE EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_LIKE_VIEW_CURRENT_ACTION <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_LIKE_VIEW_ERROR_JSON EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "og_object.fields(id)" # begin ConstructorDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "ids" <type>String # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "id" # begin ConstructorDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "ids" <type>String # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "object" <type>String # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "id" # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "id,application" # begin ConstructorDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "object" this.objectId # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin end TryBlock
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.QUERY_PARAMETER_TAG_FILTER # begin MethodDeclaration
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.QUERY_PARAMETER_CATEGORIES # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin Block
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri android.app.SearchManager.SUGGEST_PARAMETER_LIMIT # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getCount EXP <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getCount EXP <type>android.database.Cursor # end MethodDeclaration
<END>
<S2>
<S1>
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # begin end Block
<END>
<S2>
<S1>
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$toString EXP <type>android.content.ContentValues # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insertOrThrow @0 <type>android.database.sqlite.SQLiteDatabase FIELD null <type>android.content.ContentValues # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Blocks.BLOCK_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Rooms.ROOM_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.SESSION_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleDatabase.SessionsSpeakers.SPEAKER_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Tags.TAG_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.MY_SCHEDULE_ACCOUNT_NAME EXP # begin Block
android.database.sqlite.SQLiteDatabase$insertOrThrow @0 <type>android.database.sqlite.SQLiteDatabase com.google.samples.apps.iosched.provider.ScheduleDatabase.Tables.MY_SCHEDULE null <type>android.content.ContentValues # Block
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyScheduleColumns.SESSION_ID # end Block
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.MY_VIEWED_VIDEOS_ACCOUNT_NAME EXP # begin Block
android.database.sqlite.SQLiteDatabase$insertOrThrow @0 <type>android.database.sqlite.SQLiteDatabase com.google.samples.apps.iosched.provider.ScheduleDatabase.Tables.MY_VIEWED_VIDEO null <type>android.content.ContentValues # Block
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.VIDEO_ID # end Block
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyFeedbackSubmitted.MY_FEEDBACK_SUBMITTED_ACCOUNT_NAME EXP # begin Block
android.database.sqlite.SQLiteDatabase$insertOrThrow @0 <type>android.database.sqlite.SQLiteDatabase com.google.samples.apps.iosched.provider.ScheduleDatabase.Tables.MY_FEEDBACK_SUBMITTED null <type>android.content.ContentValues # Block
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyFeedbackSubmitted.SESSION_ID # end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Speakers.SPEAKER_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Announcements.ANNOUNCEMENT_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MapMarkers.MARKER_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MapTiles.TILE_FLOOR # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SESSION_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Hashtags.HASHTAG_NAME # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$getAsString EXP <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_ID # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$toString EXP <type>android.content.ContentValues # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$remove @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.MY_SCHEDULE_ACCOUNT_NAME # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$remove @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyViewedVideos.MY_VIEWED_VIDEOS_ACCOUNT_NAME # begin end Block
<END>
<S2>
<S1>
android.content.ContentValues$remove @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MyFeedbackSubmitted.MY_FEEDBACK_SUBMITTED_ACCOUNT_NAME # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin Block
android.content.Context$sendBroadcast @0 <type>android.content.Context EXP # end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
android.os.Looper$getMainLooper EXP this # begin end MethodDeclaration
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin MethodDeclaration
android.widget.Spinner$setSelection @0 <type>android.widget.Spinner <type>int # end MethodDeclaration
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin MethodDeclaration
android.widget.Spinner$setSelection @0 <type>android.widget.Spinner <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem EXP <type>android.view.Menu R.id.allow_animations # begin MethodDeclaration
android.view.Menu$findItem EXP <type>android.view.Menu R.id.use_drawee # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$isChecked EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$isChecked EXP <type>android.view.MenuItem # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView <type>com.facebook.samples.comparison.adapters.ImageListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.support.v7.widget.RecyclerView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndexOrThrow <type>int <type>android.database.Cursor android.provider.MediaStore.Images.Media._ID # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor <type>int # begin Block
android.net.Uri$withAppendedPath <type>android.net.Uri this android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI <type>String # Block
android.net.Uri$toString EXP <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.os.Debug$getNativeHeapSize EXP this # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Display$getHeight EXP <type>android.view.Display # begin end Block
<END>
<S2>
<S1>
android.view.Display$getSize @0 <type>android.view.Display <type>android.graphics.Point # begin end Block
<END>
<S2>
<S1>
android.widget.SimpleExpandableListAdapter$notifyDataSetChanged @0 <type>android.widget.SimpleExpandableListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getId <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getAll EXP <type>android.content.SharedPreferences # begin MethodDeclaration
android.widget.Toast$makeText EXP this MainActivity.this EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle AppEventsConstants.EVENT_PARAM_CURRENCY EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String FIELD # Block
android.support.v4.content.LocalBroadcastManager$getInstance EXP this <type>android.content.Context # end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getCallingActivity <type>android.content.ComponentName <type>android.app.Activity # begin end MethodDeclaration
android.app.Activity$getIntent <type>android.content.Intent <type>android.app.Activity # begin end MethodDeclaration
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle "referer_app_link" # begin end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "package" # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ComponentName$getPackageName <type>String <type>android.content.ComponentName # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putByteArray @0 <type>android.os.Bundle "custom_events_file" EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$openFileOutput EXP <type>android.content.Context <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$openFileInput EXP <type>android.content.Context <type>String # begin TryBlock
android.content.Context$getFileStreamPath EXP <type>android.content.Context <type>String # end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "com.example.android.apis.Path" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent "com.actionbarsherlock.sample.demos.EXAMPLE" # begin MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.ResolveInfo$loadLabel <type>CharSequence <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setClassName @0 <type>android.content.Intent <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent this SampleList # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "com.example.android.apis.Path" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>java.util.Map <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item_header_footer null # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.txt_title # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.txt_title # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "THE HEADER!" # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "THE FOOTER!" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getStringArrayList <type>java.util.ArrayList <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onScroll lastInScreen - so load more" # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$setScaleX @0 <type>android.view.View <type>float # begin Block
android.view.View$setScaleY @0 <type>android.view.View <type>float # Block
android.view.View$setAlpha @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationX @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setTranslationX @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0 # begin end Block
<END>
<S2>
<S1>
android.widget.AbsListView$getWidth <type>float <type>android.widget.AbsListView # begin MethodDeclaration
android.widget.AbsListView$setOnTouchListener @0 <type>android.widget.AbsListView <type>TestSwipeTouchListener # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.AbsListView$getLastVisiblePosition EXP <type>android.widget.AbsListView # begin MethodDeclaration
android.widget.AbsListView$getLastVisiblePosition EXP <type>android.widget.AbsListView # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$openFd EXP <type>android.content.res.AssetManager <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$close @0 <type>android.os.ParcelFileDescriptor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin IfTrue
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end IfTrue
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "Some SQL" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.media.MediaRouter.RouteInfo$getName EXP <type>android.support.v7.media.MediaRouter.RouteInfo # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onDrawerClosed @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.app.ActivityOptions$makeCustomAnimation EXP this ActionBarCastActivity.this com.example.android.uamp.R.anim.fade_in com.example.android.uamp.R.anim.fade_out # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onDrawerStateChanged @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onDrawerSlide @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.view.View <type>float # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onDrawerOpened @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.view.View # begin end IfTrue
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v7.app.ActionBarDrawerToggle # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$onConfigurationChanged @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>android.content.res.Configuration # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$closeDrawers @0 <type>android.support.v4.widget.DrawerLayout # begin end Block
<END>
<S2>
<S1>
android.app.FragmentManager$popBackStack @0 <type>android.app.FragmentManager # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$setTitle @0 <type>android.support.v7.widget.Toolbar <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$inflateMenu @0 <type>android.support.v7.widget.Toolbar com.example.android.uamp.R.menu.main # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v4.widget.DrawerLayout.DrawerListener # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$setNavigationItemSelectedListener @0 <type>android.support.design.widget.NavigationView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setChecked @0 <type>android.view.MenuItem true # begin MethodDeclaration
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # MethodDeclaration
android.support.v4.widget.DrawerLayout$closeDrawers @0 <type>android.support.v4.widget.DrawerLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$setCheckedItem @0 <type>android.support.design.widget.NavigationView com.example.android.uamp.R.id.navigation_allmusic # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.NavigationView$setCheckedItem @0 <type>android.support.design.widget.NavigationView com.example.android.uamp.R.id.navigation_playlists # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$setDrawerIndicatorEnabled @0 <type>android.support.v7.app.ActionBarDrawerToggle <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v7.app.ActionBarDrawerToggle # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$getMenu <type>android.view.Menu <type>android.support.v7.widget.Toolbar # begin MethodDeclaration
android.view.Menu$findItem EXP <type>android.view.Menu com.example.android.uamp.R.id.media_route_menu_item # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
android.content.Intent$getLongExtra <type>long <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_END <type>long # begin end MethodDeclaration
android.content.Intent$getLongExtra <type>long <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_ALARM_OFFSET <type>long # begin end MethodDeclaration
android.content.Intent$getLongExtra <type>long <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_START <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_ID # begin Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_TITLE # end Block
<END>
<S2>
<S1>
android.app.PendingIntent$getService <type>android.app.PendingIntent this this 1 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin MethodDeclaration
android.app.AlarmManager$set @0 <type>android.app.AlarmManager android.app.AlarmManager.RTC_WAKEUP <type>long <type>android.app.PendingIntent # end MethodDeclaration
<END>
<S2>
<S1>
android.app.NotificationManager$cancel @0 <type>android.app.NotificationManager <type>int # begin end MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_START <type>long # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_END <type>long # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_ALARM_OFFSET <type>long # MethodDeclaration
android.app.PendingIntent$getService <type>android.app.PendingIntent this this 0 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # MethodDeclaration
android.app.AlarmManager$set @0 <type>android.app.AlarmManager android.app.AlarmManager.RTC_WAKEUP <type>long <type>android.app.PendingIntent # end MethodDeclaration
<END>
<S2>
<S1>
android.app.PendingIntent$getService <type>android.app.PendingIntent this this EXP <type>android.content.Intent android.app.PendingIntent.FLAG_UPDATE_CURRENT # begin TryBlock
android.content.res.Resources$getString <type>String <type>android.content.res.Resources com.google.samples.apps.iosched.R.string.session_feedback_notification_ticker # end TryBlock
android.support.v4.app.NotificationCompat.Builder$build EXP <type>android.support.v4.app.NotificationCompat.Builder # begin TryBlock
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionsNeedingFeedbackQuery.SESSION_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionsNeedingFeedbackQuery.SESSION_TITLE # end Block
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create EXP this this # begin Block
android.support.v4.app.NotificationCompat.Builder$setContentTitle EXP <type>android.support.v4.app.NotificationCompat.Builder EXP # end Block
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$create EXP this this # begin Block
android.support.v4.app.NotificationCompat.InboxStyle$setBigContentTitle @0 <type>android.support.v4.app.NotificationCompat.InboxStyle <type>String # end Block
android.support.v4.app.NotificationCompat.Builder$setContentTitle EXP <type>android.support.v4.app.NotificationCompat.Builder EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.CONTENT_MY_SCHEDULE_URI SessionDetailQuery.PROJECTION com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.STARTING_AT_TIME_INTERVAL_SELECTION EXP null # begin TryBlock
android.database.Cursor$getCount <type>int <type>android.database.Cursor # TryBlock
android.database.Cursor$getCount EXP <type>android.database.Cursor # end TryBlock
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK # begin TryBlock
android.support.v4.app.TaskStackBuilder$create EXP this this # end TryBlock
android.support.v4.app.TaskStackBuilder$getPendingIntent <type>android.app.PendingIntent <type>android.support.v4.app.TaskStackBuilder 0 android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin end TryBlock
android.content.res.Resources$getQuantityString EXP <type>android.content.res.Resources com.google.samples.apps.iosched.R.plurals.session_notification_ticker <type>int <type>int # begin end TryBlock
android.support.v4.app.NotificationCompat.InboxStyle$build EXP <type>android.support.v4.app.NotificationCompat.InboxStyle # begin TryBlock
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionDetailQuery.SESSION_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor SessionDetailQuery.ROOM_ID # Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionDetailQuery.SESSION_TITLE # Block
android.database.Cursor$getString EXP <type>android.database.Cursor SessionDetailQuery.SESSION_TITLE # end Block
<END>
<S2>
<S1>
android.support.v4.app.TaskStackBuilder$addNextIntent @0 <type>android.support.v4.app.TaskStackBuilder EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources com.google.samples.apps.iosched.R.string.session_notification_text_1 <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getQuantityString <type>String <type>android.content.res.Resources com.google.samples.apps.iosched.R.plurals.session_notification_text EXP <type>int EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.google.samples.apps.iosched.R.string.snooze_x_min # begin Block
android.support.v4.app.NotificationCompat.Builder$addAction @0 <type>android.support.v4.app.NotificationCompat.Builder com.google.samples.apps.iosched.R.drawable.ic_alarm_holo_dark EXP EXP # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.google.samples.apps.iosched.R.string.title_map # begin Block
android.support.v4.app.NotificationCompat.Builder$addAction @0 <type>android.support.v4.app.NotificationCompat.Builder com.google.samples.apps.iosched.R.drawable.ic_map_holo_dark EXP EXP # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getQuantityString <type>String <type>android.content.res.Resources com.google.samples.apps.iosched.R.plurals.session_notification_title <type>int <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.NotificationCompat.InboxStyle$addLine @0 <type>android.support.v4.app.NotificationCompat.InboxStyle EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_START <type>long # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_END <type>long # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent SessionAlarmService.EXTRA_SESSION_ALARM_OFFSET EXP # MethodDeclaration
android.app.PendingIntent$getService EXP this this 0 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.map.MapActivity.EXTRA_ROOM <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.map.MapActivity.EXTRA_DETACHED_MODE true # MethodDeclaration
android.support.v4.app.TaskStackBuilder$create EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.CONTENT_MY_SCHEDULE_URI EXP null null null # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getLong <type>long <type>android.database.Cursor 0 # begin Block
android.database.Cursor$getLong <type>long <type>android.database.Cursor 1 # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver com.google.samples.apps.iosched.provider.ScheduleContract.Sessions.CONTENT_MY_SCHEDULE_URI EXP null null null # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$getString <type>String <type>android.database.Cursor 0 # begin Block
android.database.Cursor$getLong <type>long <type>android.database.Cursor 1 # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Connected to Google Api Service" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Disconnected from Google Api Service" # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ArrayAdapter # end MethodDeclaration
android.text.Html$fromHtml EXP this EXP # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.text.Html$fromHtml EXP this EXP # MethodDeclaration
android.widget.Button$setText @0 <type>android.widget.Button EXP # MethodDeclaration
android.text.method.LinkMovementMethod$getInstance EXP this # MethodDeclaration
android.widget.Button$setMovementMethod @0 <type>android.widget.Button EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this DemoActivity.this "onItemClick" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelExpanded" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelCollapsed" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelAnchored" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "onPanelHidden" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.content.Intent$setData @0 <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu R.id.action_toggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_show # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_hide # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_show # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_hide # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_anchor_disable # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem R.string.action_anchor_enable # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # begin ConstructorDeclaration
android.text.TextUtils$isEmpty EXP this <type>String # end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences <type>String 0l # begin Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # Block
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences <type>String null # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin Block
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String <type>long # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String <type>String # Block
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String 0l # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String null # MethodDeclaration
android.content.SharedPreferences.Editor$apply @0 <type>android.content.SharedPreferences.Editor # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>A # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$requestFocus @0 <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewBitmap @0 <type>android.widget.RemoteViews <type>int <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewResource @0 <type>android.widget.RemoteViews <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$equals EXP <type>android.widget.RemoteViews FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$hashCode EXP <type>android.widget.RemoteViews # begin end MethodDeclaration
<END>
<S2>
<S1>
android.appwidget.AppWidgetManager$getInstance <type>android.appwidget.AppWidgetManager this picasso.context # begin MethodDeclaration
android.appwidget.AppWidgetManager$updateAppWidget @0 <type>android.appwidget.AppWidgetManager <type>int <type>android.widget.RemoteViews # end MethodDeclaration
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>String <type>int <type>android.app.Notification # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_code" # MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle com.facebook.internal.NativeProtocol.FACEBOOK_PROXY_AUTH_E2E_KEY # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_code" # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_type" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_message" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle "error_description" # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.SynchronizedPool$release @0 <type>android.support.v4.util.Pools.SynchronizedPool EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.Pools.SynchronizedPool$acquire <type>java.nio.ByteBuffer <type>android.support.v4.util.Pools.SynchronizedPool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.util.Pools.SynchronizedPool$release @0 <type>android.support.v4.util.Pools.SynchronizedPool <type>java.nio.ByteBuffer # begin end Finally
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this EXP null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 1 true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager 0 true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_gridview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableGridView <type>android.view.View R.id.scroll # MethodDeclaration
android.support.v4.app.Fragment$getView <type>android.view.ViewGroup <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup R.id.container # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.fr_image_gallery <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.Gallery <type>android.view.View com.nostra13.universalimageloader.sample.R.id.gallery # MethodDeclaration
android.widget.Gallery$setAdapter @0 <type>android.widget.Gallery EXP # end MethodDeclaration
android.widget.Gallery$setOnItemClickListener @0 <type>android.widget.Gallery EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.FRAGMENT_INDEX ImagePagerFragment.INDEX # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.nostra13.universalimageloader.sample.Constants.Extra.IMAGE_POSITION <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.ImageView <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.item_gallery_image <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.RadioButton$getText EXP <type>android.widget.RadioButton # begin MethodDeclaration
android.widget.Toast$makeText EXP this SamplerActivity.this EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageButton$setOnClickListener @0 <type>android.widget.ImageButton EXP # begin end MethodDeclaration
android.widget.EditText$setOnKeyListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox EXP # begin MethodDeclaration
android.widget.RadioButton$setOnClickListener @0 <type>android.widget.RadioButton <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.RadioButton$setOnClickListener @0 <type>android.widget.RadioButton <type>android.view.View.OnClickListener # end MethodDeclaration
android.widget.ToggleButton$setOnClickListener @0 <type>android.widget.ToggleButton EXP # begin end MethodDeclaration
android.widget.RatingBar$setOnRatingBarChangeListener @0 <type>android.widget.RatingBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this "Beep Bop" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin Block
android.widget.Toast$makeText EXP this SamplerActivity.this EXP android.widget.Toast.LENGTH_SHORT # end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this "CheckBox checked" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this "CheckBox not checked" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this "ToggleButton checked" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this "ToggleButton not checked" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SamplerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Configuring account sync" # begin MethodDeclaration
android.content.ContentResolver$setIsSyncable @0 this <type>android.accounts.Account com.github.pockethub.accounts.AccountConstants.PROVIDER_AUTHORITY 1 # MethodDeclaration
android.content.ContentResolver$setSyncAutomatically @0 this <type>android.accounts.Account com.github.pockethub.accounts.AccountConstants.PROVIDER_AUTHORITY true # MethodDeclaration
android.content.ContentResolver$addPeriodicSync @0 this <type>android.accounts.Account com.github.pockethub.accounts.AccountConstants.PROVIDER_AUTHORITY EXP <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this this # begin MethodDeclaration
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this com.github.pockethub.R.string.error_oauth_not_configured android.widget.Toast.LENGTH_LONG # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$getData <type>android.net.Uri <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter <type>String <type>android.net.Uri "code" # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this LoginActivity.this FIELD android.widget.Toast.LENGTH_LONG # begin Block
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # end Block
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN <type>String # begin MethodDeclaration
android.accounts.AccountManager$addAccountExplicitly @0 <type>android.accounts.AccountManager <type>android.accounts.Account null <type>android.os.Bundle # MethodDeclaration
android.accounts.AccountManager$setAuthToken @0 <type>android.accounts.AccountManager <type>android.accounts.Account EXP <type>String # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_NAME FIELD # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_TYPE FIELD # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$setMessage @0 <type>android.app.AlertDialog EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar FIELD # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.Menu$findItem <type>android.view.MenuItem <type>android.view.Menu com.github.pockethub.R.id.m_star # begin MethodDeclaration
android.view.MenuItem$setVisible @0 <type>android.view.MenuItem <type>boolean # MethodDeclaration
android.view.MenuItem$setTitle @0 <type>android.view.MenuItem EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setBackgroundDrawable @0 <type>android.support.v7.app.ActionBar EXP # begin end MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # begin MethodDeclaration
android.webkit.WebView$getSettings EXP <type>android.webkit.WebView # end MethodDeclaration
android.webkit.WebView$setWebViewClient @0 <type>android.webkit.WebView EXP # begin MethodDeclaration
android.webkit.WebView$loadDataWithBaseURL @0 <type>android.webkit.WebView FIELD EXP "text/html" "UTF-8" null # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin TryBlock
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar EXP # end TryBlock
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.view.View$findViewById <type>android.support.v4.view.ViewPager <type>android.view.View <type>int # MethodDeclaration
android.support.test.espresso.Espresso$registerIdlingResources @0 this <type>com.github.paolorotolo.appintroexample.util.ViewPagerIdlingResource # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.Espresso$unregisterIdlingResources @0 this <type>com.github.paolorotolo.appintroexample.util.ViewPagerIdlingResource # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_skip # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_skip # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_progress # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_next_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_next_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_progress # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeLeft EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeLeft EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_progress # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_progress # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeLeft EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeRight EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isRoot EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 2 title" # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 2 title" # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 1 title" # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 3 title" # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeLeft EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this android.support.test.espresso.matcher.ViewMatchers.Visibility.VISIBLE # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_next_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this R.id.button_disable_next_swipe # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isRoot EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 2 title" # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Slide 2 title" # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeLeft EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeRight EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.isRoot EXP this # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isRoot EXP this # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this <type>int # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility EXP this <type>android.support.test.espresso.matcher.ViewMatchers.Visibility # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getColorStateList <type>android.content.res.ColorStateList <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.NavDrawerItemView_iconTints # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getDrawable EXP this EXP <type>int # begin Block
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this EXP # end Block
<END>
<S2>
<S1>
android.support.v4.graphics.drawable.DrawableCompat$setTintList @0 this <type>android.graphics.drawable.Drawable <type>android.content.res.ColorStateList # begin end Block
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$openInputStream EXP <type>android.content.ContentResolver <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setId @0 <type>android.support.v4.view.ViewPager R.id.viewpager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin Block
android.support.v4.view.PagerAdapter$getCount EXP <type>android.support.v4.view.PagerAdapter # end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getDataDirectory EXP this # begin MethodDeclaration
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # MethodDeclaration
android.os.StatFs$getAvailableBlocks EXP <type>android.os.StatFs # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin MethodDeclaration
android.os.StatFs$getBlockSize EXP <type>android.os.StatFs # MethodDeclaration
android.os.StatFs$getAvailableBlocks EXP <type>android.os.StatFs # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Environment$getDataDirectory EXP this # begin MethodDeclaration
android.os.Environment$getExternalStorageDirectory EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>android.view.View <type>android.app.Activity android.R.id.content # begin MethodDeclaration
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # end MethodDeclaration
android.view.ViewTreeObserver$addOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver <type>android.view.ViewTreeObserver <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeOnGlobalLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.ViewTreeObserver$removeGlobalOnLayoutListener @0 <type>android.view.ViewTreeObserver this # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.xxmassdeveloper.mpchartexample.R.layout.frag_simple_pie <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.mikephil.charting.charts.PieChart <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.pieChart1 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Light.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 0 8 0 # begin MethodDeclaration
android.text.SpannableString$length EXP <type>android.text.SpannableString # MethodDeclaration
android.text.SpannableString$setSpan @0 <type>android.text.SpannableString EXP 8 EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.ViewGroup <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.debug_frag null # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup com.google.samples.apps.iosched.R.id.logArea # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.view.ViewGroup <type>android.view.ViewGroup com.google.samples.apps.iosched.R.id.debug_action_list # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_ID <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_START EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_END EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.service.SessionAlarmService.EXTRA_SESSION_TITLE <type>String # MethodDeclaration
android.content.Context$startService @0 <type>android.content.Context <type>android.content.Intent # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "Showing DEBUG session feedback notification." android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$startActivity @0 <type>android.content.Context EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.explore.ExploreSessionsActivity.EXTRA_FILTER_TAG "TOPIC_ANDROID" # begin MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "" # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin MethodDeclaration
android.widget.TextView$append @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.CalendarContract.Events.CONTENT_URI <type>String EXP null "dtstart ASC" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor 0 # Block
android.database.Cursor$getLong EXP <type>android.database.Cursor 1 # Block
android.database.Cursor$getLong EXP <type>android.database.Cursor 2 # end Block
<END>
<S2>
<S1>
android.database.Cursor$getString EXP <type>android.database.Cursor 3 # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin MethodDeclaration
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable 100 # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "正在加载..." # begin MethodDeclaration
android.widget.LinearLayout.LayoutParams$setMargins @0 <type>android.widget.LinearLayout.LayoutParams EXP 0 0 0 # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.LinearLayout.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getText EXP <type>android.content.Context R.string.listview_loading # begin SwitchCase
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getText EXP <type>android.content.Context R.string.listview_loading # begin SwitchCase
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getText EXP <type>android.content.Context R.string.nomore_loading # begin SwitchCase
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra EXP <type>android.content.Intent <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Bundle # Block
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end Block
android.content.Intent$putExtras @0 <type>android.content.Intent <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # end MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Bundle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getIntExtra EXP <type>android.content.Intent <type>String 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getBundleExtra <type>android.os.Bundle <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getBundleExtra EXP <type>android.content.Intent <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getBundleExtra EXP <type>android.content.Intent <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin end MethodDeclaration
android.os.Bundle$getBundle EXP <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$containsKey EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$hasExtra EXP <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getExtras EXP <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBundle EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri <type>String null null null # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor <type>String # begin Block
android.database.Cursor$getInt <type>int <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$containsKey EXP <type>android.os.Bundle VideoLibraryModel.KEY_TOPIC # begin MethodDeclaration
android.os.Bundle$containsKey EXP <type>android.os.Bundle VideoLibraryModel.KEY_YEAR # MethodDeclaration
android.os.Bundle$getString EXP <type>android.os.Bundle VideoLibraryModel.KEY_TOPIC # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle VideoLibraryModel.KEY_YEAR # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst EXP <type>android.database.Cursor # begin end MethodDeclaration
android.database.Cursor$moveToNext EXP <type>android.database.Cursor # begin end MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_ID # begin MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_YEAR # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_TOPIC # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_TITLE # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_DESC # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_VID # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_SPEAKERS # MethodDeclaration
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Videos.VIDEO_THUMBNAIL_URL # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.extra.staggeredgrid.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable EXP <type>android.content.res.TypedArray <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray <type>int <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int 0 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth <type>int <type>android.graphics.drawable.Drawable # begin Block
android.graphics.drawable.Drawable$getIntrinsicHeight <type>int <type>android.graphics.drawable.Drawable # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$getLeft EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getRight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable EXP <type>int EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>int EXP EXP EXP # begin MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_listview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableListView <type>android.view.View R.id.scroll # MethodDeclaration
android.support.v4.app.Fragment$getView <type>android.view.ViewGroup <type>android.support.v4.app.Fragment # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById EXP <type>android.view.ViewGroup R.id.container # begin end Block
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this org.robolectric.RuntimeEnvironment.application # begin MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>long <type>android.view.ViewConfiguration # MethodDeclaration
android.view.ViewConfiguration$getLongPressTimeout <type>long <type>android.view.ViewConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getEventTime EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent <type>String <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.content.pm.PackageManager$resolveActivity <type>android.content.pm.ResolveInfo <type>android.content.pm.PackageManager <type>android.content.Intent 0 # end MethodDeclaration
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin TryBlock
android.content.pm.PackageManager$queryIntentActivities <type>java.util.List <type>android.content.pm.PackageManager <type>android.content.Intent android.content.pm.PackageManager.GET_RESOLVED_FILTER # end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$writeFloat @0 <type>android.os.Parcel this.mVal # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel this.mXIndex # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel 1 # begin Block
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.mData <type>int # end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel 0 # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "extra_launch_uri" <type>String # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "expires_in" "3600" # MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle "app_id" EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "user_id" <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" "message" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "fields" <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.RGB_565 # begin MethodDeclaration
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap android.graphics.Color.BLUE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open <type>java.io.InputStream <type>android.content.res.AssetManager <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$open @0 <type>android.os.ConditionVariable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ConditionVariable$block <type>boolean <type>android.os.ConditionVariable 10000 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this "TestRequestAsyncTask" "signaling blocker" # begin end Finally
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "baseProgressButtonEnabled" <type>boolean # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "progressButtonEnabled" <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "skipButtonEnabled" <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "nextEnabled" EXP # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "nextPagingEnabled" EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "lockPage" EXP # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle "currentItem" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.baseProgressButtonEnabled <type>android.os.Bundle "baseProgressButtonEnabled" # begin MethodDeclaration
android.os.Bundle$getBoolean this.progressButtonEnabled <type>android.os.Bundle "progressButtonEnabled" # MethodDeclaration
android.os.Bundle$getBoolean this.skipButtonEnabled <type>android.os.Bundle "skipButtonEnabled" # MethodDeclaration
android.os.Bundle$getInt this.savedCurrentItem <type>android.os.Bundle "currentItem" # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle "nextEnabled" # MethodDeclaration
android.os.Bundle$getBoolean EXP <type>android.os.Bundle "nextPagingEnabled" # MethodDeclaration
android.os.Bundle$getInt EXP <type>android.os.Bundle "lockPage" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin Block
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setBackgroundColor @0 <type>android.widget.LinearLayout <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setBackgroundColor @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setImageDrawable @0 <type>android.view.View <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Invalid Slide Number" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unexpected request code" # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP <type>float mRenderPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin Block
android.graphics.Color$green EXP this <type>int # Block
android.graphics.Color$blue EXP this <type>int # Block
android.graphics.Color$argb <type>int this EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$clear @0 <type>android.util.SparseArray # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin MethodDeclaration
android.util.SparseArray$size EXP <type>android.util.SparseArray # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItem EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$indexOfKey EXP <type>android.util.SparseArray <type>int # begin MethodDeclaration
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType EXP <type>android.widget.ListAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEnabled EXP <type>android.widget.ListAdapter EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$hasStableIds EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$isEmpty EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.widget.TextView <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView EXP <type>android.widget.ListAdapter EXP <type>android.view.View <type>android.view.ViewGroup # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.ExifInterface$getAttributeInt <type>int <type>android.media.ExifInterface android.media.ExifInterface.TAG_ORIENTATION android.media.ExifInterface.ORIENTATION_NORMAL # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap 0 0 EXP EXP <type>android.graphics.Matrix true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postScale @0 <type>android.graphics.Matrix EXP 1 # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.content.Context # begin MethodDeclaration
android.accounts.AccountManager$getAuthToken <type>android.accounts.AccountManagerFuture <type>android.accounts.AccountManager <type>android.accounts.Account <type>String <type>boolean null null # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManagerFuture$getResult <type>android.os.Bundle <type>android.accounts.AccountManagerFuture # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getParcelable <type>android.content.Intent <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getCacheDir <type>java.io.File <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "default disk cache dir is null" # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin end Block
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.material_drawer_account_header # begin end Block
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.material_drawer_account_header_background # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin Block
android.view.View$setForeground @0 <type>android.view.View EXP # Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # Block
android.view.View$setTag @0 <type>android.view.View R.id.material_drawer_profile_header <type>com.mikepenz.materialdrawer.model.interfaces.IProfile # end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View <type>int # begin Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # Block
android.view.View$setTag @0 <type>android.view.View R.id.material_drawer_profile_header <type>com.mikepenz.materialdrawer.model.interfaces.IProfile # end Block
<END>
<S2>
<S1>
android.view.View$setForeground @0 <type>android.view.View null # begin Block
android.view.View$setOnClickListener @0 <type>android.view.View null # end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View null # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.material_drawer_account_header # begin MethodDeclaration
android.app.Activity$getResources EXP <type>android.app.Activity # end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.material_drawer_account_header_background # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.material_drawer_account_header_text_switcher # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.view.View$findViewById <type>com.mikepenz.materialdrawer.view.BezelImageView <type>android.view.View R.id.material_drawer_account_header_current # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.material_drawer_account_header_name # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View R.id.material_drawer_account_header_email # end MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # MethodDeclaration
android.view.View$findViewById <type>com.mikepenz.materialdrawer.view.BezelImageView <type>android.view.View R.id.material_drawer_account_header_small_first # MethodDeclaration
android.view.View$findViewById <type>com.mikepenz.materialdrawer.view.BezelImageView <type>android.view.View R.id.material_drawer_account_header_small_second # MethodDeclaration
android.view.View$findViewById <type>com.mikepenz.materialdrawer.view.BezelImageView <type>android.view.View R.id.material_drawer_account_header_small_third # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.view.View$getPaddingLeft EXP <type>android.view.View # begin Block
android.view.View$getPaddingTop EXP <type>android.view.View # Block
android.view.View$getPaddingRight EXP <type>android.view.View # Block
android.view.View$getPaddingBottom EXP <type>android.view.View # Block
android.view.View$setPadding @0 <type>android.view.View EXP EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView <type>android.widget.ImageView.ScaleType # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.material_drawer_account_header_text_section # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTypeface @0 <type>android.widget.TextView <type>android.graphics.Typeface # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle AccountHeader.BUNDLE_SELECTION_HEADER EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin MethodDeclaration
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "" # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "" # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.view.View$setTag @0 <type>android.view.View R.id.material_drawer_profile_header <type>com.mikepenz.materialdrawer.model.interfaces.IProfile # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # Block
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setVisibility @0 <type>android.widget.ImageView android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$getContext EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IProfile <type>android.view.View R.id.material_drawer_profile_header # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IProfile <type>android.view.View R.id.material_drawer_profile_header # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IProfile <type>android.view.View R.id.material_drawer_profile_header # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>com.mikepenz.materialdrawer.model.interfaces.IProfile <type>android.view.View R.id.material_drawer_profile_header # begin MethodDeclaration
android.view.View$getContext EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View R.id.material_drawer_profile_header # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this EXP # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin ClassDeclaration
android.net.Uri$buildUpon EXP <type>android.net.Uri # end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin MethodDeclaration
android.net.Uri$buildUpon EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getQueryParameter EXP <type>android.net.Uri <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$buildUpon EXP <type>android.net.Uri # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences <type>String null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin MethodDeclaration
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin MethodDeclaration
android.text.TextUtils$isEmpty EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString EXP <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences EXP null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity <type>android.content.Intent <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "Andrew" "hi" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$addTextChangedListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.EditText$setOnTouchListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$invalidateOptionsMenu @0 <type>android.app.Activity # begin end IfTrue
<END>
<S2>
<S1>
android.widget.EditText$requestFocusFromTouch @0 <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.comment_create <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # begin Block
android.widget.EditText$selectAll @0 <type>android.widget.EditText # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP 120 false <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$ofFloat <type>android.animation.ObjectAnimator this EXP "rotation" 0 180 360 # begin MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 600 # MethodDeclaration
android.animation.ObjectAnimator$setRepeatCount @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this io.paperdb.Paper.TAG EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # MethodDeclaration
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin MethodDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this this # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableListView false # MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.padding <type>com.github.ksoichiro.android.observablescrollview.ObservableListView false # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$obtain <type>android.os.Parcel this # begin MethodDeclaration
android.os.Parcel$obtain <type>android.os.Parcel this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel <type>E 0 # begin TryBlock
android.os.Parcel$marshall <type>byte <type>android.os.Parcel # TryBlock
android.os.Parcel$unmarshall @0 <type>android.os.Parcel <type>byte 0 FIELD # TryBlock
android.os.Parcel$setDataPosition @0 <type>android.os.Parcel 0 # TryBlock
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # end TryBlock
<END>
<S2>
<S1>
android.os.Parcel$recycle @0 <type>android.os.Parcel # begin Finally
android.os.Parcel$recycle @0 <type>android.os.Parcel # end Finally
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin TryBlock
android.content.res.AssetManager$open <type>InputStream <type>android.content.res.AssetManager <type>String # end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getPackageManager EXP <type>android.app.Activity # begin MethodDeclaration
android.app.Activity$getContentResolver EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.content.Intent$getAction EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getFlags EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getPackage EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getParcelableExtra EXP <type>android.content.Intent android.content.Intent.EXTRA_STREAM # MethodDeclaration
android.content.Intent$getType EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "com.facebook.orca.extra.APPLICATION_ID" # MethodDeclaration
android.content.Intent$getIntExtra EXP <type>android.content.Intent "com.facebook.orca.extra.PROTOCOL_VERSION" EXP # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "com.facebook.orca.extra.METADATA" # MethodDeclaration
android.content.Intent$getParcelableExtra EXP <type>android.content.Intent "com.facebook.orca.extra.EXTERNAL_URI" # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.content.Intent$getAction EXP <type>android.content.Intent # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.content.Intent$getData EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent "com.facebook.orca.category.PLATFORM_THREAD_20150314" # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.THREAD_TOKEN" "thread_token" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.METADATA" "{}" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.PARTICIPANTS" "100,400,500" # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle "com.facebook.orca.extra.IS_REPLY" true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addCategory @0 <type>android.content.Intent "com.facebook.orca.category.PLATFORM_THREAD_20150314" # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.THREAD_TOKEN" "thread_token" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.METADATA" "{}" # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "com.facebook.orca.extra.PARTICIPANTS" "100,400,500" # MethodDeclaration
android.app.Activity$getIntent EXP <type>android.app.Activity # MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.content.Intent$getFlags EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getIntExtra EXP <type>android.content.Intent "com.facebook.orca.extra.PROTOCOL_VERSION" EXP # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "com.facebook.orca.extra.THREAD_TOKEN" # MethodDeclaration
android.content.Intent$getData EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getType EXP <type>android.content.Intent # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "com.facebook.orca.extra.APPLICATION_ID" # MethodDeclaration
android.content.Intent$getStringExtra EXP <type>android.content.Intent "com.facebook.orca.extra.METADATA" # MethodDeclaration
android.content.Intent$getParcelableExtra EXP <type>android.content.Intent "com.facebook.orca.extra.EXTERNAL_URI" # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo EXP <type>android.content.pm.PackageManager "com.facebook.orca" 0 # begin end Block
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo EXP <type>android.content.pm.PackageManager "com.facebook.orca" 0 # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.content.ContentResolver$query EXP <type>android.content.ContentResolver EXP EXP null null null # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "al_applink_data" <type>android.os.Bundle # begin MethodDeclaration
android.os.Bundle$putBundle @0 <type>android.os.Bundle "extras" <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>String <type>android.util.SparseArray <type>int null # begin MethodDeclaration
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # Block
android.util.SparseArray$get EXP <type>android.util.SparseArray EXP # end Block
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin Block
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP <type>String # end Block
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry$getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # begin MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.rule.ActivityTestRule$getActivity EXP <type>android.support.test.rule.ActivityTestRule # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this "The presenter model should be an instance of SessionDetailModel" EXP EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.assertThat @0 this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_title # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_map_room # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.menu_share # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_detail_frag # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.swipeUp EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_speakers_block # MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.session_tags_container # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.action.ViewActions.scrollTo EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.matcher.ViewMatchers.withId EXP this com.google.samples.apps.iosched.R.id.give_feedback_card # begin MethodDeclaration
android.support.test.espresso.Espresso.onView EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet com.google.samples.apps.iosched.R.styleable.ScrimInsetsView <type>int 0 # begin end MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.ScrimInsetsView_appInsetForeground # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int FIELD # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 EXP <type>int <type>int # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 FIELD FIELD EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP FIELD <type>int EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$size EXP <type>android.util.SparseArray # begin end ClassDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>String <type>android.util.SparseArray EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId <type>long <type>android.widget.ListAdapter EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount <type>int <type>android.widget.ListAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$unregisterDataSetObserver @0 <type>android.widget.ListAdapter <type>AdapterDataSetObserver # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$registerDataSetObserver @0 <type>android.widget.ListAdapter <type>AdapterDataSetObserver # begin Block
android.widget.ListAdapter$getViewTypeCount EXP <type>android.widget.ListAdapter # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "getSelectedView() is not supported in ExtendableListView yet" # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId <type>long <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>MotionEvent 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>MotionEvent <type>int # begin end MethodDeclaration
android.support.v4.view.MotionEventCompat$getY <type>int this <type>MotionEvent <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>CheckForLongPress # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>CheckForLongPress # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>CheckForLongPress # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "scrollIfNeeded TOUCH_MODE_SCROLLING" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin Block
android.util.Log$d @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType <type>int <type>android.widget.ListAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getView <type>View <type>android.widget.ListAdapter <type>int <type>View this # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListAdapter$getView <type>View <type>android.widget.ListAdapter <type>int null this # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListAdapter$getCount EXP <type>android.widget.ListAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller true # begin MethodDeclaration
android.widget.Scroller$fling @0 <type>android.widget.Scroller 0 <type>int 0 <type>int 0 Integer.MAX_VALUE 0 Integer.MAX_VALUE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$startScroll @0 <type>android.widget.Scroller 0 <type>int 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$forceFinished @0 <type>android.widget.Scroller true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Scroller$computeScrollOffset <type>boolean <type>android.widget.Scroller # begin Block
android.widget.Scroller$getCurrY <type>int <type>android.widget.Scroller # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postOnAnimation @0 this this <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$size <type>int <type>android.support.v4.util.SparseArrayCompat # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt EXP <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$clear @0 <type>android.support.v4.util.SparseArrayCompat # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$indexOfKey <type>int <type>android.support.v4.util.SparseArrayCompat <type>int # begin end MethodDeclaration
android.support.v4.util.SparseArrayCompat$valueAt <type>View <type>android.support.v4.util.SparseArrayCompat <type>int # begin MethodDeclaration
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$clear @0 <type>android.support.v4.util.SparseArrayCompat # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemViewType <type>int <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$hasTransientState <type>boolean this <type>View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$put @0 <type>android.support.v4.util.SparseArrayCompat <type>int <type>View # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$hasTransientState <type>boolean this <type>View # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$put @0 <type>android.support.v4.util.SparseArrayCompat EXP <type>View # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt <type>View <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId <type>long <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId FIELD <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.ListAdapter$getItemId EXP <type>android.widget.ListAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.app.Application EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add EXP <type>android.support.v4.app.FragmentTransaction R.id.simple_fragment <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle "level" # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "level" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$setCustomAnimations @0 <type>android.support.v4.app.FragmentTransaction R.anim.fragment_slide_left_enter R.anim.fragment_slide_left_exit R.anim.fragment_slide_right_enter R.anim.fragment_slide_right_exit # begin MethodDeclaration
android.support.v4.app.FragmentTransaction$replace @0 <type>android.support.v4.app.FragmentTransaction R.id.simple_fragment <type>android.support.v4.app.Fragment # MethodDeclaration
android.support.v4.app.FragmentTransaction$addToBackStack @0 <type>android.support.v4.app.FragmentTransaction null # MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "num" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.hello_world <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setBackgroundDrawable @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_layout_resourceID <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "No card model found. Please use setCard(card) to set all values." # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeValue @0 <type>android.os.Parcel this.pageNumber # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.image # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.audio # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.text # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannedString$valueOf EXP this "" # begin end Block
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_classic_header_with_list_view_and_empty_view null # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_with_empty_view_fragment_empty_view # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrClassicFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_with_empty_view_fragment_ptr_frame # end MethodDeclaration
android.widget.TextView$setOnClickListener @0 <type>android.widget.TextView EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_with_empty_view_fragment_list_view # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.VISIBLE # MethodDeclaration
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>in.srain.cube.views.list.ListViewDataAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setVisibility @0 <type>android.widget.TextView android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.list_view_item null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.list_view_item_image_view # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView EXP # begin Block
android.widget.ImageView$setPadding @0 <type>android.widget.ImageView <type>int <type>int <type>int <type>int # Block
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics <type>android.util.DisplayMetrics <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_cardwithlist_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArray @0 <type>android.os.Bundle "parcelableArray" <type>android.accounts.Account # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent EXP in.srain.cube.views.ptr.demo.ui.viewpager.ViewPagerActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.fragment_ptr_home_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Canvas$drawARGB @0 <type>android.graphics.Canvas 0 0 0 0 # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>Integer # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin TryBlock
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.UriMatcher$addURI @0 <type>android.content.UriMatcher <type>String EXP EXP # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP EXP # begin end Block
<END>
<S2>
<S1>
android.content.UriMatcher$match <type>int <type>android.content.UriMatcher <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get <type>ScheduleUriEnum <type>android.util.SparseArray <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeValue <type>String <type>android.util.AttributeSet ANDROIDXML "padding" # begin MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "text" EXP # end MethodDeclaration
android.util.AttributeSet$getAttributeFloatValue rippleSpeed <type>android.util.AttributeSet MATERIALDESIGNXML "rippleSpeed" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue background <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeValue <type>String <type>android.util.AttributeSet ANDROIDXML "text" # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin Block
android.widget.TextView$setTextColor @0 <type>android.widget.TextView android.graphics.Color.WHITE # Block
android.widget.TextView$setTypeface @0 <type>android.widget.TextView null android.graphics.Typeface.BOLD # Block
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>LayoutParams # Block
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "textColor" EXP # end Block
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray 0 EXP # begin Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "textColor" EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextColor @0 <type>android.widget.TextView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setTextSize @0 <type>android.widget.TextView <type>float # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP <type>android.graphics.Rect <type>android.graphics.Rect null # begin end Block
<END>
<S2>
<S1>
android.content.Context$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.content.Context <type>android.util.AttributeSet it.gmariotti.cardslib.demo.R.styleable.ScrimInsetsView <type>int 0 # begin end MethodDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray it.gmariotti.cardslib.demo.R.styleable.ScrimInsetsView_insetForeground # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 0 <type>int FIELD # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 EXP <type>int <type>int # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect 0 FIELD FIELD EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Rect$set @0 <type>android.graphics.Rect EXP FIELD <type>int EXP # Block
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable null # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this <type>android.content.Context <type>int # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end SwitchCase
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater <type>int <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>it.gmariotti.cardslib.library.view.base.CardViewWrapper <type>android.view.View it.gmariotti.cardslib.library.R.id.list_cardId # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$getPosition EXP <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Swipe action not enabled in this type of view" # begin end IfTrue
<END>
<S2>
<S1>
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>MusicService <type>int EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin ConstructorDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>MusicService <type>int EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # ConstructorDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>MusicService <type>int EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # ConstructorDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>MusicService <type>int EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # ConstructorDeclaration
android.app.PendingIntent$getBroadcast <type>android.app.PendingIntent this <type>MusicService <type>int EXP android.app.PendingIntent.FLAG_CANCEL_CURRENT # ConstructorDeclaration
android.app.NotificationManager$cancelAll @0 <type>android.app.NotificationManager # end ConstructorDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$getMetadata <type>android.media.MediaMetadata <type>android.media.session.MediaController # begin Block
android.media.session.MediaController$getPlaybackState <type>android.media.session.PlaybackState <type>android.media.session.MediaController # end Block
<END>
<S2>
<S1>
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # end Block
<END>
<S2>
<S1>
android.media.session.MediaController$unregisterCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin end Block
<END>
<S2>
<S1>
android.app.NotificationManager$cancel @0 <type>android.app.NotificationManager <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$pause @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$play @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToNext @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.media.session.MediaController.TransportControls$skipToPrevious @0 <type>android.media.session.MediaController.TransportControls # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$setAction @0 <type>android.content.Intent MusicService.ACTION_CMD # begin SwitchCase
android.content.Intent$putExtra @0 <type>android.content.Intent MusicService.CMD_NAME MusicService.CMD_STOP_CASTING # end SwitchCase
<END>
<S2>
<S1>
android.media.session.MediaController$getTransportControls <type>android.media.session.MediaController.TransportControls <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$unregisterCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.example.android.uamp.ui.MusicPlayerActivity.EXTRA_START_FULLSCREEN true # end MethodDeclaration
android.app.PendingIntent$getActivity EXP this <type>MusicService <type>int <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.example.android.uamp.ui.MusicPlayerActivity.EXTRA_CURRENT_MEDIA_DESCRIPTION <type>android.media.MediaDescription # begin end Block
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int <type>android.app.Notification # begin end Block
<END>
<S2>
<S1>
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int <type>android.app.Notification # begin end Block
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription <type>android.media.MediaDescription <type>android.media.MediaMetadata # begin end MethodDeclaration
android.app.Notification.Builder$setStyle EXP <type>android.app.Notification.Builder EXP # begin MethodDeclaration
android.media.MediaDescription$getTitle EXP <type>android.media.MediaDescription # MethodDeclaration
android.media.MediaDescription$getSubtitle EXP <type>android.media.MediaDescription # end MethodDeclaration
android.app.Notification.Builder$build EXP <type>android.app.Notification.Builder # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Notification.Builder$addAction @0 <type>android.app.Notification.Builder R.drawable.ic_skip_previous_white_24dp EXP <type>android.app.PendingIntent # begin end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$addAction @0 <type>android.app.Notification.Builder R.drawable.ic_skip_next_white_24dp EXP <type>android.app.PendingIntent # begin end Block
<END>
<S2>
<S1>
android.media.MediaDescription$getIconUri EXP <type>android.media.MediaDescription # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP R.drawable.ic_default_art # begin end Block
<END>
<S2>
<S1>
android.media.session.MediaController$getExtras EXP <type>android.media.session.MediaController # begin end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$setSubText @0 <type>android.app.Notification.Builder <type>String # begin Block
android.app.Notification.Builder$addAction @0 <type>android.app.Notification.Builder R.drawable.ic_close_black_24dp EXP <type>android.app.PendingIntent # end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$addAction @0 <type>android.app.Notification.Builder EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin MethodDeclaration
android.app.Notification.Builder$setOngoing @0 <type>android.app.Notification.Builder EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getPosition EXP <type>android.media.session.PlaybackState # begin Block
android.media.session.PlaybackState$getPosition EXP <type>android.media.session.PlaybackState # Block
android.app.Notification.Builder$setWhen EXP <type>android.app.Notification.Builder EXP # end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$setWhen EXP <type>android.app.Notification.Builder 0 # begin end Block
<END>
<S2>
<S1>
android.app.Notification.Builder$setLargeIcon @0 <type>android.app.Notification.Builder <type>android.graphics.Bitmap # begin Block
android.app.Notification.Builder$build EXP <type>android.app.Notification.Builder # Block
android.app.NotificationManager$notify @0 <type>android.app.NotificationManager <type>int EXP # end Block
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setText @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getResources EXP <type>android.app.Activity # begin end Block
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$finish @0 <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager <type>android.content.pm.PackageManager <type>android.content.Context # begin MethodDeclaration
android.content.Context$getPackageName <type>String <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getPackageInfo <type>android.content.pm.PackageInfo <type>android.content.pm.PackageManager <type>String 0 # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.User <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getWidth EXP <type>android.widget.ImageView # begin MethodDeclaration
android.widget.ImageView$getHeight EXP <type>android.widget.ImageView # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.AbsListView.LayoutParams # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin TryBlock
android.net.Uri$parse EXP this EXP # end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is visible and about to be started." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is visible and about to be restarted." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is and has focus (it is now \"resumed\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Another activity is taking focus (this activity is about to be \"paused\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is no longer visible (it is now \"stopped\")" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "The activity is about to be destroyed." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollviewwithfab <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.fab # end MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.FrameLayout.LayoutParams <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$getWidth EXP <type>android.view.View # Block
android.view.View$requestLayout @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.root # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaSession.QueueItem$getDescription EXP <type>android.media.session.MediaSession.QueueItem # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # begin MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # MethodDeclaration
android.media.MediaMetadata$getDescription EXP <type>android.media.MediaMetadata # MethodDeclaration
android.media.MediaMetadata$getString EXP <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_ALBUM_ARTIST # MethodDeclaration
android.media.MediaMetadata$getString EXP <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_ALBUM # MethodDeclaration
android.media.MediaMetadata$getString EXP <type>android.media.MediaMetadata android.media.MediaMetadata.METADATA_KEY_ALBUM_ART_URI # MethodDeclaration
android.media.MediaMetadata$getString EXP <type>android.media.MediaMetadata com.example.android.uamp.model.MusicProvider.CUSTOM_METADATA_TRACK_SOURCE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this this # begin MethodDeclaration
android.widget.ScrollView$addView @0 <type>android.widget.ScrollView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.LruCache$get <type>android.graphics.Bitmap <type>android.util.LruCache <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.LruCache$get <type>android.graphics.Bitmap <type>android.util.LruCache <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.LruCache$get <type>android.graphics.Bitmap <type>android.util.LruCache <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.LruCache$size EXP <type>android.util.LruCache # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.LruCache$put @0 <type>android.util.LruCache <type>String <type>android.graphics.Bitmap # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessageDelayed @0 <type>android.os.Handler <type>int 10 # begin end Block
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessageDelayed @0 <type>android.os.Handler <type>int 10 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.os.PowerManager.WakeLock$release @0 <type>android.os.PowerManager.WakeLock # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String FIELD # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin SwitchCase
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # end SwitchCase
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String FIELD # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String FIELD # begin end SwitchCase
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin Block
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Unknown audio focus change code" # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "command" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getIntArrayExtra <type>int <type>android.content.Intent android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_IDS # begin end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int <type>int 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.AudioManager$registerMediaButtonEventReceiver @0 <type>android.media.AudioManager <type>android.content.ComponentName # begin MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # MethodDeclaration
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter <type>String # MethodDeclaration
android.os.PowerManager$newWakeLock <type>android.os.PowerManager.WakeLock <type>android.os.PowerManager android.os.PowerManager.PARTIAL_WAKE_LOCK EXP # MethodDeclaration
android.os.PowerManager.WakeLock$setReferenceCounted @0 <type>android.os.PowerManager.WakeLock false # MethodDeclaration
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler # MethodDeclaration
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler <type>android.os.Message <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.media.audiofx.AudioEffect.EXTRA_AUDIO_SESSION EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.media.audiofx.AudioEffect.EXTRA_PACKAGE_NAME EXP # MethodDeclaration
android.media.AudioManager$abandonAudioFocus @0 <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener # MethodDeclaration
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # MethodDeclaration
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # end MethodDeclaration
android.os.PowerManager.WakeLock$release @0 <type>android.os.PowerManager.WakeLock # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Service being destroyed while still playing." # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "curpos" <type>int # begin end MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "repeatmode" <type>int # begin MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "shufflemode" <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor "queue" EXP # begin Block
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor "cardid" <type>int # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor "history" EXP # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor "seekpos" EXP # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences "cardid" EXP # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences "queue" "" # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences "curpos" 0 # begin end Block
android.content.SharedPreferences$getLong <type>long <type>android.content.SharedPreferences "seekpos" 0 # begin Block
android.util.Log$d @0 this <type>String EXP # Block
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences "repeatmode" <type>int # end Block
android.content.SharedPreferences$getInt <type>int <type>android.content.SharedPreferences "shufflemode" <type>int # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 3000 # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$getString <type>String <type>android.content.SharedPreferences "history" "" # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin end MethodDeclaration
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin MethodDeclaration
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler # MethodDeclaration
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler <type>android.os.Message <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin Block
android.content.Intent$getStringExtra <type>String <type>android.content.Intent "command" # end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler # begin Block
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler <type>android.os.Message <type>int # end Block
<END>
<S2>
<S1>
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.content.Intent.ACTION_MEDIA_EJECT # begin Block
android.content.IntentFilter$addAction @0 <type>android.content.IntentFilter android.content.Intent.ACTION_MEDIA_MOUNTED # Block
android.content.IntentFilter$addDataScheme @0 <type>android.content.IntentFilter "file" # end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "id" EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "artist" EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "album" EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "track" EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "playing" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$moveToFirst @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.media.AudioManager$requestAudioFocus @0 <type>android.media.AudioManager <type>android.media.AudioManager.OnAudioFocusChangeListener android.media.AudioManager.STREAM_MUSIC android.media.AudioManager.AUDIOFOCUS_GAIN # begin MethodDeclaration
android.media.AudioManager$registerMediaButtonEventReceiver @0 <type>android.media.AudioManager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$removeMessages @0 <type>android.os.Handler <type>int # begin Block
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # end Block
<END>
<S2>
<S1>
android.widget.RemoteViews$setImageViewResource @0 <type>android.widget.RemoteViews R.id.icon R.drawable.stat_notify_musicplayer # begin end MethodDeclaration
android.app.PendingIntent$getActivity FIELD this this 0 EXP 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews R.id.trackname EXP # begin Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews R.id.artistalbum null # end Block
<END>
<S2>
<S1>
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews R.id.trackname EXP # begin end Block
android.widget.RemoteViews$setTextViewText @0 <type>android.widget.RemoteViews R.id.artistalbum EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacksAndMessages @0 <type>android.os.Handler null # begin MethodDeclaration
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler # MethodDeclaration
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler <type>android.os.Message <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Audio.Media.BOOKMARK <type>long # begin Block
android.database.Cursor$getLong EXP <type>android.database.Cursor <type>int # Block
android.content.ContentUris$withAppendedId <type>android.net.Uri this android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI EXP # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "lookback too big" # begin end Block
<END>
<S2>
<S1>
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI EXP EXP null null # begin end TryBlock
android.database.Cursor$getCount <type>int <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$moveToNext @0 <type>android.database.Cursor # begin Block
android.database.Cursor$getLong EXP <type>android.database.Cursor 0 # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setOnCompletionListener @0 <type>android.media.MediaPlayer <type>android.media.MediaPlayer.OnCompletionListener # begin MethodDeclaration
android.media.MediaPlayer$setOnErrorListener @0 <type>android.media.MediaPlayer <type>android.media.MediaPlayer.OnErrorListener # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.media.audiofx.AudioEffect.EXTRA_AUDIO_SESSION EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.media.audiofx.AudioEffect.EXTRA_PACKAGE_NAME EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$reset @0 <type>android.media.MediaPlayer # begin TryBlock
android.media.MediaPlayer$setOnPreparedListener @0 <type>android.media.MediaPlayer null # end TryBlock
android.media.MediaPlayer$setAudioStreamType @0 <type>android.media.MediaPlayer android.media.AudioManager.STREAM_MUSIC # begin TryBlock
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin Block
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer MediaPlaybackService.this EXP # end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # begin end Block
<END>
<S2>
<S1>
android.os.PowerManager.WakeLock$acquire @0 <type>android.os.PowerManager.WakeLock 30000 # begin Block
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # Block
android.os.Handler$sendEmptyMessage @0 <type>android.os.Handler <type>int # end Block
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler <type>int # begin SwitchCase
android.os.Handler$sendMessageDelayed @0 <type>android.os.Handler EXP 2000 # end SwitchCase
<END>
<S2>
<S1>
android.util.Log$d @0 this "MultiPlayer" EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.media.MediaPlayer$getMethod @0 this "setNextMediaPlayer" android.media.MediaPlayer # begin end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer.OnCompletionListener$onCompletion @0 <type>android.media.MediaPlayer.OnCompletionListener this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 50 # begin Block
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin MethodDeclaration
android.widget.TextView$setTextColor @0 <type>android.widget.TextView 0xffffffff # MethodDeclaration
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # MethodDeclaration
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView com.actionbarsherlock.R.drawable.abs__toast_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context <type>CharSequence <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.text.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin Block
android.text.ClipboardManager$setText @0 <type>android.text.ClipboardManager <type>String # end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.content.ClipboardManager <type>android.content.Context android.content.Context.CLIPBOARD_SERVICE # begin Block
android.content.ClipboardManager$setPrimaryClip @0 <type>android.content.ClipboardManager <type>android.content.ClipData # end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAccountsByType <type>android.accounts.Account <type>android.accounts.AccountManager com.donnfelker.android.bootstrap.core.Constants.Auth.BOOTSTRAP_ACCOUNT_TYPE # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountManager$removeAccount <type>android.accounts.AccountManagerFuture <type>android.accounts.AccountManager EXP null null # begin Block
android.accounts.AccountManagerFuture$getResult EXP <type>android.accounts.AccountManagerFuture # end Block
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.github.mikephil.charting.charts.Chart.LOG_TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.github.mikephil.charting.charts.Chart.LOG_TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.github.mikephil.charting.charts.Chart.LOG_TAG EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Hello World!" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Doing some background work." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.ALPHA 0f 1f # begin MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_X 0f 1f # MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_Y 0f 1f # MethodDeclaration
android.animation.ObjectAnimator$ofPropertyValuesHolder EXP this FIELD EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.ALPHA 1f 0f # begin MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_X 1f 0f # MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_Y 1f 0f # MethodDeclaration
android.animation.ObjectAnimator$ofPropertyValuesHolder EXP this FIELD EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.util.Base64$decode EXP this <type>String android.util.Base64.DEFAULT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_grid_gplay_cab <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end Block
<END>
<S2>
<S1>
android.view.ActionMode$getMenuInflater <type>android.view.MenuInflater <type>android.view.ActionMode # begin MethodDeclaration
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.carddemo_multichoice <type>android.view.Menu # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ActionMode$finish @0 <type>android.view.ActionMode # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseBooleanArray$keyAt EXP <type>android.util.SparseBooleanArray <type>int # begin end Block
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click listener " android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$hide @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$show @0 <type>android.support.v7.app.ActionBar # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getClassLoader EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.contentDescription # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.contentTitle # MethodDeclaration
android.os.Parcel$writeParcelable @0 <type>android.os.Parcel this.imageUrl 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED by Receiver3" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_list_twowayview <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.os.Handler$removeCallbacks @0 <type>android.os.Handler <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$stop @0 <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView errorResId # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView errorDrawable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin MethodDeclaration
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # MethodDeclaration
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.title_fragment_container EXP # MethodDeclaration
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # end MethodDeclaration
android.app.FragmentManager$addOnBackStackChangedListener @0 <type>android.app.FragmentManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # begin Block
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # end Block
<END>
<S2>
<S1>
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # begin Block
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout EXP # end Block
<END>
<S2>
<S1>
android.app.FragmentManager$beginTransaction <type>android.app.FragmentTransaction <type>android.app.FragmentManager # begin Block
android.app.FragmentTransaction$add @0 <type>android.app.FragmentTransaction R.id.quote_fragment_container <type>QuotesFragment # Block
android.app.FragmentTransaction$addToBackStack @0 <type>android.app.FragmentTransaction null # Block
android.app.FragmentTransaction$commit @0 <type>android.app.FragmentTransaction # Block
android.app.FragmentManager$executePendingTransactions @0 <type>android.app.FragmentManager # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>java.util.List <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool <type>java.util.List # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_cardwithlist_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin Block
android.content.Context$getResources EXP <type>android.content.Context # Block
android.util.TypedValue$complexToDimensionPixelSize <type>int this FIELD EXP # end Block
<END>
<S2>
<S1>
android.content.res.ColorStateList$valueOf EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.ColorStateList$valueOf EXP this <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getVibrantSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getLightVibrantSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getDarkVibrantSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getMutedSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getLightMutedSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$getDarkMutedSwatch EXP <type>android.support.v7.graphics.Palette # begin end Block
<END>
<S2>
<S1>
android.view.View$getSystemUiVisibility <type>int <type>android.view.View # begin Block
android.view.View$setSystemUiVisibility @0 <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getSystemUiVisibility <type>int <type>android.view.View # begin Block
android.view.View$setSystemUiVisibility @0 <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_PX <type>float <type>android.util.DisplayMetrics # begin MethodDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBackground <type>android.graphics.drawable.Drawable <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getColor EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageAlpha @0 <type>android.widget.ImageView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getImageAlpha EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getPaddingLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # MethodDeclaration
android.graphics.Outline$setOval @0 <type>android.graphics.Outline EXP EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # MethodDeclaration
android.view.View$getWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Rect$intersect EXP <type>android.graphics.Rect <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.inputmethod.InputMethodManager$getMethod <type>java.lang.reflect.Method this "showSoftInputUnchecked" int android.os.ResultReceiver # begin end TryBlock
<END>
<S2>
<S1>
android.view.View$getContext EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getWindowToken EXP <type>android.view.View # MethodDeclaration
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin ConstructorDeclaration
android.graphics.Paint$setShader @0 <type>android.graphics.Paint <type>android.graphics.BitmapShader # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$width EXP <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>int <type>int EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # Block
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.0f 0.7f # Block
android.graphics.RadialGradient$setLocalMatrix @0 <type>android.graphics.RadialGradient <type>android.graphics.Matrix # Block
android.graphics.Paint$setShader @0 <type>android.graphics.Paint EXP # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin MethodDeclaration
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.quote_fragment <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.xxmassdeveloper.mpchartexample.R.layout.frag_simple_scatter <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.mikephil.charting.charts.ScatterChart <type>android.view.View com.xxmassdeveloper.mpchartexample.R.id.scatterChart1 # MethodDeclaration
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Light.ttf" # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$acquire <type>LockedResource <type>android.support.v4.util.Pools.Pool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.Pools.Pool$release @0 <type>android.support.v4.util.Pools.Pool this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_list_gplaycard_undo <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_secondaryTitle # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_myapps_main_inner_ratingBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # begin Block
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # Block
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # Block
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar <type>float # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "VACUUM" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteDatabase <type>String null null null null null null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.DatabaseUtils$dumpCursorToString <type>String this <type>android.database.Cursor # begin end TryBlock
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View R.id.image # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin MethodDeclaration
android.net.Uri$encode EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin MethodDeclaration
android.widget.GridView$setNumColumns @0 <type>android.widget.GridView <type>int # MethodDeclaration
android.widget.GridView$setAdapter @0 <type>android.widget.GridView <type>MyAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getWindowToken EXP <type>android.widget.EditText # begin MethodDeclaration
android.view.inputmethod.InputMethodManager$hideSoftInputFromWindow @0 <type>android.view.inputmethod.InputMethodManager EXP 0 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getSystem EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$evictAll @0 <type>android.support.v4.util.LruCache # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$put @0 <type>android.support.v4.util.LruCache EXP <type>Model # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$get EXP <type>android.support.v4.util.LruCache EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.LruCache$remove @0 <type>android.support.v4.util.LruCache EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this EXP R.drawable.b128 # begin MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>BubbleView # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createScaledBitmap this.mBitmap this bitmap <type>int <type>int false # begin ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.view.SurfaceHolder$addCallback @0 <type>android.view.SurfaceHolder this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.DKGRAY # begin MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float EXP EXP # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>float <type>float <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$lockCanvas <type>android.graphics.Canvas <type>android.view.SurfaceHolder # begin end Block
<END>
<S2>
<S1>
android.view.SurfaceHolder$unlockCanvasAndPost @0 <type>android.view.SurfaceHolder <type>android.graphics.Canvas # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArrayList @0 <type>android.os.Bundle <type>String <type>java.util.ArrayList # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getFilesDir EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get <type>android.accounts.AccountManager this <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this LOG_TAG EXP # begin Block
android.util.Log$i @0 this LOG_TAG EXP # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this LOG_TAG "Can't select by touch. No data set." # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setColor @0 <type>android.text.TextPaint android.graphics.Color.BLUE # begin ConstructorDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>StringBuilder 0 EXP # begin end MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>StringBuilder 0 EXP <type>int <type>int <type>android.text.TextPaint # begin MethodDeclaration
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>StringBuilder 0 EXP # end MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>StringBuilder 0 EXP <type>int <type>int <type>android.text.TextPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>StringBuilder 0 EXP <type>int <type>int <type>android.text.TextPaint # begin Block
android.text.TextPaint$measureText <type>int <type>android.text.TextPaint <type>StringBuilder 0 EXP # end Block
<END>
<S2>
<S1>
android.text.TextPaint$getTextSize EXP <type>android.text.TextPaint # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$getTextSize EXP <type>android.text.TextPaint # begin end Block
<END>
<S2>
<S1>
android.util.TypedValue$applyDimension EXP this android.util.TypedValue.COMPLEX_UNIT_DIP <type>int <type>android.util.DisplayMetrics # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView R.string.split_content # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollview_noheader <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # MethodDeclaration
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.container # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth <type>float <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin MethodDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById this.icon <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_icon # begin ConstructorDeclaration
android.view.View$findViewById this.badge <type>android.view.View com.mikepenz.materialdrawer.R.id.material_drawer_badge # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin Block
android.os.Looper$myLooper EXP this # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin Block
android.os.Looper$myLooper EXP this # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP <type>Throwable # begin Block
android.util.Log$e @0 this <type>String EXP FIELD # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getInt EXP <type>android.content.SharedPreferences <type>String 0 # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin Block
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor <type>String <type>int # Block
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end Block
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin MethodDeclaration
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor <type>String 0 # MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.download_item null # begin Block
android.view.View$setTag @0 <type>android.view.View <type>DownloadItemViewHolder # end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>DownloadItemViewHolder <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.stop # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.stop # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.stop # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.stop # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.resume # begin end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context R.string.retry # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 140 234 255 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setFastScrollEnabled @0 <type>android.widget.ListView true # begin MethodDeclaration
android.widget.ListView$setDividerHeight @0 <type>android.widget.ListView 0 # MethodDeclaration
android.app.Activity$getLayoutInflater EXP <type>android.app.Activity # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.donnfelker.android.bootstrap.core.CheckIn <type>android.widget.ListView <type>int # begin MethodDeclaration
android.net.Uri$parse EXP this <type>String # MethodDeclaration
android.content.Intent$createChooser EXP this EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.PowerManager.WakeLock$isHeld EXP <type>android.os.PowerManager.WakeLock # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.PowerManager.WakeLock$isHeld EXP <type>android.os.PowerManager.WakeLock # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_listviewanimations <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getThemedContext EXP <type>android.app.ActionBar # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter android.R.layout.simple_spinner_dropdown_item # MethodDeclaration
android.app.ActionBar$setListNavigationCallbacks @0 <type>android.app.ActionBar <type>android.widget.ArrayAdapter this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_googleknow_sub_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "To see posts from friends and family,add them." # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_know_name # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_know_common # MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_know_image # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler <type>Runnable 50 # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_SP <type>int # MethodDeclaration
android.widget.TextView$setTypeface @0 <type>android.widget.TextView android.graphics.Typeface.DEFAULT_BOLD # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setAllCaps @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.PagerAdapter$getPageTitle EXP <type>android.support.v4.view.PagerAdapter <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>android.view.View.OnClickListener # Block
android.util.SparseArray$get <type>String <type>android.util.SparseArray <type>int null # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getClass EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>LinearListView <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.view.View <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutResource @0 <type>android.view.View EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.view.View <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutResource @0 <type>android.view.View EXP # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # Block
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # end Block
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_out # begin Block
android.view.View$startAnimation @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater EXP <type>android.view.ViewGroup false # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnTouchListener @0 <type>android.view.View <type>SwipeDismissListItemViewTouchListener # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.basgeekball.screenshotsnanny.demo.R.menu.main <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception unstarring gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.5f 1.5f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 2.0f 2.0f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix 10 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.5f 1.5f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix 10 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.5f 1.5f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 1.5f 1.5f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix EXP 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 2.0f 2.0f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix 10 10 # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 2.0f 2.0f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix 10 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setScale @0 <type>android.graphics.Matrix 2.0f 2.0f # begin MethodDeclaration
android.graphics.Matrix$postTranslate @0 <type>android.graphics.Matrix 10 EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#E0E0E0" # begin ClassDeclaration
android.graphics.Color$parseColor <type>int this "#888888" # end ClassDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 2 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 3 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 4 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 5 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 6 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 7 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 8 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 9 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 10 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_BASE EXP # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_REPOSITORY <type>com.alorma.github.sdk.bean.dto.response.Repo # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onRequestContinued @0 <type>android.accounts.AccountAuthenticatorResponse # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onResult @0 <type>android.accounts.AccountAuthenticatorResponse <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onError @0 <type>android.accounts.AccountAuthenticatorResponse android.accounts.AccountManager.ERROR_CODE_CANCELED "canceled" # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onRequestContinued @0 <type>android.accounts.AccountAuthenticatorResponse # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onResult @0 <type>android.accounts.AccountAuthenticatorResponse <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.accounts.AccountAuthenticatorResponse$onError @0 <type>android.accounts.AccountAuthenticatorResponse android.accounts.AccountManager.ERROR_CODE_CANCELED "canceled" # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "bitmapInfo" FIELD # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "thumb" <type>int # MethodDeclaration
android.app.ActivityOptions$makeSceneTransitionAnimation EXP this LollipopTransition.this <type>android.widget.ImageView "photo_hero" # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb <type>int this 215 215 215 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb mHighLightColor this 0 0 0 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_header <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenu EXP <type>android.widget.PopupMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.PopupMenu$getMenu EXP <type>android.widget.PopupMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Other Button" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click on Other Button" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater in.srain.cube.views.ptr.demo.R.layout.fragment_materail_style null # begin MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.image.CubeImageView <type>android.view.View in.srain.cube.views.ptr.demo.R.id.material_style_image_view # MethodDeclaration
android.view.View$findViewById <type>in.srain.cube.views.ptr.PtrFrameLayout <type>android.view.View in.srain.cube.views.ptr.demo.R.id.material_style_ptr_frame # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.TransitionDrawable$startTransition @0 <type>android.graphics.drawable.TransitionDrawable 200 # begin end Block
<END>
<S2>
<S1>
android.os.SystemClock$elapsedRealtime <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this <type>java.io.File # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this <type>java.io.File # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this android.os.Process.THREAD_PRIORITY_BACKGROUND # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$obtainMessage <type>android.os.Message <type>android.os.Handler # begin end TryBlock
<END>
<S2>
<S1>
android.os.Handler$sendMessage @0 <type>android.os.Handler <type>android.os.Message # begin end Block
<END>
<S2>
<S1>
android.os.Message$recycle @0 <type>android.os.Message # begin end Block
<END>
<S2>
<S1>
android.content.Context$getApplicationContext this.context <type>android.content.Context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.databinding.DataBindingUtil$setContentView <type>com.lgvalle.material_animations.databinding.ActivitySharedelementBinding this this R.layout.activity_sharedelement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.transition.Slide$setDuration @0 <type>android.transition.Slide EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$newInstance <type>android.net.http.AndroidHttpClient this "" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$execute EXP <type>android.net.http.AndroidHttpClient <type>org.apache.http.client.methods.HttpGet <type>JSONResponseHandler # begin end TryBlock
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$close @0 <type>android.net.http.AndroidHttpClient # begin end IfTrue
<END>
<S2>
<S1>
android.content.SharedPreferences$edit <type>android.content.SharedPreferences.Editor <type>android.content.SharedPreferences # begin end MethodDeclaration
android.content.SharedPreferences.Editor$commit @0 <type>android.content.SharedPreferences.Editor # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putBoolean @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putInt @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putLong @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putFloat @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putString @0 <type>android.content.SharedPreferences.Editor <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.content.SharedPreferences.Editor$putStringSet @0 <type>android.content.SharedPreferences.Editor <type>String <type>java.util.HashSet # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationInfo EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSharedPreferences EXP <type>android.content.Context <type>String android.content.Context.MODE_MULTI_PROCESS # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$startActivityForResult @0 <type>android.app.Activity EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 4 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 5 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 6 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 7 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 8 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 9 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 10 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 11 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 12 <type>Integer # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseIntArray$put @0 <type>android.util.SparseIntArray <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent "pos" <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray <type>int EXP # begin MethodDeclaration
android.graphics.drawable.ColorDrawable$setAlpha @0 <type>android.graphics.drawable.ColorDrawable 128 # MethodDeclaration
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_INSIDE # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView <type>int # end MethodDeclaration
android.widget.ImageView$setOnClickListener @0 <type>android.widget.ImageView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$postDelayed @0 <type>android.os.Handler EXP 2000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment EXP # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.donnfelker.android.bootstrap.R.string.page_news # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.donnfelker.android.bootstrap.R.string.page_users # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.donnfelker.android.bootstrap.R.string.page_checkins # begin end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$query EXP <type>android.database.sqlite.SQLiteDatabase <type>boolean <type>String <type>String EXP EXP <type>String <type>String <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$update EXP <type>android.database.sqlite.SQLiteDatabase <type>String <type>android.content.ContentValues EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete EXP <type>android.database.sqlite.SQLiteDatabase <type>String EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Process$setThreadPriority @0 this <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Hello World!" android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this EXP "Doing some background work." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$setOnEditorActionListener @0 <type>android.widget.EditText EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$getText EXP <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView null # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 2000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.RelativeLayout <type>android.view.View com.afollestad.materialcamera.R.id.rootFrame # begin MethodDeclaration
android.widget.RelativeLayout$setOnClickListener @0 <type>android.widget.RelativeLayout this # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$lock @0 <type>android.hardware.Camera # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.Camera$cancelAutoFocus @0 <type>android.hardware.Camera # begin end Block
android.hardware.Camera$autoFocus @0 <type>android.hardware.Camera EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Unable to auto-focus!" android.widget.Toast.LENGTH_SHORT # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin TryBlock
android.hardware.Camera$open <type>android.hardware.Camera this EXP # TryBlock
android.hardware.Camera$getParameters <type>android.hardware.Camera.Parameters <type>android.hardware.Camera # TryBlock
android.hardware.Camera.Parameters$getSupportedVideoSizes <type>java.util.List <type>android.hardware.Camera.Parameters # end TryBlock
android.hardware.Camera.Parameters$getSupportedPreviewSizes EXP <type>android.hardware.Camera.Parameters # begin TryBlock
android.hardware.Camera.Parameters$setPreviewSize @0 <type>android.hardware.Camera.Parameters FIELD FIELD # end TryBlock
android.hardware.Camera$setParameters @0 <type>android.hardware.Camera <type>android.hardware.Camera.Parameters # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$getNumberOfCameras <type>int this # begin end Block
<END>
<S2>
<S1>
android.hardware.Camera$getCameraInfo @0 this <type>int <type>android.hardware.Camera.CameraInfo # begin end Block
<END>
<S2>
<S1>
android.hardware.Camera.Parameters$getSupportedPreviewSizes <type>java.util.List <type>android.hardware.Camera.Parameters # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.Camera.Parameters$setRecordingHint @0 <type>android.hardware.Camera.Parameters true # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.Camera$getCameraInfo @0 this EXP <type>android.hardware.Camera.CameraInfo # begin MethodDeclaration
android.util.Log$d @0 this "CameraFragment" EXP # end MethodDeclaration
android.hardware.Camera.Parameters$setRotation @0 <type>android.hardware.Camera.Parameters <type>int # begin MethodDeclaration
android.hardware.Camera$setDisplayOrientation @0 <type>android.hardware.Camera <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindowManager EXP <type>android.app.Activity # begin end MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>CameraPreview 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$removeViewAt @0 <type>android.widget.RelativeLayout 0 # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.Camera$release @0 <type>android.hardware.Camera # begin end Block
<END>
<S2>
<S1>
android.hardware.Camera$lock @0 <type>android.hardware.Camera # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$getParameters EXP <type>android.hardware.Camera # begin TryBlock
android.hardware.Camera$unlock @0 <type>android.hardware.Camera # TryBlock
android.media.CamcorderProfile$get EXP this EXP <type>int # TryBlock
android.net.Uri$fromFile <type>android.net.Uri this EXP # TryBlock
android.net.Uri$toString mOutputUri <type>android.net.Uri # TryBlock
android.net.Uri$getPath EXP <type>android.net.Uri # end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$lock @0 <type>android.hardware.Camera # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$lock @0 <type>android.hardware.Camera # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView null # begin MethodDeclaration
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>IonDrawable # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$getDrawable <type>android.graphics.drawable.Drawable <type>android.widget.ImageView # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.FIT_CENTER # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_INSIDE # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.FIT_XY # begin end SwitchCase
<END>
<S2>
<S1>
android.app.Application$getPackageManager EXP <type>android.app.Application # begin TryBlock
android.app.Application$getPackageName EXP <type>android.app.Application # end TryBlock
<END>
<S2>
<S1>
android.app.Application$getContentResolver <type>android.content.ContentResolver <type>android.app.Application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.provider.Settings.Secure$getString <type>String this <type>android.content.ContentResolver android.provider.Settings.Secure.ANDROID_ID # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception deleting comment on issue" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$create <type>android.media.MediaPlayer this this R.raw.badnews # begin end MethodDeclaration
android.app.PendingIntent$getActivity <type>android.app.PendingIntent this this 0 <type>android.content.Intent 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.MediaPlayer$setLooping @0 <type>android.media.MediaPlayer false # begin end Block
android.media.MediaPlayer$setOnCompletionListener @0 <type>android.media.MediaPlayer EXP # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$seekTo @0 <type>android.media.MediaPlayer 0 # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$start @0 <type>android.media.MediaPlayer # begin end Block
<END>
<S2>
<S1>
android.media.MediaPlayer$stop @0 <type>android.media.MediaPlayer # begin Block
android.media.MediaPlayer$release @0 <type>android.media.MediaPlayer # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # begin MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout EXP # MethodDeclaration
android.widget.LinearLayout$setId @0 <type>android.widget.LinearLayout <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Message$toString EXP <type>android.os.Message # begin SwitchCase
android.util.Log$e @0 this <type>String EXP # end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle EXP <type>android.app.AlertDialog.Builder R.string.error_dialog_title # begin MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$getBitmap <type>android.graphics.Bitmap <type>android.graphics.drawable.BitmapDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.rps_fragment <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.text_rock # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.text_paper # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.text_scissors # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.shoot # MethodDeclaration
android.view.View$findViewById <type>ImageView <type>android.view.View R.id.player_choice # MethodDeclaration
android.view.View$findViewById <type>ImageView <type>android.view.View R.id.computer_choice # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.who_won # MethodDeclaration
android.view.View$findViewById <type>android.view.ViewGroup <type>android.view.View R.id.shoot_display_group # MethodDeclaration
android.view.View$findViewById <type>android.view.ViewGroup <type>android.view.View R.id.result_display_group # MethodDeclaration
android.view.View$findViewById <type>android.view.ViewGroup <type>android.view.View R.id.player_choice_display_group # MethodDeclaration
android.view.View$findViewById <type>Button <type>android.view.View R.id.again_button # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.player_rock # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.player_paper # MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.player_scissors # MethodDeclaration
android.view.View$findViewById <type>ImageButton <type>android.view.View R.id.facebook_button # MethodDeclaration
android.view.View$findViewById <type>TextView <type>android.view.View R.id.stats # MethodDeclaration
android.view.View$findViewById <type>ViewFlipper <type>android.view.View R.id.rps_flipper # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # begin Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String # Block
android.os.Bundle$getSerializable <type>RpsState <type>android.os.Bundle <type>String # Block
android.os.Bundle$getSerializable <type>RpsResult <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # Block
android.os.Bundle$getBoolean <type>boolean <type>android.os.Bundle <type>String # end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Canceled" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Success!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Success!" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Canceled" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # begin MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putInt @0 <type>android.os.Bundle <type>String <type>int # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>RpsState # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle <type>String <type>RpsResult # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String <type>boolean # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EmbeddedDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "material-drawer" EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.view.MotionEvent$getAction <type>int <type>android.view.MotionEvent # begin end MethodDeclaration
android.view.MotionEvent$findPointerIndex <type>int <type>android.view.MotionEvent EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent 0 # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getPointerId <type>int <type>android.view.MotionEvent <type>int # begin Block
android.view.MotionEvent$getX mLastTouchX <type>android.view.MotionEvent <type>int # Block
android.view.MotionEvent$getY mLastTouchY <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 <type>int <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte 0 <type>int <type>android.graphics.BitmapFactory.Options # begin end TryBlock
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this AdvancedActivity.this EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.main <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this de.greenrobot.event.EventBus.TAG EXP # begin end Block
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater com.nostra13.universalimageloader.sample.R.menu.main_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.IntentFilter$setPriority @0 <type>android.content.IntentFilter 3 # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this <type>android.content.Context EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.ViewGroup <type>android.view.View # begin MethodDeclaration
android.view.ViewGroup$getWidth EXP <type>android.view.ViewGroup # MethodDeclaration
android.view.View$getLeft EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$obtainNoHistory <type>android.view.MotionEvent this <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent <type>float <type>float # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getScrollX EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # Block
android.view.View$getScrollY EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent android.view.MotionEvent.ACTION_DOWN # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$dispatchTouchEvent @0 <type>android.view.ViewGroup <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>SampleContactsAdapter # begin MethodDeclaration
android.widget.ListView$setOnScrollListener @0 <type>android.widget.ListView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.sync.TriggerSyncReceiver.EXTRA_USER_DATA_SYNC_ONLY true # begin MethodDeclaration
android.app.PendingIntent$getBroadcast EXP this <type>android.content.Context 0 <type>android.content.Intent android.app.PendingIntent.FLAG_CANCEL_CURRENT # MethodDeclaration
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.ALARM_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$isEnabled EXP <type>android.view.View # begin MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # MethodDeclaration
android.view.View$isEnabled EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.Scrollable <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabScrollViewFragment.ARG_SCROLL_Y <type>int # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabListViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle ViewPagerTabRecyclerViewFragment.ARG_INITIAL_POSITION 1 # begin Block
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray <type>int true # begin ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "DoubleClick" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setLayerType @0 <type>android.widget.ImageView android.widget.ImageView.LAYER_TYPE_NONE null # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setLayerType @0 <type>android.widget.ImageView android.widget.ImageView.LAYER_TYPE_SOFTWARE null # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint android.graphics.Color.BLACK # begin MethodDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.RIGHT # MethodDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Color$rgb EXP this 247 189 51 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.CENTER # MethodDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "" "Chart.init()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Cannot set data for chart. Provided data object is null." # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Data is set." # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$ascent EXP <type>android.graphics.Paint # begin Block
android.graphics.Paint$descent EXP <type>android.graphics.Paint # Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String FIELD FIELD <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint <type>android.graphics.Typeface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent true # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewParent$requestDisallowInterceptTouchEvent @0 <type>android.view.ViewParent false # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.RGB_565 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.WHITE # begin end IfFalse
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory EXP this # begin TryBlock
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap android.graphics.Bitmap.CompressFormat.PNG 40 <type>java.io.OutputStream # end TryBlock
<END>
<S2>
<S1>
android.os.Environment$getExternalStorageDirectory <type>java.io.File this # begin end MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.TITLE <type>String # begin MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.DISPLAY_NAME <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.DATE_ADDED <type>long # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.MIME_TYPE <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.DESCRIPTION <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.ORIENTATION 0 # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.DATA <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues android.provider.MediaStore.Images.Media.SIZE <type>long # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$compress @0 <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.FileOutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "OnSizeChanged()" # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Cannot enable/disable hardware acceleration for devices below API level 11." # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.CollectionView_internalPadding 0 # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray com.google.samples.apps.iosched.R.styleable.CollectionView_contentTopClearance 0 # Block
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$animate EXP this this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTag EXP <type>android.view.View # end MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Call to makeRow without an adapter installed" # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.widget.LinearLayout <type>android.view.ViewGroup 0 # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildCount EXP <type>android.widget.LinearLayout # begin Block
android.widget.LinearLayout$removeViews @0 <type>android.widget.LinearLayout EXP EXP # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.widget.LinearLayout <type>android.view.ViewGroup 0 # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.VERTICAL # begin Block
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # Block
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.widget.LinearLayout # end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt EXP <type>android.widget.LinearLayout <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeViewAt @0 <type>android.widget.LinearLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.HORIZONTAL # begin MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt <type>android.view.View <type>android.widget.LinearLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeViewAt @0 <type>android.widget.LinearLayout <type>int # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP EXP # end Block
<END>
<S2>
<S1>
android.text.format.DateUtils$getRelativeTimeSpanString EXP this EXP <type>long android.text.format.DateUtils.MINUTE_IN_MILLIS EXP # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$getAlpha EXP <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getBoolean <type>boolean <type>android.content.res.Resources R.bool.default_underline_indicator_fades # begin ConstructorDeclaration
android.content.res.Resources$getInteger <type>int <type>android.content.res.Resources R.integer.default_underline_indicator_fade_delay # ConstructorDeclaration
android.content.res.Resources$getInteger <type>int <type>android.content.res.Resources R.integer.default_underline_indicator_fade_length # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_underline_indicator_selected_color # ConstructorDeclaration
android.content.res.TypedArray$getBoolean EXP <type>android.content.res.TypedArray R.styleable.UnderlinePageIndicator_fades <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getColor EXP <type>android.content.res.TypedArray R.styleable.UnderlinePageIndicator_selectedColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.UnderlinePageIndicator_fadeDelay <type>int # ConstructorDeclaration
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.UnderlinePageIndicator_fadeLength <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.UnderlinePageIndicator_android_background # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # ConstructorDeclaration
android.support.v4.view.ViewConfigurationCompat$getScaledPagingTouchSlop <type>int this <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float <type>float <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # begin SwitchCase
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$fakeDragBy @0 <type>android.support.v4.view.ViewPager <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$endFakeDrag @0 <type>android.support.v4.view.ViewPager # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end SwitchCase
android.support.v4.view.MotionEventCompat$findPointerIndex EXP this <type>android.view.MotionEvent <type>int # begin SwitchCase
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent EXP # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
android.database.sqlite.SQLiteQueryBuilder$query <type>android.database.Cursor <type>android.database.sqlite.SQLiteQueryBuilder <type>android.database.sqlite.SQLiteDatabase <type>String <type>String <type>String <type>String <type>String <type>String # begin MethodDeclaration
android.database.Cursor$setNotificationUri @0 <type>android.database.Cursor EXP <type>android.net.Uri # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder CardCursorSQLiteOpenHelper.Tables.CardCursor # begin SwitchCase
android.net.Uri$getPathSegments EXP <type>android.net.Uri # SwitchCase
android.database.sqlite.SQLiteQueryBuilder$appendWhere @0 <type>android.database.sqlite.SQLiteQueryBuilder EXP # end SwitchCase
<END>
<S2>
<S1>
android.database.sqlite.SQLiteQueryBuilder$setTables @0 <type>android.database.sqlite.SQLiteQueryBuilder CardCursorSQLiteOpenHelper.Tables.CardCursor # begin end SwitchCase
<END>
<S2>
<S1>
android.content.ContentValues$toString EXP <type>android.content.ContentValues # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$insert <type>long <type>android.database.sqlite.SQLiteDatabase CardCursorSQLiteOpenHelper.Tables.CardCursor <type>String <type>android.content.ContentValues # begin end Block
<END>
<S2>
<S1>
android.content.ContentUris$withAppendedId <type>android.net.Uri this <type>android.net.Uri <type>long # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase CardCursorSQLiteOpenHelper.Tables.CardCursor <type>String <type>String # begin end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin SwitchCase
android.text.TextUtils$isEmpty EXP this <type>String # SwitchCase
android.database.sqlite.SQLiteDatabase$delete <type>int <type>android.database.sqlite.SQLiteDatabase CardCursorSQLiteOpenHelper.Tables.CardCursor <type>String <type>String # end SwitchCase
<END>
<S2>
<S1>
android.content.ContentValues$toString EXP <type>android.content.ContentValues # begin MethodDeclaration
android.util.Log$d @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPathSegments EXP <type>android.net.Uri # begin SwitchCase
android.text.TextUtils$isEmpty EXP this <type>String # SwitchCase
android.database.sqlite.SQLiteDatabase$update <type>int <type>android.database.sqlite.SQLiteDatabase CardCursorSQLiteOpenHelper.Tables.CardCursor <type>android.content.ContentValues <type>String <type>String # end SwitchCase
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin ConstructorDeclaration
android.content.Context$getAssets <type>android.content.res.AssetManager <type>android.content.Context # ConstructorDeclaration
android.content.Context$getResources EXP <type>android.content.Context # end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this "ION" "Cached bitmap was recycled." # begin Block
android.util.Log$w @0 this "ION" "This may happen if passing Ion bitmaps directly to notification builders or remote media clients." # Block
android.util.Log$w @0 this "ION" "Create a deep copy before doing this." # end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "IonBitmapCache" EXP # begin MethodDeclaration
android.util.Log$i @0 this "IonBitmapCache" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFile @0 this EXP <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this <type>byte <type>int <type>int <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource @0 this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream @0 this <type>java.io.InputStream null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$postRotate @0 <type>android.graphics.Matrix <type>int # begin MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap EXP this <type>android.graphics.Bitmap 0 0 EXP EXP <type>android.graphics.Matrix true # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray <type>android.graphics.Bitmap this <type>byte <type>int <type>int <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapRegionDecoder$decodeRegion EXP <type>android.graphics.BitmapRegionDecoder <type>android.graphics.Rect <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this <type>android.content.res.Resources <type>int <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource <type>java.io.InputStream <type>android.content.res.Resources <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeStream <type>android.graphics.Bitmap this <type>MarkableInputStream null <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeFile <type>android.graphics.Bitmap this EXP <type>android.graphics.BitmapFactory.Options # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.ACTIVITY_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int com.nostra13.universalimageloader.core.ImageLoader.TAG <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString <type>String this <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$getBitmap EXP <type>android.graphics.drawable.BitmapDrawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # begin Block
android.graphics.Paint$getAlpha EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin Block
android.graphics.RectF$set @0 <type>android.graphics.RectF EXP # end Block
<END>
<S2>
<S1>
android.graphics.Matrix$set @0 <type>android.graphics.Matrix <type>android.graphics.Matrix # begin end Block
<END>
<S2>
<S1>
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # begin Block
android.graphics.Matrix$reset @0 <type>android.graphics.Matrix # end Block
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>android.graphics.RectF # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin Block
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # end Block
android.graphics.RectF$inset @0 <type>android.graphics.RectF EXP EXP # begin Block
android.graphics.Path$setFillType @0 <type>android.graphics.Path android.graphics.Path.FillType.WINDING # end Block
<END>
<S2>
<S1>
android.graphics.RectF$centerX EXP <type>android.graphics.RectF # begin Block
android.graphics.RectF$centerY EXP <type>android.graphics.RectF # Block
android.graphics.RectF$width EXP <type>android.graphics.RectF # Block
android.graphics.RectF$height EXP <type>android.graphics.RectF # Block
android.graphics.Path$addCircle @0 <type>android.graphics.Path EXP EXP EXP android.graphics.Path.Direction.CW # end Block
<END>
<S2>
<S1>
android.graphics.Path$addRoundRect @0 <type>android.graphics.Path <type>android.graphics.RectF <type>float android.graphics.Path.Direction.CW # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setShader @0 <type>android.graphics.Paint EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$getShader EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap EXP EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById mActionView <type>android.view.View mActionId # begin end Block
<END>
<S2>
<S1>
android.widget.EditText$setHint @0 <type>android.widget.EditText "Username" # begin MethodDeclaration
android.widget.EditText$setHint @0 <type>android.widget.EditText "Password" # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText "user" # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText "passwd2" # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin MethodDeclaration
android.net.Uri$getHost EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPort EXP <type>android.net.Uri # MethodDeclaration
android.net.Uri$getPort EXP <type>android.net.Uri # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end Block
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.activity_square <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMode_background # begin ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMode_titleTextStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMode_subtitleTextStyle 0 # ConstructorDeclaration
android.content.res.TypedArray$getLayoutDimension mContentHeight <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMode_height 0 # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionMode_backgroundSplit # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup mMenuView # begin end IfTrue
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup mMenuView # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>CharSequence # MethodDeclaration
android.text.TextUtils$isEmpty EXP this <type>CharSequence # MethodDeclaration
android.widget.TextView$setVisibility @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.LinearLayout$setVisibility @0 <type>android.widget.LinearLayout EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # begin Block
android.view.LayoutInflater$inflate @0 <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__action_bar_title_item this # Block
android.widget.LinearLayout$findViewById <type>android.widget.TextView <type>android.widget.LinearLayout com.actionbarsherlock.R.id.abs__action_bar_title # Block
android.widget.LinearLayout$findViewById <type>android.widget.TextView <type>android.widget.LinearLayout com.actionbarsherlock.R.id.abs__action_bar_subtitle # end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView mContext <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setTextAppearance @0 <type>android.widget.TextView mContext <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this mContext # begin Block
android.view.LayoutInflater$inflate <type>com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout <type>android.view.LayoutInflater com.actionbarsherlock.R.layout.abs__action_mode_close_item this false # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # begin Block
android.view.View$measure @0 <type>android.view.View EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.accessibility.AccessibilityEvent$setClassName @0 <type>android.view.accessibility.AccessibilityEvent EXP # begin Block
android.view.accessibility.AccessibilityEvent$setPackageName @0 <type>android.view.accessibility.AccessibilityEvent EXP # Block
android.view.accessibility.AccessibilityEvent$setContentDescription @0 <type>android.view.accessibility.AccessibilityEvent <type>CharSequence # end Block
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray EXP this EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeByteArray @0 this EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.Toolbar$inflateMenu @0 <type>android.support.v7.widget.Toolbar com.google.samples.apps.iosched.R.menu.explore_io_menu # begin MethodDeclaration
android.support.v7.widget.Toolbar$setOnMenuItemClickListener @0 <type>android.support.v7.widget.Toolbar this # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTag <type>Object <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag <type>com.google.samples.apps.iosched.explore.data.SessionData <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this com.google.samples.apps.iosched.R.string.unknown_error android.widget.Toast.LENGTH_LONG # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View android.R.id.button1 # MethodDeclaration
android.view.View$getTag EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent EXP # begin Block
android.content.Intent$putExtra @0 <type>android.content.Intent ExploreSessionsActivity.EXTRA_SHOW_LIVE_STREAM_SESSIONS true # end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent ExploreSessionsActivity.EXTRA_FILTER_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String FIELD # begin end IfTrue
<END>
<S2>
<S1>
android.util.Property$set @0 <type>android.util.Property EXP <type>V # begin end Block
<END>
<S2>
<S1>
android.util.Property$set @0 <type>android.util.Property EXP <type>V # begin end Block
<END>
<S2>
<S1>
android.util.Property$set @0 <type>android.util.Property <type>T <type>V # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$findViewById EXP <type>android.app.Dialog <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception following user" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this "" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # begin ConstructorDeclaration
android.graphics.Paint$setTextAlign @0 <type>android.graphics.Paint android.graphics.Paint.Align.LEFT # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3f # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint <type>android.graphics.Typeface # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint EXP # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint <type>android.graphics.Typeface # begin end IfTrue
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>float EXP EXP EXP <type>android.graphics.Paint # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas <type>float <type>float EXP <type>float <type>android.graphics.Paint # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$offsetLocation @0 <type>android.view.MotionEvent EXP 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$getAccountsByType EXP <type>android.accounts.AccountManager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId EXP <type>android.view.MenuItem # begin MethodDeclaration
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton null # begin Block
android.widget.CompoundButton$setChecked @0 <type>android.widget.CompoundButton EXP # Block
android.widget.CompoundButton$setOnCheckedChangeListener @0 <type>android.widget.CompoundButton <type>android.widget.CompoundButton.OnCheckedChangeListener # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this EXP EXP # begin MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager <type>NavigationAdapter # MethodDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this this # MethodDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getView <type>android.view.View <type>android.support.v4.app.Fragment # begin end MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View R.id.scroll # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.UI_MODE_SERVICE # begin MethodDeclaration
android.app.UiModeManager$getCurrentModeType EXP <type>android.app.UiModeManager # MethodDeclaration
android.os.Environment$getExternalStorageDirectory EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.HorizontalScrollView$setId @0 <type>android.widget.HorizontalScrollView R.id.scrollview # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin MethodDeclaration
android.content.ContentResolver$query <type>android.database.Cursor <type>android.content.ContentResolver <type>android.net.Uri null EXP null null # MethodDeclaration
android.database.Cursor$getCount EXP <type>android.database.Cursor # end MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SYNCED 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SESSION_ID # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.SESSION_RATING # begin Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_RELEVANCE # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_CONTENT # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.ANSWER_SPEAKER # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # Block
android.database.Cursor$getColumnIndex EXP <type>android.database.Cursor com.google.samples.apps.iosched.provider.ScheduleContract.Feedback.COMMENTS # Block
android.database.Cursor$getString <type>String <type>android.database.Cursor EXP # end Block
<END>
<S2>
<S1>
android.database.Cursor$close @0 <type>android.database.Cursor # begin end Finally
<END>
<S2>
<S1>
android.util.Log$isLoggable EXP this <type>String <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$getStackTraceString EXP this <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println EXP this <type>int <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w EXP this <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e EXP this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.support.v4.widget.SimpleCursorAdapter # begin MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView this # MethodDeclaration
android.support.v4.content.ContextCompat$getDrawable EXP this this com.google.samples.apps.iosched.R.drawable.ic_up # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$wrap <type>android.graphics.drawable.Drawable this EXP # MethodDeclaration
android.support.v4.graphics.drawable.DrawableCompat$setTint @0 this <type>android.graphics.drawable.Drawable EXP # MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationIcon @0 <type>android.support.v7.widget.Toolbar <type>android.graphics.drawable.Drawable # end MethodDeclaration
android.support.v7.widget.Toolbar$setNavigationOnClickListener @0 <type>android.support.v7.widget.Toolbar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.SearchView$setQuery @0 <type>android.support.v7.widget.SearchView <type>String false # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent android.app.SearchManager.QUERY # begin end Block
<END>
<S2>
<S1>
android.support.v7.widget.SearchView$setQuery @0 <type>android.support.v7.widget.SearchView <type>String false # begin end Block
<END>
<S2>
<S1>
android.app.SearchManager$getSearchableInfo EXP <type>android.app.SearchManager EXP # begin MethodDeclaration
android.support.v7.widget.SearchView$setSearchableInfo @0 <type>android.support.v7.widget.SearchView EXP # MethodDeclaration
android.support.v7.widget.SearchView$setIconified @0 <type>android.support.v7.widget.SearchView false # MethodDeclaration
android.support.v7.widget.SearchView$setQueryHint @0 <type>android.support.v7.widget.SearchView EXP # end MethodDeclaration
android.support.v7.widget.SearchView$setOnQueryTextListener @0 <type>android.support.v7.widget.SearchView EXP # begin end MethodDeclaration
android.support.v7.widget.SearchView$setOnCloseListener @0 <type>android.support.v7.widget.SearchView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.SearchView$clearFocus @0 <type>android.support.v7.widget.SearchView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.SearchView$setQuery @0 <type>android.support.v7.widget.SearchView <type>String false # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.ActivityCompat$finishAfterTransition @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this this android.R.interpolator.fast_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getViewTreeObserver EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getParent EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.View EXP EXP 0f <type>int # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator 250L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.ViewAnimationUtils$createCircularReveal <type>android.animation.Animator this <type>android.view.View EXP EXP <type>int 0f # MethodDeclaration
android.animation.Animator$setDuration @0 <type>android.animation.Animator 200L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.Animator$setInterpolator @0 <type>android.animation.Animator EXP # end MethodDeclaration
android.animation.Animator$addListener @0 <type>android.animation.Animator EXP # begin MethodDeclaration
android.animation.Animator$start @0 <type>android.animation.Animator # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this SearchActivity.this android.R.interpolator.fast_out_slow_in # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.INVISIBLE # begin MethodDeclaration
android.support.v4.app.ActivityCompat$finishAfterTransition @0 this SearchActivity.this # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$swapCursor @0 <type>android.support.v4.widget.SimpleCursorAdapter <type>android.database.Cursor # begin MethodDeclaration
android.database.Cursor$getCount EXP <type>android.database.Cursor # MethodDeclaration
android.widget.ListView$setVisibility @0 <type>android.widget.ListView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SimpleCursorAdapter$getCursor <type>android.database.Cursor <type>android.support.v4.widget.SimpleCursorAdapter # begin MethodDeclaration
android.database.Cursor$moveToPosition @0 <type>android.database.Cursor <type>int # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor SearchTopicsSessionsQuery.IS_TOPIC_TAG # MethodDeclaration
android.database.Cursor$getString <type>String <type>android.database.Cursor SearchTopicsSessionsQuery.TAG_OR_SESSION_ID # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.explore.ExploreSessionsActivity.EXTRA_FILTER_TAG <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setData @0 <type>android.content.Intent EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance <type>android.support.v4.content.LocalBroadcastManager this org.robolectric.RuntimeEnvironment.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$registerReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver EXP # begin MethodDeclaration
android.support.v4.content.LocalBroadcastManager$unregisterReceiver @0 <type>android.support.v4.content.LocalBroadcastManager <type>android.content.BroadcastReceiver # MethodDeclaration
android.content.Intent$getParcelableExtra <type>AccessToken <type>android.content.Intent AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN # MethodDeclaration
android.content.Intent$getParcelableExtra <type>AccessToken <type>android.content.Intent AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView "ColorDrawable ignores bounds on pre-HC. Make sure you see three colors." # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$from EXP this EXP # begin end Block
<END>
<S2>
<S1>
android.support.v7.graphics.Palette$from EXP this <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>android.graphics.Bitmap EXP EXP <type>int <type>int # Block
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # Block
android.support.v4.content.ContextCompat$getColor EXP this EXP EXP # end Block
<END>
<S2>
<S1>
android.support.v4.content.ContextCompat$getColor EXP this EXP io.plaidapp.R.color.mid_grey # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity R.id.root # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnected EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.NetworkInfo$isConnectedOrConnecting EXP <type>android.net.NetworkInfo # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 10 10 android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin Block
android.net.Uri$getScheme <type>String <type>android.net.Uri # end Block
<END>
<S2>
<S1>
android.net.Uri$fromFile EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 50 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 12 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$toString EXP <type>android.graphics.RectF # begin MethodDeclaration
android.util.Log$i @0 this "bounds" EXP # MethodDeclaration
android.graphics.PointF$toString EXP <type>android.graphics.PointF # MethodDeclaration
android.util.Log$i @0 this "position" EXP # MethodDeclaration
android.util.Log$i @0 this "x-index" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # MethodDeclaration
android.content.res.AssetFileDescriptor$getParcelFileDescriptor EXP <type>android.content.res.AssetFileDescriptor # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin MethodDeclaration
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.card_layout null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>CardSlidePanel <type>android.view.View R.id.image_slide_panel # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "CardFragment" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "CardFragment" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.github.paolorotolo.appintroexample.R.layout.intro3 <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.demo.extras.R.styleable.CollectionView_internalPadding 0 # begin Block
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.demo.extras.R.styleable.CollectionView_contentTopClearance 0 # end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTag EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTag EXP <type>android.view.View # end MethodDeclaration
android.view.View$setTag @0 <type>android.view.View <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String "Call to makeRow without an adapter installed" # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$setOrientation @0 <type>android.widget.LinearLayout android.widget.LinearLayout.HORIZONTAL # begin MethodDeclaration
android.widget.LinearLayout$setLayoutParams @0 <type>android.widget.LinearLayout <type>LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>android.widget.LinearLayout.LayoutParams # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$getChildAt <type>android.view.View <type>android.widget.LinearLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.LinearLayout$removeViewAt @0 <type>android.widget.LinearLayout <type>int # begin Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.view.View <type>int <type>android.widget.LinearLayout.LayoutParams # end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$get EXP <type>android.util.SparseArray <type>int null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_forks_icon # begin MethodDeclaration
android.view.View$findViewById EXP <type>android.view.View com.github.pockethub.R.id.tv_watchers_icon # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin MethodDeclaration
android.support.test.InstrumentationRegistry.getTargetContext EXP this # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.InstrumentationRegistry.getTargetContext EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setLayoutManager @0 <type>android.support.v7.widget.RecyclerView EXP # begin MethodDeclaration
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this RecyclerViewActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from <type>android.view.LayoutInflater this EXP # MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.list_item <type>android.view.ViewGroup false # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$join EXP this "," EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.message # begin MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel this.recipients # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.title # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.data # MethodDeclaration
android.os.Parcel$writeSerializable @0 <type>android.os.Parcel this.actionType # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.objectId # MethodDeclaration
android.os.Parcel$writeSerializable @0 <type>android.os.Parcel this.filters # MethodDeclaration
android.os.Parcel$writeStringList @0 <type>android.os.Parcel this.suggestions # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getAction <type>String <type>android.content.Intent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int EXP <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$println @0 this <type>int EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_picasso <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$getAll <type>java.util.Map <type>android.content.SharedPreferences # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.SharedPreferences$edit EXP <type>android.content.SharedPreferences # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat <type>android.animation.PropertyValuesHolder this "rotationX" 0 180 180 0 0 # begin MethodDeclaration
android.animation.PropertyValuesHolder$ofFloat <type>android.animation.PropertyValuesHolder this "rotationY" 0 0 180 180 0 # MethodDeclaration
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.ObjectAnimator this EXP <type>android.animation.PropertyValuesHolder <type>android.animation.PropertyValuesHolder # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setRepeatCount @0 <type>android.animation.ObjectAnimator EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 2500 # MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent <type>String # begin MethodDeclaration
android.util.Log$i @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofObject <type>android.animation.ValueAnimator this EXP <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 10000 # MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue EXP <type>android.animation.ValueAnimator # begin MethodDeclaration
android.widget.ImageView$setBackgroundColor @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 EXP EXP <type>int <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getRight <type>int <type>android.view.View # end Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas <type>int EXP <type>int <type>int <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin Block
android.view.View$getRight EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>byte EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$red EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$rgb EXP this <type>float <type>float <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResource EXP <type>android.content.res.Resources EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$openRawResourceFd <type>android.content.res.AssetFileDescriptor <type>android.content.res.Resources EXP # begin TryBlock
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # end TryBlock
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$close @0 <type>android.content.res.AssetFileDescriptor # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SlidingUpGridViewActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setId @0 <type>android.widget.TextView 100 # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.support.v4.content.LocalBroadcastManager$getInstance EXP this org.robolectric.Robolectric.application # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.fr_image_pager <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.support.v4.view.ViewPager <type>android.view.View com.nostra13.universalimageloader.sample.R.id.pager # MethodDeclaration
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # MethodDeclaration
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this context # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.nostra13.universalimageloader.sample.R.layout.item_pager_image <type>android.view.ViewGroup false # begin end MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View com.nostra13.universalimageloader.sample.R.id.image # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ProgressBar <type>android.view.View com.nostra13.universalimageloader.sample.R.id.loading # end MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>android.view.View 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP <type>String android.widget.Toast.LENGTH_SHORT # MethodDeclaration
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$equals EXP <type>android.view.View <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.github.pockethub.R.color.diff_add_text # begin ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources com.github.pockethub.R.color.diff_remove_text # end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SimpleCursorAdapter$getCursor EXP <type>android.widget.SimpleCursorAdapter # begin MethodDeclaration
android.widget.SimpleCursorAdapter$notifyDataSetChanged @0 <type>android.widget.SimpleCursorAdapter # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues DatabaseOpenHelper.ARTIST_NAME "Frank Sinatra" # begin MethodDeclaration
android.content.ContentValues$clear @0 <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues DatabaseOpenHelper.ARTIST_NAME "Lady Gaga" # MethodDeclaration
android.content.ContentValues$clear @0 <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues DatabaseOpenHelper.ARTIST_NAME "Jawny Cash" # MethodDeclaration
android.content.ContentValues$clear @0 <type>android.content.ContentValues # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues DatabaseOpenHelper.ARTIST_NAME "Ludwig van Beethoven" # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentValues$put @0 <type>android.content.ContentValues DatabaseOpenHelper.ARTIST_NAME "Johnny Cash" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation <type>android.view.animation.Animation this EXP com.gc.materialdesign.R.anim.progress_indeterminate_animation # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetFileDescriptor$getFileDescriptor EXP <type>android.content.res.AssetFileDescriptor # begin TryBlock
android.content.res.AssetFileDescriptor$getStartOffset EXP <type>android.content.res.AssetFileDescriptor # TryBlock
android.content.res.AssetFileDescriptor$getLength EXP <type>android.content.res.AssetFileDescriptor # TryBlock
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer EXP EXP EXP # TryBlock
android.content.res.AssetFileDescriptor$close @0 <type>android.content.res.AssetFileDescriptor # TryBlock
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer EXP # begin TryBlock
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.MediaPlayer$setDataSource @0 <type>android.media.MediaPlayer <type>java.io.FileDescriptor # begin TryBlock
android.media.MediaPlayer$prepare @0 <type>android.media.MediaPlayer # end TryBlock
<END>
<S2>
<S1>
android.media.SoundPool$load EXP <type>android.media.SoundPool <type>android.content.res.AssetFileDescriptor 1 # begin TryBlock
android.content.res.AssetFileDescriptor$close @0 <type>android.content.res.AssetFileDescriptor # end TryBlock
<END>
<S2>
<S1>
android.media.SoundPool$load EXP <type>android.media.SoundPool EXP 1 # begin end TryBlock
<END>
<S2>
<S1>
android.media.SoundPool$release @0 <type>android.media.SoundPool # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.top_menu <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "you've been helped" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "you've been helped more" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater R.menu.context_menu <type>android.view.ContextMenu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "ContextMenu Shown" android.widget.Toast.LENGTH_SHORT # begin end SwitchCase
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle ShareConstants.OBJECT_ID EXP # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle ShareConstants.OBJECT_TYPE EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String <type>float EXP mAxisLabelPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mGridPaint # Block
android.graphics.Path$reset @0 <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mLimitLinePaint # Block
android.graphics.Path$reset @0 <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Bold.ttf" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin MethodDeclaration
android.widget.ImageView$setImageURI @0 <type>android.widget.ImageView EXP # MethodDeclaration
android.net.Uri$parse <type>android.net.Uri this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this FIELD # MethodDeclaration
android.net.Uri$parse EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDimensionPixelOffset <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.dimen.map_slideableinfo_height_titleonly # begin MethodDeclaration
android.content.res.Resources$getDimensionPixelOffset <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.dimen.map_slideableinfo_height_moscone # MethodDeclaration
android.content.res.Resources$getDimensionPixelOffset <type>int <type>android.content.res.Resources com.google.samples.apps.iosched.R.dimen.map_slideableinfo_height_session # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>com.sothree.slidinguppanel.SlidingUpPanelLayout <type>android.view.View com.google.samples.apps.iosched.R.id.map_bottomsheet # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View com.google.samples.apps.iosched.R.id.map_bottomsheet_dummycontent # end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View false # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityOptions$makeSceneTransitionAnimation <type>android.app.ActivityOptions this this <type>com.facebook.drawee.view.SimpleDraweeView <type>String # begin MethodDeclaration
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentManager$beginTransaction <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.FragmentManager # begin MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager "f1" # end MethodDeclaration
android.support.v4.app.FragmentManager$findFragmentByTag <type>android.support.v4.app.Fragment <type>android.support.v4.app.FragmentManager "f2" # begin end MethodDeclaration
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin MethodDeclaration
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.CheckBox$setOnClickListener @0 <type>android.widget.CheckBox <type>android.view.View.OnClickListener # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment "f1" # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment "f2" # begin end Block
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$show @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end IfFalse
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$show @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$hide @0 <type>android.support.v4.app.FragmentTransaction <type>android.support.v4.app.Fragment # begin end IfFalse
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.view.animation.Interpolator$getInterpolation <type>float <type>android.view.animation.Interpolator <type>float # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel <type>long # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # end MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # MethodDeclaration
android.os.Parcel$writeLong @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x02 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_misc_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.quote_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.LocalSocket$getPeerCredentials <type>android.net.Credentials <type>android.net.LocalSocket # begin MethodDeclaration
android.net.Credentials$getUid <type>int <type>android.net.Credentials # MethodDeclaration
android.net.Credentials$getPid <type>int <type>android.net.Credentials # end MethodDeclaration
android.content.Context$checkPermission <type>int <type>android.content.Context <type>String <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme <type>String <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$setClass @0 <type>android.content.Intent EXP com.google.samples.apps.iosched.service.SessionCalendarService # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater R.layout.quote_fragment <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentProviderOperation$newDelete EXP this <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap EXP this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawColor @0 <type>android.graphics.Canvas android.graphics.Color.TRANSPARENT android.graphics.PorterDuff.Mode.SRC # begin TryBlock
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 null # end TryBlock
<END>
<S2>
<S1>
android.app.ActivityManager$getMemoryClass <type>int <type>android.app.ActivityManager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$get <type>bolts.Task <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$put @0 <type>android.support.v4.util.SparseArrayCompat <type>int <type>bolts.Task # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$indexOfKey <type>int <type>android.support.v4.util.SparseArrayCompat <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt <type>bolts.Task <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$keyAt <type>int <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt <type>bolts.Task <type>android.support.v4.util.SparseArrayCompat <type>int # begin Block
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$keyAt <type>int <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt <type>com.facebook.common.references.CloseableReference <type>android.support.v4.util.SparseArrayCompat <type>int # begin Block
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$indexOfKey <type>int <type>android.support.v4.util.SparseArrayCompat <type>int # begin end MethodDeclaration
android.support.v4.util.SparseArrayCompat$put @0 <type>android.support.v4.util.SparseArrayCompat <type>int EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$valueAt <type>com.facebook.common.references.CloseableReference <type>android.support.v4.util.SparseArrayCompat <type>int # begin Block
android.support.v4.util.SparseArrayCompat$removeAt @0 <type>android.support.v4.util.SparseArrayCompat <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$get EXP <type>android.support.v4.util.SparseArrayCompat <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$get EXP <type>android.support.v4.util.SparseArrayCompat <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$keyAt EXP <type>android.support.v4.util.SparseArrayCompat <type>int # begin Block
android.support.v4.util.SparseArrayCompat$valueAt EXP <type>android.support.v4.util.SparseArrayCompat <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.util.SparseArrayCompat$keyAt EXP <type>android.support.v4.util.SparseArrayCompat <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$getPaddingLeft EXP <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$getPaddingRight EXP <type>android.widget.TextView # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
android.widget.TextView$getLayoutParams EXP <type>android.widget.TextView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setPaintFlags @0 <type>android.widget.TextView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setPaintFlags @0 <type>android.widget.TextView <type>int # begin end IfFalse
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this EXP # begin Block
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin MethodDeclaration
android.net.Uri$parse EXP this <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin end TryBlock
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.donnfelker.android.bootstrap.core.Constants.Extra.NEWS_ITEM <type>com.donnfelker.android.bootstrap.core.News # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapLabel_bootstrapHeading 5 # begin TryBlock
android.content.res.TypedArray$getBoolean this.roundable <type>android.content.res.TypedArray R.styleable.BootstrapButton_roundedCorners false # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.roundable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # begin Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading.KEY # end Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path maxBallSize EXP # begin MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path center.x maxBallSize # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path maxBallSize EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin TryBlock
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$getBoolean EXP <type>android.os.Bundle <type>String false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater com.github.pockethub.R.layout.item_list <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.support.v4.widget.SwipeRefreshLayout <type>android.view.View com.github.pockethub.R.id.swipe_item # begin MethodDeclaration
android.support.v4.widget.SwipeRefreshLayout$setOnRefreshListener @0 <type>android.support.v4.widget.SwipeRefreshLayout this # MethodDeclaration
android.support.v4.widget.SwipeRefreshLayout$setColorSchemeResources @0 <type>android.support.v4.widget.SwipeRefreshLayout com.github.pockethub.R.color.pager_title_background_top_start com.github.pockethub.R.color.pager_title_background_end com.github.pockethub.R.color.text_link com.github.pockethub.R.color.pager_title_background_end # MethodDeclaration
android.view.View$findViewById <type>android.widget.ListView <type>android.view.View android.R.id.list # end MethodDeclaration
android.widget.ListView$setOnItemClickListener @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
android.widget.ListView$setOnItemLongClickListener @0 <type>android.widget.ListView EXP # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ProgressBar <type>android.view.View com.github.pockethub.R.id.pb_loading # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View android.R.id.empty # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle <type>String true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setRefreshing @0 <type>android.support.v4.widget.SwipeRefreshLayout false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.content.Loader$clearException EXP <type>android.support.v4.content.Loader # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$getAdapter EXP <type>android.widget.ListView # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView <type>android.widget.ListAdapter # begin end IfTrue
<END>
<S2>
<S1>
android.view.animation.AnimationUtils$loadAnimation EXP this EXP android.R.anim.fade_in # begin IfTrue
android.view.View$startAnimation @0 <type>android.view.View EXP # end IfTrue
<END>
<S2>
<S1>
android.view.View$clearAnimation @0 <type>android.view.View # begin end IfFalse
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$fromFile <type>android.net.Uri this <type>java.io.File # begin end ClassDeclaration
<END>
<S2>
<S1>
android.database.MatrixCursor$addRow @0 <type>android.database.MatrixCursor EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.Intent$getIntExtra EXP <type>android.content.Intent GridLayoutActivity.EXTRA_RES_ID 0 # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setTitle @0 <type>android.support.v7.app.ActionBar FIELD # begin MethodDeclaration
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.contributors # MethodDeclaration
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.text.TextUtils$isEmpty EXP this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint 3 # begin MethodDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.STROKE # MethodDeclaration
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas <type>float # end MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$scale @0 <type>android.graphics.Canvas <type>float <type>float # MethodDeclaration
android.graphics.Canvas$rotate @0 <type>android.graphics.Canvas EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP 90 false <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawArc @0 <type>android.graphics.Canvas <type>android.graphics.RectF EXP 90 false <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 1 0.6f 1 # begin MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # MethodDeclaration
android.animation.ValueAnimator$ofFloat <type>android.animation.ValueAnimator this 0 180 360 # MethodDeclaration
android.animation.ValueAnimator$setDuration @0 <type>android.animation.ValueAnimator 1000 # MethodDeclaration
android.animation.ValueAnimator$setRepeatCount @0 <type>android.animation.ValueAnimator EXP # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>float <type>android.animation.ValueAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity FIELD <type>int # begin MethodDeclaration
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray <type>int EXP # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$findViewById EXP <type>android.app.Activity android.R.id.content # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$setAdapter @0 <type>android.widget.ListView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$addHeaderView @0 <type>android.widget.ListView <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.GridView$setAdapter @0 <type>android.widget.GridView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.widget.RecyclerView$setAdapter @0 <type>android.support.v7.widget.RecyclerView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_repositories # begin end SwitchCase
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources com.github.pockethub.R.string.tab_users # begin end SwitchCase
<END>
<S2>
<S1>
android.graphics.Bitmap.CompressFormat$toString EXP <type>android.graphics.Bitmap.CompressFormat # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_8888 # begin end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas EXP # MethodDeclaration
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF 0 0 EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.app_name # begin MethodDeclaration
android.app.PendingIntent$getActivity EXP this <type>android.content.Context 0 EXP 0 # MethodDeclaration
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.NOTIFICATION_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.Resources$getDisplayMetrics EXP <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "Some SQL" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeString @0 <type>android.os.Parcel this.objectId # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel this.objectType # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$readParcelable EXP <type>android.os.Parcel EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getLayoutDimension EXP <type>android.content.res.TypedArray com.actionbarsherlock.R.styleable.SherlockActionBar_height 0 # begin MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View EXP <type>int # begin MethodDeclaration
android.view.View$getMeasuredWidth <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight <type>int <type>android.view.View # MethodDeclaration
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getMeasuredHeight <type>int <type>android.view.View # MethodDeclaration
android.view.View$layout @0 <type>android.view.View EXP <type>int <type>int EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.input.InputManager$registerInputDeviceListener @0 <type>android.hardware.input.InputManager this EXP # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.hardware.input.InputManager$registerInputDeviceListener @0 <type>android.hardware.input.InputManager this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.input.InputManager$unregisterInputDeviceListener @0 <type>android.hardware.input.InputManager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_grid_cursor <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.TITLE_COLUMN # begin MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.SUBTITLE_COLUMN # MethodDeclaration
android.database.Cursor$getString FIELD <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.HEADER_COLUMN # MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.ID_COLUMN # MethodDeclaration
android.database.Cursor$getInt <type>int <type>android.database.Cursor it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.IndexColumns.THUMBNAIL_COLUMN # end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$delete <type>long <type>android.content.ContentResolver it.gmariotti.cardslib.demo.db.CardCursorContract.CardCursor.CONTENT_URI EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_cursor_main_inner_subtitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_title_indicator_footer_color # begin ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_footer_line_height # ConstructorDeclaration
android.content.res.Resources$getInteger <type>int <type>android.content.res.Resources R.integer.default_title_indicator_footer_indicator_style # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_footer_indicator_height # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_footer_indicator_underline_padding # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_footer_padding # ConstructorDeclaration
android.content.res.Resources$getInteger <type>int <type>android.content.res.Resources R.integer.default_title_indicator_line_position # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_title_indicator_selected_color # ConstructorDeclaration
android.content.res.Resources$getBoolean <type>boolean <type>android.content.res.Resources R.bool.default_title_indicator_selected_bold # ConstructorDeclaration
android.content.res.Resources$getColor <type>int <type>android.content.res.Resources R.color.default_title_indicator_text_color # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_text_size # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_title_padding # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_clip_padding # ConstructorDeclaration
android.content.res.Resources$getDimension <type>float <type>android.content.res.Resources R.dimen.default_title_indicator_top_padding # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerLineHeight <type>float # ConstructorDeclaration
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerIndicatorStyle <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerIndicatorHeight <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerIndicatorUnderlinePadding <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerPadding <type>float # ConstructorDeclaration
android.content.res.TypedArray$getInteger EXP <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_linePosition <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_topPadding <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_titlePadding <type>float # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_clipPadding <type>float # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_selectedColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_android_textColor <type>int # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_selectedBold <type>boolean # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>float <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_android_textSize <type>float # ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_footerColor <type>int # ConstructorDeclaration
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint <type>float # ConstructorDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL_AND_STROKE # ConstructorDeclaration
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # ConstructorDeclaration
android.graphics.Paint$setStyle @0 <type>android.graphics.Paint android.graphics.Paint.Style.FILL_AND_STROKE # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray R.styleable.TitlePageIndicator_android_background # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin ConstructorDeclaration
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # ConstructorDeclaration
android.support.v4.view.ViewConfigurationCompat$getScaledPagingTouchSlop <type>int this <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getTextSize EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTextSize @0 <type>android.graphics.Paint <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$setTypeface @0 <type>android.graphics.Paint <type>android.graphics.Typeface # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getTypeface EXP <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
android.graphics.Path$reset @0 <type>android.graphics.Path # begin MethodDeclaration
android.graphics.Path$moveTo @0 <type>android.graphics.Path 0 EXP # MethodDeclaration
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>int EXP # MethodDeclaration
android.graphics.Path$close @0 <type>android.graphics.Path # MethodDeclaration
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem <type>int <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setFakeBoldText @0 <type>android.graphics.Paint EXP # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>CharSequence 0 EXP FIELD EXP <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>CharSequence 0 EXP FIELD EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin SwitchCase
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float EXP # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP <type>float # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # SwitchCase
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # end SwitchCase
<END>
<S2>
<S1>
android.graphics.Path$reset @0 <type>android.graphics.Path # begin SwitchCase
android.graphics.Path$moveTo @0 <type>android.graphics.Path <type>float <type>float # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # SwitchCase
android.graphics.Path$lineTo @0 <type>android.graphics.Path <type>float <type>float # SwitchCase
android.graphics.Path$close @0 <type>android.graphics.Path # SwitchCase
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint EXP # SwitchCase
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path <type>android.graphics.Paint # SwitchCase
android.graphics.Paint$setAlpha @0 <type>android.graphics.Paint 0xFF # end SwitchCase
<END>
<S2>
<S1>
android.view.MotionEvent$getAction EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # begin SwitchCase
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$fakeDragBy @0 <type>android.support.v4.view.ViewPager <type>float # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin Block
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$endFakeDrag @0 <type>android.support.v4.view.ViewPager # begin end IfTrue
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # begin SwitchCase
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # end SwitchCase
android.support.v4.view.MotionEventCompat$findPointerIndex EXP this <type>android.view.MotionEvent <type>int # begin SwitchCase
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent EXP # end SwitchCase
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$measureText FIELD <type>android.graphics.Paint <type>CharSequence 0 EXP # begin MethodDeclaration
android.graphics.Paint$descent EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$ascent EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager null # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$setEmpty @0 <type>android.graphics.Rect # begin Block
android.graphics.Paint$descent EXP <type>android.graphics.Paint # Block
android.graphics.Paint$ascent EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter EXP <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.AssetManager$open EXP <type>android.content.res.AssetManager <type>String # begin TryBlock
android.graphics.BitmapFactory$decodeStream @0 this EXP null <type>android.graphics.BitmapFactory.Options # end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater com.google.samples.apps.iosched.R.layout.fragment_my_schedule <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "roboguice" "Throwable caught during background processing" <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setOnPageChangeListener @0 <type>android.support.v4.view.ViewPager EXP # begin end Block
<END>
<S2>
<S1>
android.widget.TextView$setGravity @0 <type>android.widget.TextView android.view.Gravity.CENTER # begin MethodDeclaration
android.widget.TextView$setTextSize @0 <type>android.widget.TextView android.util.TypedValue.COMPLEX_UNIT_SP <type>int # MethodDeclaration
android.widget.TextView$setTypeface @0 <type>android.widget.TextView android.graphics.Typeface.DEFAULT_BOLD # MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setBackgroundResource @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setAllCaps @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$setPadding @0 <type>android.widget.TextView <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getAdapter <type>android.support.v4.view.PagerAdapter <type>android.support.v4.view.ViewPager # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.PagerAdapter$getPageTitle EXP <type>android.support.v4.view.PagerAdapter <type>int # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # Block
android.view.View$setOnClickListener @0 <type>android.view.View <type>OnClickListener # Block
android.util.SparseArray$get <type>String <type>android.util.SparseArray <type>int null # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>android.widget.LinearLayout.LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setContentDescription @0 <type>android.view.View <type>String # begin end Block
<END>
<S2>
<S1>
android.view.View$setSelected @0 <type>android.view.View true # begin end Block
<END>
<S2>
<S1>
android.util.SparseArray$put @0 <type>android.util.SparseArray <type>int <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$getCurrentItem EXP <type>android.support.v4.view.ViewPager # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrolled @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int <type>float <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageScrollStateChanged @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager.OnPageChangeListener$onPageSelected @0 <type>android.support.v4.view.ViewPager.OnPageChangeListener <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setCurrentItem @0 <type>android.support.v4.view.ViewPager <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 50 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 12 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$toString EXP <type>android.graphics.RectF # begin MethodDeclaration
android.util.Log$i @0 this "bounds" EXP # MethodDeclaration
android.graphics.PointF$toString EXP <type>android.graphics.PointF # MethodDeclaration
android.util.Log$i @0 this "position" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Instrumentation$getContext <type>android.content.Context <type>android.app.Instrumentation # begin MethodDeclaration
android.app.Instrumentation$getTargetContext EXP <type>android.app.Instrumentation # MethodDeclaration
android.accounts.AccountManager$get <type>android.accounts.AccountManager this EXP # end MethodDeclaration
android.content.Context$getString <type>String <type>android.content.Context com.donnfelker.android.bootstrap.tests.R.string.test_account_api_key # begin end MethodDeclaration
android.accounts.AccountManager$addAccountExplicitly @0 <type>android.accounts.AccountManager <type>android.accounts.Account null null # begin MethodDeclaration
android.accounts.AccountManager$setAuthToken @0 <type>android.accounts.AccountManager <type>android.accounts.Account AUTHTOKEN_TYPE <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setTouchDelegate @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Rect$set @0 <type>android.graphics.Rect <type>android.graphics.Rect # begin Block
android.graphics.Rect$width <type>int <type>android.graphics.Rect # Block
android.graphics.Rect$height <type>int <type>android.graphics.Rect # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>int <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY <type>int <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$dispatchTouchEvent <type>boolean <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin Block
android.view.View$getHeight EXP <type>android.view.View # Block
android.view.MotionEvent$setLocation @0 <type>android.view.MotionEvent EXP EXP # end Block
<END>
<S2>
<S1>
android.view.MotionEvent$setLocation @0 <type>android.view.MotionEvent EXP EXP # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor <type>int # begin MethodDeclaration
android.database.Cursor$getInt EXP <type>android.database.Cursor <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this SampleTitlesWithListener.this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver <type>android.content.ContentResolver <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.preference.PreferenceManager$getDefaultSharedPreferences EXP this <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>float <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getEventTime <type>long <type>android.view.MotionEvent # begin SwitchCase
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # SwitchCase
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # end SwitchCase
<END>
<S2>
<S1>
android.view.ViewConfiguration$get EXP this context # begin end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.BottomSheet_scrollingChild <type>int # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDimensionPixelSize <type>int <type>android.content.res.TypedArray io.plaidapp.R.styleable.BottomSheet_dragDismissDistance <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$settleCapturedViewAt @0 <type>android.support.v4.widget.ViewDragHelper <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$create <type>android.support.v4.widget.ViewDragHelper this this <type>android.support.v4.widget.ViewDragHelper.Callback # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin Block
android.view.View$getTop <type>int <type>android.view.View # Block
android.view.View$getBottom <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin MethodDeclaration
android.view.MotionEvent$getY EXP <type>android.view.MotionEvent # MethodDeclaration
android.support.v4.widget.ViewDragHelper$shouldInterceptTouchEvent EXP <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$cancel @0 <type>android.support.v4.widget.ViewDragHelper # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$processTouchEvent @0 <type>android.support.v4.widget.ViewDragHelper <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getTop EXP <type>android.view.View # begin end MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # begin MethodDeclaration
android.animation.ObjectAnimator$ofInt <type>android.animation.ObjectAnimator this <type>io.plaidapp.util.ViewOffsetHelper io.plaidapp.util.ViewOffsetHelper.OFFSET_Y EXP EXP # MethodDeclaration
android.animation.ObjectAnimator$setDuration @0 <type>android.animation.ObjectAnimator 200L # MethodDeclaration
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # MethodDeclaration
android.animation.ObjectAnimator$setInterpolator @0 <type>android.animation.ObjectAnimator EXP # end MethodDeclaration
android.animation.ObjectAnimator$start @0 <type>android.animation.ObjectAnimator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ObjectAnimator$addListener @0 <type>android.animation.ObjectAnimator EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$isViewUnder EXP <type>android.support.v4.widget.ViewDragHelper this <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$canScrollVertically EXP <type>android.view.View 1 # begin MethodDeclaration
android.view.View$canScrollVertically EXP <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this BottomSheet.this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ViewDragHelper$settleCapturedViewAt @0 <type>android.support.v4.widget.ViewDragHelper <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 100 100 android.graphics.Bitmap.Config.ARGB_4444 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MenuDrawerActivity.this EXP android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$getTextSize <type>float <type>android.text.TextPaint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.text.StaticLayout$getLineForVertical EXP <type>android.text.StaticLayout <type>int # begin end Block
<END>
<S2>
<S1>
android.text.StaticLayout$getLineStart <type>int <type>android.text.StaticLayout <type>int # begin Block
android.text.StaticLayout$getLineEnd <type>int <type>android.text.StaticLayout <type>int # Block
android.text.StaticLayout$getLineWidth <type>float <type>android.text.StaticLayout <type>int # Block
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint <type>String # end Block
<END>
<S2>
<S1>
android.text.TextPaint$measureText <type>float <type>android.text.TextPaint EXP # begin end Block
<END>
<S2>
<S1>
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint <type>float # begin MethodDeclaration
android.text.StaticLayout$getHeight EXP <type>android.text.StaticLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getRowBytes EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_mode <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_viewAbove EXP # end ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_viewBehind EXP # begin end ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_touchModeAbove <type>int # begin ConstructorDeclaration
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_touchModeBehind <type>int # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_behindOffset EXP # ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_behindWidth EXP # end ConstructorDeclaration
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.SlidingMenu_behindScrollScale 0.33f # begin ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_shadowDrawable EXP # end ConstructorDeclaration
android.content.res.TypedArray$getDimension <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_shadowWidth 0 # begin ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.SlidingMenu_fadeEnabled true # ConstructorDeclaration
android.content.res.TypedArray$getFloat <type>float <type>android.content.res.TypedArray R.styleable.SlidingMenu_fadeDegree 0.33f # ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.SlidingMenu_selectorEnabled false # ConstructorDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray R.styleable.SlidingMenu_selectorDrawable EXP # end ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.app.Activity$getTheme EXP <type>android.app.Activity # begin MethodDeclaration
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray 0 0 # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getWindow EXP <type>android.app.Activity # begin SwitchCase
android.view.ViewGroup$getChildAt <type>android.view.ViewGroup <type>android.view.ViewGroup 0 # SwitchCase
android.view.ViewGroup$setBackgroundResource @0 <type>android.view.ViewGroup <type>int # SwitchCase
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.ViewGroup # SwitchCase
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup this # end SwitchCase
<END>
<S2>
<S1>
android.app.Activity$findViewById <type>android.view.ViewGroup <type>android.app.Activity android.R.id.content # begin SwitchCase
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup 0 # SwitchCase
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>android.view.View # SwitchCase
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup this # end SwitchCase
<END>
<S2>
<S1>
android.view.View$setBackgroundResource @0 <type>android.view.View <type>int # begin end IfTrue
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "setting padding!" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$addCallback @0 <type>android.view.SurfaceHolder this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$setFormat @0 <type>android.view.SurfaceHolder android.graphics.PixelFormat.RGB_565 # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "onDetachedFromWindow" # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "DefaultContextFactory" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "DefaultContextFactory" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "EglHelper" "createWindowSurface returned EGL_BAD_NATIVE_WINDOW." # begin end Block
<END>
<S2>
<S1>
android.opengl.GLDebugHelper$wrap <type>javax.microedition.khronos.opengles.GL this <type>javax.microedition.khronos.opengles.GL <type>int <type>java.io.Writer # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$e @0 this "EglHelper" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "GLThread" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "GLThread" "egl createSurface" # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "GLThread" "onSurfaceCreated" # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "GLThread" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "GLThread" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "GLThread" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this "GLSurfaceView" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this "GLThread" EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.text.format.DateUtils$formatDateRange EXP this <type>android.content.Context <type>Formatter EXP EXP EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.day_title_today # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.day_title_yesterday # begin end Block
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.day_title_tomorrow # begin end Block
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_NAME EXP # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TITLE EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent DemoSingleTopicActivity.EXTRA_FRAGMENT_COLOR FIELD # end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$getDefaultAdapter <type>android.bluetooth.BluetoothAdapter this # begin end ClassDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothAdapter$listenUsingRfcommWithServiceRecord <type>android.bluetooth.BluetoothServerSocket <type>android.bluetooth.BluetoothAdapter "Bluetooth Demo" DataTransferActivity.APP_UUID # begin end TryBlock
<END>
<S2>
<S1>
android.bluetooth.BluetoothServerSocket$accept <type>android.bluetooth.BluetoothSocket <type>android.bluetooth.BluetoothServerSocket # begin TryBlock
android.bluetooth.BluetoothServerSocket$close @0 <type>android.bluetooth.BluetoothServerSocket # end TryBlock
<END>
<S2>
<S1>
android.os.Handler$obtainMessage EXP <type>android.os.Handler DataTransferActivity.SOCKET_CONNECTED <type>ConnectionThread # begin end MethodDeclaration
<END>
<S2>
<S1>
android.bluetooth.BluetoothServerSocket$close @0 <type>android.bluetooth.BluetoothServerSocket # begin end IfTrue
<END>
<S2>
<S1>
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 45 # begin MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 100 # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar this # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving SUCCESSFUL!" android.widget.Toast.LENGTH_SHORT # begin end Block
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Saving FAILED!" android.widget.Toast.LENGTH_SHORT # begin end IfFalse
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "VAL SELECTED" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this FIELD # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse <type>android.net.Uri this <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "INTENT RECEIVED" # begin MethodDeclaration
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # MethodDeclaration
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator 500 # MethodDeclaration
android.widget.Toast$makeText EXP this <type>android.content.Context "INTENT RECEIVED by Receiver1" android.widget.Toast.LENGTH_LONG # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception editing comment on gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.Fragment$getActivity EXP <type>android.support.v4.app.Fragment # begin MethodDeclaration
android.content.Context$getPackageManager EXP <type>android.content.Context # MethodDeclaration
android.content.pm.PackageManager$resolveActivity EXP <type>android.content.pm.PackageManager EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$resolveActivity EXP <type>android.content.pm.PackageManager EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getParcelableExtra <type>LoginClient.Request <type>android.content.Intent LoginFragment.EXTRA_REQUEST # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getComponent <type>android.content.ComponentName <type>android.content.Intent # begin MethodDeclaration
android.content.ComponentName$getClassName EXP <type>android.content.ComponentName # MethodDeclaration
android.content.Intent$getAction EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getComponent <type>android.content.ComponentName <type>android.content.Intent # begin MethodDeclaration
android.content.ComponentName$getClassName EXP <type>android.content.ComponentName # MethodDeclaration
android.content.Intent$getAction EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$removeExtra @0 <type>android.content.Intent LoginFragment.RESULT_KEY # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent LoginFragment.RESULT_KEY <type>LoginClient.Result # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent LoginFragment.RESULT_KEY <type>LoginClient.Result # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent LoginFragment.RESULT_KEY <type>LoginClient.Result # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_PROTOCOL_CALL_ID # begin MethodDeclaration
android.content.Intent$getStringExtra <type>String <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_PROTOCOL_ACTION # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getExtras <type>android.os.Bundle <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.graphics.Typeface$createFromAsset <type>android.graphics.Typeface this EXP "OpenSans-Regular.ttf" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_animate_staggeredgrid <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActionBar$getThemedContext EXP <type>android.app.ActionBar # begin MethodDeclaration
android.widget.ArrayAdapter$setDropDownViewResource @0 <type>android.widget.ArrayAdapter android.R.layout.simple_spinner_dropdown_item # MethodDeclaration
android.app.ActionBar$setListNavigationCallbacks @0 <type>android.app.ActionBar <type>android.widget.ArrayAdapter this # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplication EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$sleep @0 this 1000 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_staggered_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this com.basgeekball.screenshotsnanny.core.Constants.LOG_TAG EXP # begin end Block
<END>
<S2>
<S1>
android.app.Activity$getApplicationContext EXP <type>android.app.Activity # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.map.MapActivity.EXTRA_ROOM <type>String # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.google.samples.apps.iosched.map.MapActivity.EXTRA_DETACHED_MODE true # MethodDeclaration
android.app.Activity$startActivity @0 <type>android.app.Activity <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getString EXP <type>android.app.Activity <type>int <type>String com.google.samples.apps.iosched.BuildConfig.CONFERENCE_HASHTAG EXP # begin MethodDeclaration
android.support.v4.app.ShareCompat.IntentBuilder$getIntent EXP <type>android.support.v4.app.ShareCompat.IntentBuilder # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getString EXP <type>android.content.Context com.google.samples.apps.iosched.R.string.title_share # begin MethodDeclaration
android.content.Intent$createChooser <type>android.content.Intent this EXP EXP # MethodDeclaration
android.content.Intent$addFlags @0 <type>android.content.Intent android.content.Intent.FLAG_ACTIVITY_NEW_TASK # MethodDeclaration
android.content.Context$startActivity @0 <type>android.content.Context <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getContentResolver EXP <type>android.app.Activity # begin MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.SESSION_ID <type>String # MethodDeclaration
android.content.ContentValues$put @0 <type>android.content.ContentValues com.google.samples.apps.iosched.provider.ScheduleContract.MySchedule.MY_SCHEDULE_IN_SCHEDULE EXP # MethodDeclaration
android.content.AsyncQueryHandler$startInsert @0 <type>android.content.AsyncQueryHandler EXP null <type>android.net.Uri <type>android.content.ContentValues # MethodDeclaration
android.app.Activity$sendBroadcast @0 <type>android.app.Activity EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end ClassDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeStringArray @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeIntArray @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$createStringArray <type>String <type>android.os.Parcel # begin MethodDeclaration
android.os.Parcel$readStringArray @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$createIntArray <type>int <type>android.os.Parcel # MethodDeclaration
android.os.Parcel$readIntArray @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$readInt EXP <type>android.os.Parcel # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View <type>float # begin MethodDeclaration
android.view.View$setTranslationX @0 <type>android.view.View <type>float # MethodDeclaration
android.view.View$setScaleX @0 <type>android.view.View <type>float # MethodDeclaration
android.view.View$setScaleY @0 <type>android.view.View <type>float # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setRotationY @0 <type>android.view.View EXP # begin end SwitchCase
<END>
<S2>
<S1>
android.view.View$getWidth <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight EXP <type>android.view.View # begin Block
android.view.View$getWidth EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 0.0F # begin Block
android.view.View$setClickable @0 <type>android.view.View false # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1.0F # begin Block
android.view.View$setClickable @0 <type>android.view.View true # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#4CAF50" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX EXP <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$argb EXP this 70 <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#B0B0B0" # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # Block
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap 0 0 EXP # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # end Block
<END>
<S2>
<S1>
android.graphics.Color$parseColor EXP this "#B0B0B0" # begin Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint EXP # Block
android.graphics.Paint$setStrokeWidth @0 <type>android.graphics.Paint EXP # Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # Block
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # Block
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # begin Block
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # Block
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeBooleanValue <type>boolean <type>android.util.AttributeSet MATERIALDESIGNXML "showNumberIndicator" false # begin MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "min" 0 # MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "max" 0 # MethodDeclaration
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "value" <type>int # MethodDeclaration
android.widget.RelativeLayout.LayoutParams$addRule @0 <type>android.widget.RelativeLayout.LayoutParams android.widget.RelativeLayout.CENTER_VERTICAL android.widget.RelativeLayout.TRUE # end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.LayerDrawable$findDrawableByLayerId <type>android.graphics.drawable.GradientDrawable <type>android.graphics.drawable.LayerDrawable com.gc.materialdesign.R.id.shape_bacground # begin Block
android.graphics.drawable.GradientDrawable$setColor @0 <type>android.graphics.drawable.GradientDrawable <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # begin MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # end MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP <type>float <type>float <type>android.graphics.Paint # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>Indicator # begin MethodDeclaration
android.widget.RelativeLayout$addView @0 <type>android.widget.RelativeLayout <type>NumberIndicator # end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this EXP # begin Block
android.widget.ImageView$setImageURI @0 <type>android.widget.ImageView EXP # end Block
<END>
<S2>
<S1>
android.content.Intent$getIntExtra EXP <type>android.content.Intent GridFragment.EXTRA_RES_ID EXP # begin MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.content.pm.PackageManager$getApplicationIcon EXP <type>android.content.pm.PackageManager EXP # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin MethodDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Canvas$getWidth EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$getHeight EXP <type>android.graphics.Canvas # MethodDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getBitmap EXP <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_title # begin MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "FREE" # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_subtitle # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView "Very popular with..." # MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.RatingBar <type>android.view.ViewGroup it.gmariotti.cardslib.demo.R.id.carddemo_gplay_main_inner_ratingBar # MethodDeclaration
android.widget.RatingBar$setNumStars @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setMax @0 <type>android.widget.RatingBar 5 # MethodDeclaration
android.widget.RatingBar$setStepSize @0 <type>android.widget.RatingBar 0.5f # MethodDeclaration
android.widget.RatingBar$setRating @0 <type>android.widget.RatingBar 4.7f # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getApplicationContext <type>android.content.Context <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageName EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.app.Activity$getIntent <type>android.content.Intent <type>android.app.Activity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra <type>String <type>android.content.Intent <type>String # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getData EXP <type>android.content.Intent # begin end Block
<END>
<S2>
<S1>
android.content.Intent$getBundleExtra <type>android.os.Bundle <type>android.content.Intent <type>String # begin end MethodDeclaration
android.content.Intent$getData FIELD <type>android.content.Intent # begin end MethodDeclaration
android.os.Bundle$getBundle <type>android.os.Bundle <type>android.os.Bundle <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString <type>String <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse FIELD this <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString FIELD <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse FIELD this EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putBundle @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putStringArray @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelableArray @0 <type>android.os.Bundle <type>String <type>android.os.Bundle # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putStringArray @0 <type>android.os.Bundle <type>String <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getBundle EXP <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.widget.RadioGroup$check @0 <type>android.widget.RadioGroup R.id.left # begin end MethodDeclaration
android.widget.RadioGroup$setOnCheckedChangeListener @0 <type>android.widget.RadioGroup EXP # begin MethodDeclaration
android.widget.RadioGroup$check @0 <type>android.widget.RadioGroup R.id.touch_above_full # end MethodDeclaration
android.widget.RadioGroup$setOnCheckedChangeListener @0 <type>android.widget.RadioGroup EXP # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar 1000 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 333 # end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar 1000 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 750 # end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox true # end MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox EXP # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar 1000 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 75 # end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin MethodDeclaration
android.widget.CheckBox$setChecked @0 <type>android.widget.CheckBox true # end MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox EXP # begin MethodDeclaration
android.widget.SeekBar$setMax @0 <type>android.widget.SeekBar 1000 # MethodDeclaration
android.widget.SeekBar$setProgress @0 <type>android.widget.SeekBar 666 # end MethodDeclaration
android.widget.SeekBar$setOnSeekBarChangeListener @0 <type>android.widget.SeekBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.SeekBar$getMax EXP <type>android.widget.SeekBar # begin MethodDeclaration
android.widget.SeekBar$getProgress EXP <type>android.widget.SeekBar # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP "Click Listener card=" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_title # begin MethodDeclaration
android.view.ViewGroup$findViewById <type>android.widget.TextView <type>android.view.ViewGroup it.gmariotti.cardslib.demo.extras.R.id.carddemo_extra_picasso_main_inner_secondaryTitle # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this HandlerRunnableActivity.this "I'm Working" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin MethodDeclaration
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.widget.ProgressBar.VISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ProgressBar$setProgress @0 <type>android.widget.ProgressBar EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ProgressBar$setVisibility @0 <type>android.widget.ProgressBar android.widget.ProgressBar.INVISIBLE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.GithubEvent <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ListView$getItemAtPosition <type>com.alorma.github.sdk.bean.dto.response.GithubEvent <type>android.widget.ListView <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$setTitle @0 <type>android.app.AlertDialog com.github.pockethub.R.string.navigate_to # begin Block
android.app.AlertDialog$setCanceledOnTouchOutside @0 <type>android.app.AlertDialog true # end Block
android.app.AlertDialog$setView @0 <type>android.app.AlertDialog <type>android.view.View # begin Block
android.app.AlertDialog$show @0 <type>android.app.AlertDialog # end Block
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog$dismiss @0 <type>android.app.AlertDialog # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$parse EXP this <type>String # begin MethodDeclaration
android.content.Intent$addCategory @0 <type>android.content.Intent android.content.Intent.CATEGORY_BROWSABLE # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Click on surface" android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$d @0 this EXP "click on surface" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "longClick on surface" android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$d @0 this EXP "longClick on surface" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Star" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Trash Bin" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Magnifier" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.star # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Star" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Trash Bin" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Magnifier" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Yo" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Click on surface" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.star # begin MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$getHeight EXP <type>android.view.View # MethodDeclaration
android.graphics.Color$parseColor EXP this "#dddddd" # MethodDeclaration
android.graphics.Color$parseColor EXP this "#4C535B" # MethodDeclaration
android.view.View$setBackgroundColor @0 <type>android.view.View <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Yo!" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this MyActivity.this "Click on surface" android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getItemId <type>int <type>android.view.MenuItem # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_PERMISSIONS EXP # begin MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_ACCESS_TOKEN ACCESS_TOKEN # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_USER_ID USER_ID # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putStringArrayList @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_PERMISSIONS EXP # begin MethodDeclaration
android.os.Bundle$putLong @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH EXP # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_ACCESS_TOKEN ACCESS_TOKEN # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_ACCESS_TOKEN <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH EXP # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_PERMISSIONS <type>java.util.ArrayList # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent com.facebook.internal.NativeProtocol.EXTRA_USER_ID <type>String # MethodDeclaration
android.content.Intent$getExtras EXP <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "didn't find signature at start of lfh" # begin end Block
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$open <type>android.os.ParcelFileDescriptor this <type>java.io.File android.os.ParcelFileDescriptor.MODE_READ_ONLY # begin end TryBlock
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String "Found Zip archive, but it looks empty" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "Not a Zip archive" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "empty archive?" # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeLong @0 <type>android.os.Parcel id # begin MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel title # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel url # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeString @0 <type>android.os.Parcel <type>String # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeInt @0 <type>android.os.Parcel <type>int # MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>User # end MethodDeclaration
android.os.Parcel$writeValue @0 <type>android.os.Parcel <type>CurrentUser # begin MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x00 # begin end Block
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel 0x01 # begin Block
android.os.Parcel$writeList @0 <type>android.os.Parcel <type>java.util.List # end Block
<END>
<S2>
<S1>
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # begin MethodDeclaration
android.os.Parcel$writeByte @0 <type>android.os.Parcel EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getTheme EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray R.styleable.com_facebook_login_view_com_facebook_confirm_logout true # begin TryBlock
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray R.styleable.com_facebook_login_view_com_facebook_login_text # TryBlock
android.content.res.TypedArray$getString <type>String <type>android.content.res.TypedArray R.styleable.com_facebook_login_view_com_facebook_logout_text # TryBlock
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray R.styleable.com_facebook_login_view_com_facebook_tooltip_mode EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources R.string.com_facebook_loginview_log_in_button_long # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources R.string.com_facebook_loginview_log_in_button # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources R.string.com_facebook_loginview_log_out_button # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString EXP <type>android.content.res.Resources R.string.com_facebook_loginview_log_out_button # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources R.string.com_facebook_loginview_log_in_button_long # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources R.string.com_facebook_loginview_log_in_button # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putInt @0 <type>android.os.Bundle "logging_in" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setMessage EXP <type>android.app.AlertDialog.Builder <type>String # begin end Block
android.app.AlertDialog.Builder$create EXP <type>android.app.AlertDialog.Builder # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.CoordinatorLayout$getDependencies <type>java.util.List <type>android.support.design.widget.CoordinatorLayout <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.support.design.widget.AppBarLayout$getMeasuredHeight EXP <type>android.support.design.widget.AppBarLayout # begin Block
android.support.design.widget.CoordinatorLayout$onMeasureChild @0 <type>android.support.design.widget.CoordinatorLayout <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setFitsSystemWindows @0 this <type>android.view.View true # begin end IfTrue
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle com.facebook.internal.NativeProtocol.EXTRA_DIALOG_COMPLETION_GESTURE_KEY # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle com.facebook.internal.NativeProtocol.RESULT_ARGS_DIALOG_COMPLETION_GESTURE_KEY # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.WEB_DIALOG_RESULT_PARAM_POST_ID # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.RESULT_POST_ID # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$getString EXP <type>android.os.Bundle ShareConstants.EXTRA_RESULT_POST_ID # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end TryBlock
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_SHARE_OUTCOME <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle com.facebook.internal.AnalyticsEvents.PARAMETER_SHARE_ERROR_MESSAGE <type>String # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.ParcelFileDescriptor$open <type>android.os.ParcelFileDescriptor this <type>java.io.File android.os.ParcelFileDescriptor.MODE_READ_ONLY # begin MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.facebook.GraphRequest.ParcelableResourceWithMimeType # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String <type>com.facebook.GraphRequest.ParcelableResourceWithMimeType # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getPath EXP <type>android.net.Uri # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.BitmapDrawable$setTileModeXY @0 <type>android.graphics.drawable.BitmapDrawable android.graphics.Shader.TileMode.REPEAT android.graphics.Shader.TileMode.REPEAT # begin Block
android.graphics.drawable.BitmapDrawable$setTileModeXY @0 <type>android.graphics.drawable.BitmapDrawable android.graphics.Shader.TileMode.REPEAT android.graphics.Shader.TileMode.REPEAT # end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$from EXP this EXP # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$measure @0 <type>android.view.View EXP EXP # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # MethodDeclaration
android.view.View$layout @0 <type>android.view.View 0 0 EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas <type>float <type>float # begin MethodDeclaration
android.graphics.Canvas$translate @0 <type>android.graphics.Canvas EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$parseColor <type>int this "#1E88E5" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getBoolean this.rounded <type>android.content.res.TypedArray R.styleable.BootstrapEditText_roundedCorners false # begin TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.AwesomeTextView_bootstrapBrand EXP # TryBlock
android.content.res.TypedArray$getInt <type>int <type>android.content.res.TypedArray R.styleable.BootstrapEditText_bootstrapSize EXP # end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.content.res.TypedArray$getInt EXP <type>android.content.res.TypedArray 0 android.view.Gravity.CENTER_VERTICAL # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle <type>String EXP # begin MethodDeclaration
android.os.Bundle$putBoolean @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY <type>boolean # MethodDeclaration
android.os.Bundle$putFloat @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY <type>float # MethodDeclaration
android.os.Bundle$putSerializable @0 <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY <type>com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getBoolean this.rounded <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.RoundableView.KEY # begin Block
android.os.Bundle$getFloat this.bootstrapSize <type>android.os.Bundle com.beardedhen.androidbootstrap.api.view.BootstrapSizeView.KEY # Block
android.os.Bundle$getSerializable <type>java.io.Serializable <type>android.os.Bundle com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand.KEY # end Block
android.os.Bundle$getParcelable <type>android.os.Parcelable <type>android.os.Bundle <type>String # begin end Block
<END>
<S2>
<S1>
android.net.Uri$toString EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$getScheme EXP <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$getVersion EXP <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getDatabasePath <type>java.io.File <type>android.content.Context <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getAssets EXP <type>android.content.Context # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase "PRAGMA foreign_keys=ON;" # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$beginTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$setTransactionSuccessful @0 <type>android.database.sqlite.SQLiteDatabase # begin end TryBlock
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$endTransaction @0 <type>android.database.sqlite.SQLiteDatabase # begin end Finally
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end Block
<END>
<S2>
<S1>
android.util.Pair$create EXP this EXP EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$execSQL @0 <type>android.database.sqlite.SQLiteDatabase <type>String # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$clearBindings @0 <type>android.database.sqlite.SQLiteStatement # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 1 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 2 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindLong @0 <type>android.database.sqlite.SQLiteStatement 3 <type>Long # begin end Block
<END>
<S2>
<S1>
android.database.sqlite.SQLiteStatement$bindString @0 <type>android.database.sqlite.SQLiteStatement 4 <type>String # begin end Block
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # begin MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getLong EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$isNull EXP <type>android.database.Cursor EXP # MethodDeclaration
android.database.Cursor$getString EXP <type>android.database.Cursor EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception loading references" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_list_card_layout_resourceID this.list_card_layout_resourceID # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String FIELD # begin end Block
<END>
<S2>
<S1>
android.view.View$getHeight <type>int <type>android.view.View # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.GONE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin MethodDeclaration
android.view.View$getParent <type>android.view.View <type>android.view.View # MethodDeclaration
android.view.View$getMeasuredWidth EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingLeft EXP <type>android.view.View # MethodDeclaration
android.view.View$getPaddingRight EXP <type>android.view.View # MethodDeclaration
android.view.View$measure @0 <type>android.view.View <type>int <type>int # MethodDeclaration
android.view.View$getMeasuredHeight EXP <type>android.view.View # end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
android.animation.ValueAnimator$addListener @0 <type>android.animation.ValueAnimator EXP # begin MethodDeclaration
android.animation.ValueAnimator$start @0 <type>android.animation.ValueAnimator # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getBottom <type>int <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getTop <type>int <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getParent <type>android.view.View <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.animation.ValueAnimator$ofInt <type>android.animation.ValueAnimator this <type>int <type>int # begin end MethodDeclaration
android.animation.ValueAnimator$addUpdateListener @0 <type>android.animation.ValueAnimator EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.animation.ValueAnimator$getAnimatedValue <type>int <type>android.animation.ValueAnimator # begin MethodDeclaration
android.view.View$getLayoutParams <type>android.view.ViewGroup.LayoutParams <type>android.view.View # MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.view.ViewGroup.LayoutParams # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext EXP <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this context # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity <type>float <type>android.view.ViewConfiguration # ConstructorDeclaration
android.support.v4.widget.ScrollerCompat$create <type>android.support.v4.widget.ScrollerCompat this context <type>android.view.animation.Interpolator # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
android.support.v4.widget.ScrollerCompat$startScroll @0 <type>android.support.v4.widget.ScrollerCompat <type>int <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getWidth <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.widget.ScrollerCompat$fling @0 <type>android.support.v4.widget.ScrollerCompat EXP EXP EXP EXP <type>int <type>int <type>int <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$computeScrollOffset <type>boolean <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$getCurrX <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.support.v4.widget.ScrollerCompat$getCurrY <type>int <type>android.support.v4.widget.ScrollerCompat # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.widget.ScrollerCompat$abortAnimation @0 <type>android.support.v4.widget.ScrollerCompat # begin Block
android.support.v4.widget.ScrollerCompat$isFinished <type>boolean <type>android.support.v4.widget.ScrollerCompat # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$post @0 <type>android.view.ViewGroup <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$canScrollHorizontally EXP this <type>android.view.View EXP # begin MethodDeclaration
android.support.v4.view.ViewCompat$canScrollVertically EXP this <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getScrollX <type>int <type>android.view.View # begin Block
android.view.View$getScrollY <type>int <type>android.view.View # Block
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # end Block
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getActionMasked <type>int this <type>android.view.MotionEvent # begin MethodDeclaration
android.support.v4.view.MotionEventCompat$getActionIndex <type>int this <type>android.view.MotionEvent # end MethodDeclaration
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getY <type>float <type>android.view.MotionEvent # Block
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent 0 # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$findPointerIndex <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # Block
android.view.View$getLeft EXP <type>android.view.View # Block
android.view.View$getTop EXP <type>android.view.View # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerCount <type>int this <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.MotionEventCompat$getPointerId <type>int this <type>android.view.MotionEvent <type>int # begin end Block
android.support.v4.view.MotionEventCompat$getX <type>float this <type>android.view.MotionEvent <type>int # begin Block
android.support.v4.view.MotionEventCompat$getY <type>float this <type>android.view.MotionEvent <type>int # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 <type>float # begin MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getXVelocity EXP this <type>android.view.VelocityTracker <type>int # MethodDeclaration
android.support.v4.view.VelocityTrackerCompat$getYVelocity EXP this <type>android.view.VelocityTracker <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLeft <type>int <type>android.view.View # begin MethodDeclaration
android.view.View$getTop <type>int <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$offsetLeftAndRight @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$offsetTopAndBottom @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.View$getLeft EXP <type>android.view.View # begin MethodDeclaration
android.view.View$getRight EXP <type>android.view.View # MethodDeclaration
android.view.View$getTop EXP <type>android.view.View # MethodDeclaration
android.view.View$getBottom EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildCount <type>int <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getChildAt <type>android.view.View <type>android.view.ViewGroup EXP # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setImageBitmap @0 <type>android.widget.ImageView <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # begin end Block
<END>
<S2>
<S1>
android.content.Context$getResources EXP <type>android.content.Context # begin Block
android.graphics.BitmapFactory$decodeResource <type>android.graphics.Bitmap this EXP <type>int # end Block
<END>
<S2>
<S1>
android.widget.TextView$getResources EXP <type>android.widget.TextView # begin end Block
android.widget.TextView$getText EXP <type>android.widget.TextView # begin Block
android.text.SpannableStringBuilder$getSpanStart <type>int <type>android.text.SpannableStringBuilder <type>in.uncod.android.bypass.style.ImageLoadingSpan # Block
android.text.SpannableStringBuilder$getSpanEnd <type>int <type>android.text.SpannableStringBuilder <type>in.uncod.android.bypass.style.ImageLoadingSpan # end Block
android.text.SpannableStringBuilder$removeSpan @0 <type>android.text.SpannableStringBuilder <type>in.uncod.android.bypass.style.ImageLoadingSpan # begin Block
android.widget.TextView$getParent EXP <type>android.widget.TextView # Block
android.transition.TransitionManager$beginDelayedTransition @0 this EXP # Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>android.text.SpannableStringBuilder # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # Block
android.widget.TextView$getWidth EXP <type>android.widget.TextView # Block
android.widget.TextView$getWidth EXP <type>android.widget.TextView # Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # Block
android.graphics.drawable.BitmapDrawable$setBounds @0 <type>android.graphics.drawable.BitmapDrawable 0 0 EXP EXP # end Block
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$setSpan @0 <type>android.text.SpannableStringBuilder <type>android.text.style.ImageSpan <type>int <type>int android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getDeviceId EXP <type>android.view.MotionEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getDeviceId EXP <type>android.view.KeyEvent # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.InputDevice$getDevice <type>android.view.InputDevice this <type>int # begin end MethodDeclaration
android.view.InputDevice$getName <type>String <type>android.view.InputDevice # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.InputDevice$getSources EXP <type>android.view.InputDevice # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end IfTrue
<END>
<S2>
<S1>
android.app.Activity$getIntent EXP <type>android.app.Activity # begin end IfTrue
<END>
<S2>
<S1>
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.TRANSLATION_Y EXP # begin Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.ALPHA 0.54f # Block
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.Animator this FIELD EXP EXP # Block
android.transition.ArcMotion$getPath EXP <type>android.transition.ArcMotion <type>int <type>int <type>int <type>int # Block
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this FIELD android.view.View.TRANSLATION_X android.view.View.TRANSLATION_Y EXP # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_X 3f # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_Y 3f # Block
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.Animator this FIELD EXP EXP # Block
android.animation.ObjectAnimator$ofInt <type>android.animation.ObjectAnimator this FIELD io.plaidapp.util.ViewUtils.IMAGE_ALPHA 255 # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.ObjectAnimator # Block
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 300 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # Block
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.TRANSLATION_Y 0f # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.ALPHA 1f # Block
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.Animator this FIELD EXP EXP # Block
android.transition.ArcMotion$getPath EXP <type>android.transition.ArcMotion <type>int <type>int 0 0 # Block
android.animation.ObjectAnimator$ofFloat <type>android.animation.Animator this FIELD android.view.View.TRANSLATION_X android.view.View.TRANSLATION_Y EXP # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_X 1f # Block
android.animation.PropertyValuesHolder$ofFloat EXP this android.view.View.SCALE_Y 1f # Block
android.animation.ObjectAnimator$ofPropertyValuesHolder <type>android.animation.Animator this FIELD EXP EXP # Block
android.animation.ObjectAnimator$ofInt <type>android.animation.ObjectAnimator this FIELD io.plaidapp.util.ViewUtils.IMAGE_ALPHA 138 # Block
android.animation.AnimatorSet$playTogether @0 <type>android.animation.AnimatorSet <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.Animator <type>android.animation.ObjectAnimator # Block
android.animation.AnimatorSet$setDuration @0 <type>android.animation.AnimatorSet 300 # Block
android.view.animation.AnimationUtils$loadInterpolator EXP this EXP android.R.interpolator.fast_out_slow_in # Block
android.animation.AnimatorSet$setInterpolator @0 <type>android.animation.AnimatorSet EXP # Block
android.animation.AnimatorSet$setStartDelay @0 <type>android.animation.AnimatorSet 500 # Block
android.animation.AnimatorSet$playSequentially @0 <type>android.animation.AnimatorSet <type>android.animation.AnimatorSet <type>android.animation.AnimatorSet # end Block
android.animation.AnimatorSet$addListener @0 <type>android.animation.AnimatorSet EXP # begin Block
android.animation.AnimatorSet$start @0 <type>android.animation.AnimatorSet # end Block
<END>
<S2>
<S1>
android.os.SystemClock$currentThreadTimeMillis <type>long this # begin end MethodDeclaration
android.os.SystemClock$currentThreadTimeMillis EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.database.sqlite.SQLiteDatabase$compileStatement EXP <type>android.database.sqlite.SQLiteDatabase "SELECT 42" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.net.Uri$withAppendedPath <type>android.net.Uri this android.provider.MediaStore.Video.Media.EXTERNAL_CONTENT_URI "123" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception deleting comment on gist" <type>Exception # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getAllocationByteCount EXP <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getByteCount EXP <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # end Block
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Button$setOnClickListener @0 <type>android.widget.Button EXP # begin end Block
<END>
<S2>
<S1>
android.widget.Button$setVisibility @0 <type>android.widget.Button android.view.View.GONE # begin end Block
<END>
<S2>
<S1>
android.content.Intent$setType @0 <type>android.content.Intent "text/plain" # begin end MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_TEXT <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent android.content.Intent.EXTRA_SUBJECT <type>CharSequence # begin end IfTrue
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent android.content.Intent.EXTRA_TEXT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$getStringExtra EXP <type>android.content.Intent android.content.Intent.EXTRA_SUBJECT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBarActivity$getResources EXP <type>android.support.v7.app.ActionBarActivity # begin end Block
android.widget.ImageButton$setOutlineProvider @0 <type>android.widget.ImageButton EXP # begin Block
android.widget.ImageButton$setClipToOutline @0 <type>android.widget.ImageButton true # end Block
<END>
<S2>
<S1>
android.graphics.Outline$setOval @0 <type>android.graphics.Outline 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v7.app.ActionBarDrawerToggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.ActivityOptions$toBundle EXP <type>android.app.ActivityOptions # begin MethodDeclaration
android.support.v7.app.ActionBarActivity$startActivity @0 <type>android.support.v7.app.ActionBarActivity <type>android.content.Intent EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBarActivity$getWindow EXP <type>android.support.v7.app.ActionBarActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBarActivity$getWindow EXP <type>android.support.v7.app.ActionBarActivity # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setElevation @0 <type>android.view.View <type>float # begin end Block
<END>
<S2>
<S1>
android.content.Context$startService @0 <type>android.content.Context EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$parse EXP this com.google.samples.apps.iosched.provider.ScheduleContract.CONTENT_AUTHORITY # begin end TryBlock
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setOnRefreshListener @0 <type>android.support.v4.widget.SwipeRefreshLayout EXP # begin MethodDeclaration
android.support.v4.widget.DrawerLayout$setDrawerListener @0 <type>android.support.v4.widget.DrawerLayout <type>android.support.v4.app.ActionBarDrawerToggle # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.Button$setOnClickListener @0 <type>android.widget.Button <type>android.view.View.OnClickListener # MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox <type>android.widget.CompoundButton.OnCheckedChangeListener # MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox <type>android.widget.CompoundButton.OnCheckedChangeListener # MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox <type>android.widget.CompoundButton.OnCheckedChangeListener # MethodDeclaration
android.widget.CheckBox$setOnCheckedChangeListener @0 <type>android.widget.CheckBox <type>android.widget.CompoundButton.OnCheckedChangeListener # end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.widget.SwipeRefreshLayout$setRefreshing @0 <type>android.support.v4.widget.SwipeRefreshLayout false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.ActionBarDrawerToggle$syncState @0 <type>android.support.v4.app.ActionBarDrawerToggle # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.ActionBarDrawerToggle$onConfigurationChanged @0 <type>android.support.v4.app.ActionBarDrawerToggle <type>android.content.res.Configuration # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this this EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin Block
android.view.View$setAlpha @0 <type>android.view.View EXP # end Block
<END>
<S2>
<S1>
android.view.View$setAlpha @0 <type>android.view.View 1 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_city # begin MethodDeclaration
android.view.View$findViewById <type>android.widget.ImageView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_icon # MethodDeclaration
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_weather_temperature # MethodDeclaration
android.widget.ImageView$setImageResource @0 <type>android.widget.ImageView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView FIELD # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.os.Looper$getMainLooper EXP this # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$getStyle EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Paint$getColor EXP <type>android.graphics.Paint # begin MethodDeclaration
android.graphics.Paint$getStyle EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$getStrokeWidth EXP <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.view.SurfaceHolder$addCallback @0 <type>android.view.SurfaceHolder this # begin ConstructorDeclaration
android.view.SurfaceHolder$setType @0 <type>android.view.SurfaceHolder android.view.SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS # end ConstructorDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$setPreviewDisplay @0 <type>android.hardware.Camera <type>android.view.SurfaceHolder # begin TryBlock
android.hardware.Camera$startPreview @0 <type>android.hardware.Camera # end TryBlock
<END>
<S2>
<S1>
android.view.SurfaceHolder$removeCallback @0 <type>android.view.SurfaceHolder this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.Camera$stopPreview @0 <type>android.hardware.Camera # begin end TryBlock
<END>
<S2>
<S1>
android.hardware.Camera$setPreviewDisplay @0 <type>android.hardware.Camera <type>android.view.SurfaceHolder # begin TryBlock
android.hardware.Camera$startPreview @0 <type>android.hardware.Camera # end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$compress <type>boolean <type>android.graphics.Bitmap <type>android.graphics.Bitmap.CompressFormat <type>int <type>java.io.OutputStream # begin end TryBlock
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_shadow <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String <type>String <type>Throwable # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String <type>String <type>Throwable # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String <type>String <type>Throwable # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String <type>String <type>Throwable # begin end Block
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String <type>String <type>Throwable # begin end SwitchCase
<END>
<S2>
<S1>
android.util.Log$wtf @0 this <type>String <type>String <type>Throwable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.HandlerThread$start @0 <type>android.os.HandlerThread # begin ConstructorDeclaration
android.os.HandlerThread$getLooper EXP <type>android.os.HandlerThread # ConstructorDeclaration
android.os.Looper$getMainLooper EXP this # end ConstructorDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$post @0 <type>android.view.View <type>Runnable # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "MaterialDrawer" "you have not specified a ImageLoader implementation through the DrawerImageLoader.init(IDrawerImageLoader) method" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.SystemClock$uptimeMillis <type>long this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_native_misc_card <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$setElevation @0 this <type>android.view.View <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackground @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$setBackgroundDrawable @0 <type>android.view.View <type>it.gmariotti.cardslib.demo.drawable.CircleDrawable # begin end IfFalse
<END>
<S2>
<S1>
android.view.View$setOutlineProvider @0 <type>android.view.View EXP # begin Block
android.view.View$setClipToOutline @0 <type>android.view.View true # end Block
<END>
<S2>
<S1>
android.graphics.Outline$setOval @0 <type>android.graphics.Outline 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getPackageManager EXP <type>android.content.Context # begin TryBlock
android.content.Context$getPackageName EXP <type>android.content.Context # end TryBlock
<END>
<S2>
<S1>
android.widget.TextView$setTextSize @0 <type>android.widget.TextView 24 # begin Block
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # Block
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setDisplayHomeAsUpEnabled @0 <type>android.support.v7.app.ActionBar true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar FIELD # begin end Block
<END>
<S2>
<S1>
android.support.v7.app.ActionBar$setSubtitle @0 <type>android.support.v7.app.ActionBar com.github.pockethub.R.string.anonymous # begin end IfFalse
<END>
<S2>
<S1>
android.content.Intent$addFlags @0 <type>android.content.Intent EXP # begin end Block
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$newInstance <type>android.net.http.AndroidHttpClient this "" # begin end ClassDeclaration
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$execute EXP <type>android.net.http.AndroidHttpClient <type>org.apache.http.client.methods.HttpGet <type>XMLResponseHandler # begin end TryBlock
<END>
<S2>
<S1>
android.net.http.AndroidHttpClient$close @0 <type>android.net.http.AndroidHttpClient # begin end IfTrue
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin Block
android.view.View$hasText EXP <type>android.view.View # end Block
android.view.View$getMeasuredHeight EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View <type>int 0 <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$setPadding @0 <type>android.view.View EXP 0 <type>int 0 # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$measure @0 <type>android.view.View EXP <type>int # begin end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end MethodDeclaration
android.view.View$measure @0 <type>android.view.View EXP <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$measure @0 <type>android.view.View <type>int <type>int # begin Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin end Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # begin Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int <type>int <type>int # end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$getLayoutParams <type>LayoutParams <type>android.view.View # begin end Block
android.view.View$getMeasuredWidth <type>int <type>android.view.View # begin Block
android.view.View$getMeasuredHeight <type>int <type>android.view.View # Block
android.view.View$layout @0 <type>android.view.View <type>int <type>int EXP EXP # end Block
<END>
<S2>
<S1>
android.view.View$needsDividerAfter <type>boolean <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$needsDividerBefore <type>boolean <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getResourceId <type>int <type>android.content.res.TypedArray it.gmariotti.cardslib.library.R.styleable.card_options_card_shadow_layout_resourceID <type>int # begin end TryBlock
<END>
<S2>
<S1>
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # begin end Finally
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int this true # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # begin ConstructorDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # ConstructorDeclaration
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable 0 0 EXP EXP # ConstructorDeclaration
android.graphics.drawable.Drawable$getIntrinsicWidth EXP <type>android.graphics.drawable.Drawable # ConstructorDeclaration
android.graphics.drawable.Drawable$getIntrinsicHeight EXP <type>android.graphics.drawable.Drawable # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.RectF$set @0 <type>android.graphics.RectF <type>int <type>int <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Matrix$setRectToRect @0 <type>android.graphics.Matrix <type>android.graphics.RectF this.bounds android.graphics.Matrix.ScaleToFit.CENTER # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setChangingConfigurations @0 <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getChangingConfigurations EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setDither @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setFilterBitmap @0 <type>android.graphics.drawable.Drawable <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCallback EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getAlpha EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>int <type>android.graphics.PorterDuff.Mode # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$clearColorFilter @0 <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getCurrent EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setVisible EXP <type>android.graphics.drawable.Drawable <type>boolean <type>boolean # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getMinimumWidth EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getMinimumHeight EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getPadding EXP <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$invalidateSelf @0 <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$unscheduleSelf @0 <type>android.graphics.drawable.Drawable <type>Runnable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$scheduleSelf @0 <type>android.graphics.drawable.Drawable <type>Runnable <type>long # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$save @0 <type>android.graphics.Canvas # begin MethodDeclaration
android.graphics.Canvas$concat @0 <type>android.graphics.Canvas <type>android.graphics.Matrix # MethodDeclaration
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # MethodDeclaration
android.graphics.Canvas$restore @0 <type>android.graphics.Canvas # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setAlpha @0 <type>android.graphics.drawable.Drawable <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setColorFilter @0 <type>android.graphics.drawable.Drawable <type>android.graphics.ColorFilter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$getOpacity EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$mutate <type>android.graphics.drawable.Drawable <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$newDrawable EXP <type>android.graphics.drawable.Drawable # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$newDrawable EXP <type>android.graphics.drawable.Drawable <type>android.content.res.Resources # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$peekDecorView <type>android.view.View <type>android.view.Window # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.Window$peekDecorView EXP <type>android.view.Window # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.ContentResolver$getType EXP <type>android.content.ContentResolver EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getContentResolver EXP <type>android.content.Context # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.R.layout.demo_fragment_changevalue <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuInflater$inflate @0 <type>android.view.MenuInflater it.gmariotti.cardslib.demo.R.menu.changevalue <type>android.view.Menu # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # begin MethodDeclaration
android.graphics.drawable.StateListDrawable$addState @0 <type>android.graphics.drawable.StateListDrawable EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_LONG # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_title # begin Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_memeber # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_subtitle # Block
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.R.id.carddemo_suggested_community # end Block
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_title # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_member # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_subtitle # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView it.gmariotti.cardslib.demo.R.string.demo_suggested_community # begin end IfTrue
<END>
<S2>
<S1>
android.util.SparseArray$keyAt <type>int <type>android.util.SparseArray 0 # begin Block
android.util.SparseArray$get <type>com.google.android.gms.vision.face.Face <type>android.util.SparseArray <type>int # end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Face detector dependencies are not yet available." # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources com.morristaedt.mirror.R.string.it_gets_better # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources com.morristaedt.mirror.R.string.looking_good # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getString <type>String <type>android.content.res.Resources com.morristaedt.mirror.R.string.something_special # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Finally
<END>
<S2>
<S1>
android.util.Base64$decode EXP this <type>String android.util.Base64.DEFAULT # begin end Block
<END>
<S2>
<S1>
android.net.Uri$decode <type>String this <type>String # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources R.color.placeholder # begin end Block
<END>
<S2>
<S1>
android.content.res.Resources$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.Resources R.color.error # begin end Block
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin MethodDeclaration
android.view.View$setLayoutParams @0 <type>android.view.View <type>android.widget.AbsListView.LayoutParams # MethodDeclaration
android.view.View$setClickable @0 <type>android.view.View true # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setBackgroundColor @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # begin MethodDeclaration
android.widget.TextView$setId @0 <type>android.widget.TextView android.R.id.text1 # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.LinearLayout # MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.LinearLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.LinearLayout$setId @0 <type>android.widget.LinearLayout <type>int # begin MethodDeclaration
android.widget.LinearLayout$addView @0 <type>android.widget.LinearLayout <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setId @0 <type>android.widget.TextView android.R.id.text2 # MethodDeclaration
android.widget.TextView$setText @0 <type>android.widget.TextView <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$from <type>android.view.LayoutInflater this mActivity # begin MethodDeclaration
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater <type>int null # end MethodDeclaration
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate EXP <type>android.view.LayoutInflater it.gmariotti.cardslib.demo.extras.R.layout.demo_extras_fragment_basestaggeredgrid <type>android.view.ViewGroup false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.MenuItem$getTitle EXP <type>android.view.MenuItem # begin MethodDeclaration
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP EXP android.widget.Toast.LENGTH_SHORT # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById <type>android.widget.TextView <type>android.view.View it.gmariotti.cardslib.demo.extras.R.id.carddemo_extras_basestaggered_main_inner_simple_title # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.widget.ImageView$getLayoutParams EXP <type>android.widget.ImageView # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setBackgroundColor @0 <type>android.widget.ImageView EXP # begin end IfTrue
<END>
<S2>
<S1>
android.widget.TextView$setOnKeyListener @0 <type>android.widget.TextView this # begin MethodDeclaration
android.widget.TextView$setLayoutParams @0 <type>android.widget.TextView <type>android.widget.FrameLayout.LayoutParams # MethodDeclaration
android.widget.TextView$setFocusable @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$setFocusableInTouchMode @0 <type>android.widget.TextView true # MethodDeclaration
android.widget.TextView$getImeOptions EXP <type>android.widget.TextView # MethodDeclaration
android.widget.TextView$setImeOptions @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.FrameLayout$setLayoutParams @0 <type>android.widget.FrameLayout <type>android.view.ViewGroup.LayoutParams # MethodDeclaration
android.widget.FrameLayout$addView @0 <type>android.widget.FrameLayout <type>android.widget.TextView # MethodDeclaration
android.widget.FrameLayout$setOnTouchListener @0 <type>android.widget.FrameLayout this # MethodDeclaration
android.app.Dialog$setContentView @0 <type>android.app.Dialog <type>android.widget.FrameLayout # end MethodDeclaration
<END>
<S2>
<S1>
android.text.method.ArrowKeyMovementMethod$getInstance EXP this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getKeyCode EXP <type>android.view.KeyEvent # begin MethodDeclaration
android.util.Log$d @0 this "Test" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.view.KeyEvent$getKeyCode EXP <type>android.view.KeyEvent # begin MethodDeclaration
android.util.Log$d @0 this "Test" EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$dismiss @0 <type>android.app.Dialog # begin end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end Block
<END>
<S2>
<S1>
android.app.Dialog$show @0 <type>android.app.Dialog # begin end MethodDeclaration
android.os.Handler$post @0 <type>android.os.Handler EXP # begin MethodDeclaration
android.app.Dialog$getWindow EXP <type>android.app.Dialog # MethodDeclaration
android.view.View$getViewTreeObserver EXP <type>android.view.View # end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$getWindow EXP <type>android.app.Dialog # begin MethodDeclaration
android.content.Context$getSystemService <type>AndroidInput <type>android.content.Context android.content.Context.INPUT_METHOD_SERVICE # end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$getLocationOnScreen @0 <type>android.view.View <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Dialog$dismiss @0 <type>android.app.Dialog # begin end Block
<END>
<S2>
<S1>
android.app.Dialog$dismiss @0 <type>android.app.Dialog # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "charAt" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "length" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "subSequence" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getChars" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "removeSpan" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "setSpan" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getSpanEnd" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getSpanFlags" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getSpanStart" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getSpans" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "nextSpanTransition" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "clear" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "clearSpanes" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "getFilters" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "Editable" "setFilters" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setAdjustViewBounds @0 <type>android.widget.ImageView true # begin ConstructorDeclaration
android.widget.ImageView$setScaleType @0 <type>android.widget.ImageView android.widget.ImageView.ScaleType.CENTER_CROP # end ConstructorDeclaration
android.widget.ImageView$setLayoutParams @0 <type>android.widget.ImageView <type>LayoutParams # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.widget.ImageView$setImageDrawable @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "rippleColor" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeResourceValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "iconDrawable" EXP # begin end MethodDeclaration
android.util.AttributeSet$getAttributeBooleanValue <type>boolean <type>android.util.AttributeSet MATERIALDESIGNXML "animate" false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue background <type>android.util.AttributeSet ANDROIDXML "background" EXP # begin end Block
<END>
<S2>
<S1>
android.util.AttributeSet$getAttributeIntValue <type>int <type>android.util.AttributeSet MATERIALDESIGNXML "rippleColor" EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas EXP <type>android.graphics.Rect <type>android.graphics.Rect null # begin end Block
<END>
<S2>
<S1>
android.widget.ImageView$setBackground @0 <type>android.widget.ImageView <type>android.graphics.drawable.Drawable # begin end TryBlock
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this EXP EXP android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Paint$setAntiAlias @0 <type>android.graphics.Paint true # MethodDeclaration
android.graphics.Canvas$drawARGB @0 <type>android.graphics.Canvas 0 0 0 0 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint <type>int # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getHeight EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # MethodDeclaration
android.graphics.Canvas$drawCircle @0 <type>android.graphics.Canvas EXP EXP EXP <type>android.graphics.Paint # MethodDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap <type>android.graphics.Rect <type>android.graphics.Rect <type>android.graphics.Paint # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Intent$putExtra @0 <type>android.content.Intent com.donnfelker.android.bootstrap.authenticator.BootstrapAuthenticatorActivity.PARAM_AUTHTOKEN_TYPE <type>String # begin MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE <type>android.accounts.AccountAuthenticatorResponse # MethodDeclaration
android.os.Bundle$putParcelable @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_INTENT <type>android.content.Intent # end MethodDeclaration
<END>
<S2>
<S1>
android.accounts.AccountManager$get EXP this <type>android.content.Context # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_NAME FIELD # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_ACCOUNT_TYPE com.donnfelker.android.bootstrap.core.Constants.Auth.BOOTSTRAP_ACCOUNT_TYPE # MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_AUTHTOKEN <type>String # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putBoolean @0 <type>android.os.Bundle android.accounts.AccountManager.KEY_BOOLEAN_RESULT false # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$getWidth EXP <type>android.graphics.Bitmap # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this "WTF" <type>String # begin end IfTrue
<END>
<S2>
<S1>
android.util.Base64$encodeToString <type>String this <type>byte 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Base64$decode <type>byte this <type>String 0 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mAxisLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mAxisLabelPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawLine @0 <type>android.graphics.Canvas EXP EXP EXP EXP mGridPaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Path$moveTo @0 <type>android.graphics.Path EXP EXP # begin Block
android.graphics.Path$lineTo @0 <type>android.graphics.Path EXP EXP # Block
android.graphics.Canvas$drawPath @0 <type>android.graphics.Canvas <type>android.graphics.Path mLimitLinePaint # Block
android.graphics.Path$reset @0 <type>android.graphics.Path # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas <type>String EXP EXP mLimitLinePaint # begin end Block
<END>
<S2>
<S1>
android.view.View$setVisibility @0 <type>android.view.View android.view.View.VISIBLE # begin end Block
<END>
<S2>
<S1>
android.view.View$setClickable @0 <type>android.view.View true # begin end MethodDeclaration
android.view.View$setOnClickListener @0 <type>android.view.View EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$putParcelable @0 <type>android.os.Bundle com.github.pockethub.Intents.EXTRA_GIST_FILE <type>com.alorma.github.sdk.bean.dto.response.GistFile # begin MethodDeclaration
android.support.v4.app.Fragment$setArguments @0 <type>android.support.v4.app.Fragment <type>android.os.Bundle # end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.os.Vibrator <type>android.content.Context android.content.Context.VIBRATOR_SERVICE # begin end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.View$setOnKeyListener @0 <type>android.view.View this # begin Block
android.view.View$setOnTouchListener @0 <type>android.view.View this # Block
android.view.View$setFocusable @0 <type>android.view.View true # Block
android.view.View$setFocusableInTouchMode @0 <type>android.view.View true # Block
android.view.View$requestFocus @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.AlertDialog.Builder$setTitle @0 <type>android.app.AlertDialog.Builder <type>String # begin MethodDeclaration
android.widget.EditText$setHint @0 <type>android.widget.EditText <type>String # MethodDeclaration
android.widget.EditText$setText @0 <type>android.widget.EditText <type>String # MethodDeclaration
android.widget.EditText$setSingleLine @0 <type>android.widget.EditText # MethodDeclaration
android.app.AlertDialog.Builder$setView @0 <type>android.app.AlertDialog.Builder <type>android.widget.EditText # MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context android.R.string.ok # end MethodDeclaration
android.app.AlertDialog.Builder$setPositiveButton @0 <type>android.app.AlertDialog.Builder EXP EXP # begin MethodDeclaration
android.content.Context$getString EXP <type>android.content.Context android.R.string.cancel # end MethodDeclaration
android.app.AlertDialog.Builder$setNegativeButton @0 <type>android.app.AlertDialog.Builder EXP EXP # begin end MethodDeclaration
android.app.AlertDialog.Builder$setOnCancelListener @0 <type>android.app.AlertDialog.Builder EXP # begin MethodDeclaration
android.app.AlertDialog.Builder$show @0 <type>android.app.AlertDialog.Builder # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.EditText$getText EXP <type>android.widget.EditText # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setFocusableInTouchMode @0 <type>android.view.View true # begin Block
android.view.View$requestFocus @0 <type>android.view.View # end Block
<END>
<S2>
<S1>
android.os.Handler$post @0 <type>android.os.Handler EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.hardware.SensorManager <type>android.content.Context android.content.Context.INPUT_METHOD_SERVICE # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$setFocusable @0 <type>android.view.View true # begin Block
android.view.View$setFocusableInTouchMode @0 <type>android.view.View true # Block
android.hardware.SensorManager$showSoftInput @0 <type>android.hardware.SensorManager EXP 0 # end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$hideSoftInputFromWindow @0 <type>android.hardware.SensorManager EXP 0 # begin end Block
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$vibrate @0 <type>android.os.Vibrator <type>long <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.os.Vibrator$cancel @0 <type>android.os.Vibrator # begin end MethodDeclaration
<END>
<S2>
<S1>
android.hardware.SensorManager$getOrientation @0 this <type>float <type>float # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$getRotationMatrix @0 this <type>float null <type>float <type>float # begin end MethodDeclaration
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.hardware.SensorManager <type>android.content.Context android.content.Context.SENSOR_SERVICE # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$getSensorList EXP <type>android.hardware.SensorManager android.hardware.Sensor.TYPE_ACCELEROMETER # begin Block
android.hardware.SensorManager$registerListener <type>boolean <type>android.hardware.SensorManager <type>android.hardware.SensorEventListener <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_GAME # end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$getDefaultSensor <type>android.hardware.Sensor <type>android.hardware.SensorManager android.hardware.Sensor.TYPE_MAGNETIC_FIELD # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService <type>android.hardware.SensorManager <type>android.content.Context android.content.Context.SENSOR_SERVICE # begin end IfTrue
<END>
<S2>
<S1>
android.hardware.SensorManager$registerListener <type>boolean <type>android.hardware.SensorManager <type>android.hardware.SensorEventListener <type>android.hardware.Sensor android.hardware.SensorManager.SENSOR_DELAY_GAME # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$unregisterListener @0 <type>android.hardware.SensorManager <type>android.hardware.SensorEventListener # begin end Block
<END>
<S2>
<S1>
android.hardware.SensorManager$unregisterListener @0 <type>android.hardware.SensorManager <type>android.hardware.SensorEventListener # begin end Block
<END>
<S2>
<S1>
android.os.Vibrator$hasVibrator EXP <type>android.os.Vibrator # begin end IfTrue
<END>
<S2>
<S1>
android.content.Context$getWindowManager EXP <type>android.content.Context # begin end Block
<END>
<S2>
<S1>
android.content.Context$getSystemService EXP <type>android.content.Context android.content.Context.WINDOW_SERVICE # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.fragment_scrollview <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>com.github.ksoichiro.android.observablescrollview.ObservableScrollView <type>android.view.View R.id.scroll # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getInt <type>int <type>android.os.Bundle <type>String 0 # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewPager$setAdapter @0 <type>android.support.v4.view.ViewPager EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$getContext <type>android.content.Context <type>android.view.ViewGroup # begin MethodDeclaration
android.view.LayoutInflater$from EXP this <type>android.content.Context # MethodDeclaration
android.view.ViewGroup$addView @0 <type>android.view.ViewGroup <type>com.handmark.pulltorefresh.library.PullToRefreshListView android.view.ViewGroup.LayoutParams.MATCH_PARENT android.view.ViewGroup.LayoutParams.MATCH_PARENT # end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewGroup$removeView @0 <type>android.view.ViewGroup <type>Object # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.v4.app.FragmentTransaction$add @0 <type>android.support.v4.app.FragmentTransaction R.id.created <type>android.support.v4.app.Fragment # begin Block
android.support.v4.app.FragmentTransaction$commit @0 <type>android.support.v4.app.FragmentTransaction # end Block
<END>
<S2>
<S1>
android.os.Bundle$putCharSequence @0 <type>android.os.Bundle "label" <type>CharSequence # begin end MethodDeclaration
<END>
<S2>
<S1>
android.app.Activity$obtainStyledAttributes <type>android.content.res.TypedArray <type>android.app.Activity <type>android.util.AttributeSet R.styleable.FragmentArguments # begin MethodDeclaration
android.content.res.TypedArray$getText <type>CharSequence <type>android.content.res.TypedArray R.styleable.FragmentArguments_android_label # MethodDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # end MethodDeclaration
<END>
<S2>
<S1>
android.os.Bundle$getCharSequence <type>CharSequence <type>android.os.Bundle "label" # begin end Block
<END>
<S2>
<S1>
android.view.LayoutInflater$inflate <type>android.view.View <type>android.view.LayoutInflater R.layout.hello_world <type>android.view.ViewGroup false # begin MethodDeclaration
android.view.View$findViewById <type>android.view.View <type>android.view.View R.id.text # MethodDeclaration
android.view.View$setText @0 <type>android.view.View EXP # MethodDeclaration
android.view.View$setBackgroundDrawable @0 <type>android.view.View EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this "greenDAO" EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$e @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$i @0 this <type>String EXP EXP # begin end Block
<END>
<S2>
<S1>
android.net.Uri$getPathSegments <type>java.util.List <type>android.net.Uri # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDecoratedBaseAdapter <type>android.widget.BaseAdapter <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$setListViewWrapper @0 <type>android.widget.BaseAdapter <type>com.nhaarman.listviewanimations.util.ListViewWrapper # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$getCount EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItem EXP <type>android.widget.BaseAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItemId EXP <type>android.widget.BaseAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getView EXP <type>android.widget.BaseAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$areAllItemsEnabled EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getDropDownView EXP <type>android.widget.BaseAdapter <type>int <type>android.view.View <type>android.view.ViewGroup # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getItemViewType EXP <type>android.widget.BaseAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getViewTypeCount EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$hasStableIds EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEmpty EXP <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$isEnabled EXP <type>android.widget.BaseAdapter <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetChanged @0 <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$notifyDataSetInvalidated @0 <type>android.widget.BaseAdapter # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$registerDataSetObserver @0 <type>android.widget.BaseAdapter <type>android.database.DataSetObserver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$unregisterDataSetObserver @0 <type>android.widget.BaseAdapter <type>android.database.DataSetObserver # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.BaseAdapter$getPositionForSection <type>int <type>android.widget.BaseAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$getSectionForPosition <type>int <type>android.widget.BaseAdapter <type>int # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$getSections <type>Object <type>android.widget.BaseAdapter # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$swapItems @0 <type>android.widget.BaseAdapter <type>int <type>int # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "ListViewAnimations" FIELD # begin end Block
<END>
<S2>
<S1>
android.widget.BaseAdapter$add @0 <type>android.widget.BaseAdapter <type>int <type>Object # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this "ListViewAnimations" FIELD # begin end Block
<END>
<S2>
<S1>
android.os.Bundle$putString @0 <type>android.os.Bundle "access_token" "AnImaginaryTokenValue" # begin MethodDeclaration
android.os.Bundle$putString @0 <type>android.os.Bundle "expires_in" "60" # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.TextView$setText @0 <type>android.widget.TextView <type>CharSequence # begin MethodDeclaration
android.widget.TextView$setMovementMethod @0 <type>android.widget.TextView EXP # MethodDeclaration
android.widget.TextView$setFocusable @0 <type>android.widget.TextView false # MethodDeclaration
android.widget.TextView$setClickable @0 <type>android.widget.TextView false # MethodDeclaration
android.widget.TextView$setLongClickable @0 <type>android.widget.TextView false # end MethodDeclaration
<END>
<S2>
<S1>
android.text.Html$fromHtml <type>android.text.SpannableStringBuilder this <type>String # begin end MethodDeclaration
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin MethodDeclaration
android.text.SpannableStringBuilder$getSpans <type>android.text.style.URLSpan <type>android.text.SpannableStringBuilder 0 EXP android.text.style.URLSpan # end MethodDeclaration
<END>
<S2>
<S1>
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # begin Block
android.text.SpannableStringBuilder$length EXP <type>android.text.SpannableStringBuilder # Block
android.text.SpannableStringBuilder$delete <type>android.text.SpannableStringBuilder <type>android.text.SpannableStringBuilder EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Typeface$create EXP this TYPEFACE TYPEFACE_STYLE # begin MethodDeclaration
android.text.TextPaint$setTypeface @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.text.TextPaint$setTextSize @0 <type>android.text.TextPaint EXP # MethodDeclaration
android.text.TextPaint$setColor @0 <type>android.text.TextPaint badgeTextColor # MethodDeclaration
android.text.TextPaint$getTextBounds @0 <type>android.text.TextPaint badgeText 0 EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$height EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Rect$width EXP <type>android.graphics.Rect # MethodDeclaration
android.graphics.Bitmap$createBitmap badge this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # MethodDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint badgeColor # end MethodDeclaration
android.text.TextPaint$setXfermode @0 <type>android.text.TextPaint EXP # begin MethodDeclaration
android.graphics.Canvas$drawText @0 <type>android.graphics.Canvas badgeText <type>float EXP <type>android.text.TextPaint # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Canvas$drawRoundRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>float <type>float <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>android.graphics.Paint # begin end Block
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$init @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.espresso.intent.Intents$release @0 this # begin end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.InstrumentationRegistry$getTargetContext EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this <type>String # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "BOOKS LOAD ERROR" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Retry" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.support.test.rule.ActivityTestRule$launchActivity @0 <type>android.support.test.rule.ActivityTestRule null # begin MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "BOOKS LOAD ERROR" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Retry" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Retry" # MethodDeclaration
android.support.test.espresso.action.ViewActions.click EXP this # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Searching for Spring" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.withText EXP this "Why is Nita Upside Down?" # MethodDeclaration
android.support.test.espresso.matcher.ViewMatchers.isDisplayed EXP this # MethodDeclaration
android.support.test.espresso.assertion.ViewAssertions.matches EXP this EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 207 248 246 # begin ClassDeclaration
android.graphics.Color$rgb EXP this 148 212 212 # ClassDeclaration
android.graphics.Color$rgb EXP this 136 180 187 # ClassDeclaration
android.graphics.Color$rgb EXP this 118 174 175 # ClassDeclaration
android.graphics.Color$rgb EXP this 42 109 130 # ClassDeclaration
android.graphics.Color$rgb EXP this 217 80 138 # ClassDeclaration
android.graphics.Color$rgb EXP this 254 149 7 # ClassDeclaration
android.graphics.Color$rgb EXP this 254 247 120 # ClassDeclaration
android.graphics.Color$rgb EXP this 106 167 134 # ClassDeclaration
android.graphics.Color$rgb EXP this 53 194 209 # ClassDeclaration
android.graphics.Color$rgb EXP this 64 89 128 # ClassDeclaration
android.graphics.Color$rgb EXP this 149 165 124 # ClassDeclaration
android.graphics.Color$rgb EXP this 217 184 162 # ClassDeclaration
android.graphics.Color$rgb EXP this 191 134 134 # ClassDeclaration
android.graphics.Color$rgb EXP this 179 48 80 # ClassDeclaration
android.graphics.Color$rgb EXP this 193 37 82 # ClassDeclaration
android.graphics.Color$rgb EXP this 255 102 0 # ClassDeclaration
android.graphics.Color$rgb EXP this 245 199 0 # ClassDeclaration
android.graphics.Color$rgb EXP this 106 150 31 # ClassDeclaration
android.graphics.Color$rgb EXP this 179 100 53 # ClassDeclaration
android.graphics.Color$rgb EXP this 192 255 140 # ClassDeclaration
android.graphics.Color$rgb EXP this 255 247 140 # ClassDeclaration
android.graphics.Color$rgb EXP this 255 208 140 # ClassDeclaration
android.graphics.Color$rgb EXP this 140 234 255 # ClassDeclaration
android.graphics.Color$rgb EXP this 255 140 157 # end ClassDeclaration
<END>
<S2>
<S1>
android.graphics.Color$rgb EXP this 51 181 229 # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.SparseArray$keyAt EXP <type>android.util.SparseArray <type>int # begin Block
android.util.SparseArray$valueAt EXP <type>android.util.SparseArray <type>int # Block
android.util.SparseArray$put @0 <type>android.util.SparseArray EXP EXP # end Block
<END>
<S2>
<S1>
android.content.res.TypedArray$getDrawable <type>android.graphics.drawable.Drawable <type>android.content.res.TypedArray com.mikepenz.materialdrawer.R.styleable.BezelImageView_biv_maskDrawable # begin end ConstructorDeclaration
android.content.res.TypedArray$getBoolean <type>boolean <type>android.content.res.TypedArray com.mikepenz.materialdrawer.R.styleable.BezelImageView_biv_drawCircularShadow true # begin ConstructorDeclaration
android.content.res.TypedArray$getColor <type>int <type>android.content.res.TypedArray com.mikepenz.materialdrawer.R.styleable.BezelImageView_biv_selectorOnPress 0 # ConstructorDeclaration
android.content.res.TypedArray$recycle @0 <type>android.content.res.TypedArray # ConstructorDeclaration
android.graphics.Paint$setColor @0 <type>android.graphics.Paint 0xff000000 # ConstructorDeclaration
android.graphics.Paint$setXfermode @0 <type>android.graphics.Paint EXP # ConstructorDeclaration
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this 1 1 android.graphics.Bitmap.Config.ARGB_8888 # ConstructorDeclaration
android.graphics.ColorMatrix$setSaturation @0 <type>android.graphics.ColorMatrix 0 # end ConstructorDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setCallback @0 <type>android.graphics.drawable.Drawable this # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin Block
android.graphics.Color$green EXP this <type>int # Block
android.graphics.Color$blue EXP this <type>int # Block
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end Block
<END>
<S2>
<S1>
android.graphics.Outline$setOval @0 <type>android.graphics.Outline 0 0 <type>int <type>int # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setBounds @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.graphics.Rect$width <type>int <type>android.graphics.Rect # begin MethodDeclaration
android.graphics.Rect$height <type>int <type>android.graphics.Rect # end MethodDeclaration
android.graphics.Canvas$drawBitmap @0 <type>android.graphics.Canvas <type>android.graphics.Bitmap FIELD FIELD null # begin end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap 0 # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int android.graphics.Bitmap.Config.ARGB_8888 # end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.drawable.Drawable$draw @0 <type>android.graphics.drawable.Drawable <type>android.graphics.Canvas # end Block
android.graphics.Canvas$saveLayer @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint EXP # begin Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorMatrixColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint null # begin end Block
<END>
<S2>
<S1>
android.graphics.Canvas$save <type>int <type>android.graphics.Canvas # begin Block
android.graphics.Canvas$drawRect @0 <type>android.graphics.Canvas 0 0 <type>int <type>int <type>android.graphics.Paint # end Block
android.graphics.Canvas$saveLayer @0 <type>android.graphics.Canvas <type>android.graphics.RectF <type>android.graphics.Paint EXP # begin Block
android.graphics.Canvas$restoreToCount @0 <type>android.graphics.Canvas <type>int # end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.Paint$setColorFilter @0 <type>android.graphics.Paint <type>android.graphics.ColorMatrixColorFilter # begin end Block
<END>
<S2>
<S1>
android.graphics.drawable.Drawable$setState @0 <type>android.graphics.drawable.Drawable EXP # begin end Block
<END>
<S2>
<S1>
android.support.v4.view.ViewCompat$postInvalidateOnAnimation @0 this this # begin end Block
<END>
<S2>
<S1>
android.graphics.Color$red EXP this <type>int # begin MethodDeclaration
android.graphics.Color$green EXP this <type>int # MethodDeclaration
android.graphics.Color$blue EXP this <type>int # MethodDeclaration
android.graphics.Color$argb EXP this <type>int EXP EXP EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$isMutable EXP <type>android.graphics.Bitmap # begin Block
android.graphics.Bitmap$getConfig EXP <type>android.graphics.Bitmap # Block
android.util.Log$v @0 this <type>String EXP # end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$eraseColor @0 <type>android.graphics.Bitmap android.graphics.Color.TRANSPARENT # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$createBitmap <type>android.graphics.Bitmap this <type>int <type>int <type>android.graphics.Bitmap.Config # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setHasAlpha @0 <type>android.graphics.Bitmap true # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$setPremultiplied @0 <type>android.graphics.Bitmap true # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "clearMemory" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.graphics.Bitmap$recycle @0 <type>android.graphics.Bitmap # begin end Block
<END>
<S2>
<S1>
android.util.Log$w @0 this <type>String "Size mismatch, resetting" # begin end Block
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String EXP # begin end Block
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String "onDownMotionEvent" # begin end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$v @0 this <type>String EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.View$findViewById EXP <type>android.view.View R.id.button # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Toast$makeText EXP this EXP <type>String android.widget.Toast.LENGTH_SHORT # begin MethodDeclaration
android.util.Log$v @0 this <type>String EXP # end MethodDeclaration
<END>
<S2>
<S1>
android.graphics.BitmapFactory$decodeResource EXP this EXP com.example.android.uamp.R.drawable.ic_launcher_white # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$connect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$disconnect @0 <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.MediaController$registerCallback @0 <type>android.media.session.MediaController <type>android.media.session.MediaController.Callback # begin end MethodDeclaration
<END>
<S2>
<S1>
android.media.session.PlaybackState$getState EXP <type>android.media.session.PlaybackState # begin end Block
<END>
<S2>
<S1>
android.media.browse.MediaBrowser$getSessionToken EXP <type>android.media.browse.MediaBrowser # begin end MethodDeclaration
<END>
<S2>
<S1>
android.view.ViewConfiguration$get <type>android.view.ViewConfiguration this EXP # begin ConstructorDeclaration
android.view.ViewConfiguration$getScaledTouchSlop <type>int <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMinimumFlingVelocity EXP <type>android.view.ViewConfiguration # ConstructorDeclaration
android.view.ViewConfiguration$getScaledMaximumFlingVelocity <type>int <type>android.view.ViewConfiguration # end ConstructorDeclaration
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # begin end Block
<END>
<S2>
<S1>
android.view.View$getHitRect @0 <type>android.view.View <type>android.graphics.Rect # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX <type>float <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawY <type>float <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$obtain <type>android.view.VelocityTracker this # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # begin Block
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$getRawY EXP <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$getParent EXP <type>android.view.View # begin Block
android.view.MotionEvent$obtain <type>android.view.MotionEvent this <type>android.view.MotionEvent # Block
android.view.MotionEvent$getActionIndex EXP <type>android.view.MotionEvent # Block
android.view.MotionEvent$setAction @0 <type>android.view.MotionEvent EXP # Block
android.view.View$onTouchEvent @0 <type>android.view.View <type>android.view.MotionEvent # Block
android.view.MotionEvent$recycle @0 <type>android.view.MotionEvent # end Block
<END>
<S2>
<S1>
android.view.View$setTranslationX @0 <type>android.view.View EXP # begin end Block
<END>
<S2>
<S1>
android.view.MotionEvent$getRawX EXP <type>android.view.MotionEvent # begin Block
android.view.VelocityTracker$addMovement @0 <type>android.view.VelocityTracker <type>android.view.MotionEvent # Block
android.view.VelocityTracker$computeCurrentVelocity @0 <type>android.view.VelocityTracker 1000 # Block
android.view.VelocityTracker$getXVelocity <type>float <type>android.view.VelocityTracker # Block
android.view.VelocityTracker$getYVelocity EXP <type>android.view.VelocityTracker # end Block
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$getXVelocity EXP <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.VelocityTracker$recycle @0 <type>android.view.VelocityTracker # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end Block
<END>
<S2>
<S1>
android.view.View$animate EXP <type>android.view.View # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Spinner$setOnItemSelectedListener @0 <type>android.widget.Spinner EXP # begin end MethodDeclaration
<END>
<S2>
<S1>
android.widget.CheckBox$isChecked EXP <type>android.widget.CheckBox # begin MethodDeclaration
android.widget.Spinner$setVisibility @0 <type>android.widget.Spinner <type>int # end MethodDeclaration
<END>
<S2>
<S1>
android.widget.Spinner$getSelectedItem EXP <type>android.widget.Spinner # begin MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.EditText$getText EXP <type>android.widget.EditText # MethodDeclaration
android.widget.Spinner$getSelectedItemPosition <type>int <type>android.widget.Spinner # MethodDeclaration
android.content.Intent$setClass @0 <type>android.content.Intent this TestRunnerActivity # MethodDeclaration
android.content.Intent$putExtra @0 <type>android.content.Intent "params" <type>TestParams # end MethodDeclaration
<END>
<S2>
<S1>
android.util.Log$d @0 this <type>String "Exception opening random Gist" <type>Exception # begin end MethodDeclaration
<END>
